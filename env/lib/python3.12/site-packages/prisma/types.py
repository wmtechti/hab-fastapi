# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template types.py.jinja --
from typing import TypeVar

import httpx
from .utils import _NoneType



# TODO: filters with aggregates should have their own recursive fields
# TODO: cleanup whitespace control
# TODO: add an argument to signify that the last iteration should be skipped


SortMode = Literal['default', 'insensitive']
SortOrder = Literal['asc', 'desc']

MetricsFormat = Literal['json', 'prometheus']


class _DatasourceOverrideOptional(TypedDict, total=False):
    env: str
    name: str


class DatasourceOverride(_DatasourceOverrideOptional):
    url: str


# NOTE: we don't support some options as their type hints are not publicly exposed
# https://github.com/encode/httpx/discussions/1977
class HttpConfig(TypedDict, total=False):
    app: Callable[[Mapping[str, Any], Any], Any]
    http1: bool
    http2: bool
    limits: httpx.Limits
    timeout: Union[None, float, httpx.Timeout]
    trust_env: bool
    max_redirects: int


# types that can be serialized to json by our query builder
Serializable = Union[
    None,
    bool,
    float,
    int,
    str,
    datetime.datetime,
    List[Any],
    Dict[None, Any],
    Dict[bool, Any],
    Dict[float, Any],
    Dict[int, Any],
    Dict[str, Any],
]


    

StringFilter = TypedDict(
    'StringFilter',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive1'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive1 = TypedDict(
    'StringFilterRecursive1',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive2'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive2 = TypedDict(
    'StringFilterRecursive2',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive3'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive3 = TypedDict(
    'StringFilterRecursive3',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive4'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive4 = TypedDict(
    'StringFilterRecursive4',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
                'mode': SortMode,
    },
    total=False,
)


class StringWithAggregatesFilter(StringFilter, total=False):
    _max: 'StringFilter'
    _min: 'StringFilter'
    _sum: 'StringFilter'
    _avg: 'StringFilter'
    _count: 'IntFilter'


    

DateTimeFilter = TypedDict(
    'DateTimeFilter',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive1'],
    },
    total=False,
)


DateTimeFilterRecursive1 = TypedDict(
    'DateTimeFilterRecursive1',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive2'],
    },
    total=False,
)


DateTimeFilterRecursive2 = TypedDict(
    'DateTimeFilterRecursive2',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive3'],
    },
    total=False,
)


DateTimeFilterRecursive3 = TypedDict(
    'DateTimeFilterRecursive3',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive4'],
    },
    total=False,
)


DateTimeFilterRecursive4 = TypedDict(
    'DateTimeFilterRecursive4',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
            },
    total=False,
)


class DateTimeWithAggregatesFilter(DateTimeFilter, total=False):
    _max: 'DateTimeFilter'
    _min: 'DateTimeFilter'
    _sum: 'DateTimeFilter'
    _avg: 'DateTimeFilter'
    _count: 'IntFilter'


    

BooleanFilter = TypedDict(
    'BooleanFilter',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive1'],
    },
    total=False,
)


BooleanFilterRecursive1 = TypedDict(
    'BooleanFilterRecursive1',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive2'],
    },
    total=False,
)


BooleanFilterRecursive2 = TypedDict(
    'BooleanFilterRecursive2',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive3'],
    },
    total=False,
)


BooleanFilterRecursive3 = TypedDict(
    'BooleanFilterRecursive3',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive4'],
    },
    total=False,
)


BooleanFilterRecursive4 = TypedDict(
    'BooleanFilterRecursive4',
    {
        'equals': bool,
            },
    total=False,
)


class BooleanWithAggregatesFilter(BooleanFilter, total=False):
    _max: 'BooleanFilter'
    _min: 'BooleanFilter'
    _sum: 'BooleanFilter'
    _avg: 'BooleanFilter'
    _count: 'IntFilter'


    

IntFilter = TypedDict(
    'IntFilter',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive1'],
    },
    total=False,
)


IntFilterRecursive1 = TypedDict(
    'IntFilterRecursive1',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive2'],
    },
    total=False,
)


IntFilterRecursive2 = TypedDict(
    'IntFilterRecursive2',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive3'],
    },
    total=False,
)


IntFilterRecursive3 = TypedDict(
    'IntFilterRecursive3',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive4'],
    },
    total=False,
)


IntFilterRecursive4 = TypedDict(
    'IntFilterRecursive4',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
            },
    total=False,
)


class IntWithAggregatesFilter(IntFilter, total=False):
    _max: 'IntFilter'
    _min: 'IntFilter'
    _sum: 'IntFilter'
    _avg: 'IntFilter'
    _count: 'IntFilter'


BigIntFilter = IntFilter
BigIntWithAggregatesFilter = IntWithAggregatesFilter
    

FloatFilter = TypedDict(
    'FloatFilter',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive1'],
    },
    total=False,
)


FloatFilterRecursive1 = TypedDict(
    'FloatFilterRecursive1',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive2'],
    },
    total=False,
)


FloatFilterRecursive2 = TypedDict(
    'FloatFilterRecursive2',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive3'],
    },
    total=False,
)


FloatFilterRecursive3 = TypedDict(
    'FloatFilterRecursive3',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive4'],
    },
    total=False,
)


FloatFilterRecursive4 = TypedDict(
    'FloatFilterRecursive4',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
            },
    total=False,
)


class FloatWithAggregatesFilter(FloatFilter, total=False):
    _max: 'FloatFilter'
    _min: 'FloatFilter'
    _sum: 'FloatFilter'
    _avg: 'FloatFilter'
    _count: 'IntFilter'


    

BytesFilter = TypedDict(
    'BytesFilter',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive1'],
    },
    total=False,
)


BytesFilterRecursive1 = TypedDict(
    'BytesFilterRecursive1',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive2'],
    },
    total=False,
)


BytesFilterRecursive2 = TypedDict(
    'BytesFilterRecursive2',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive3'],
    },
    total=False,
)


BytesFilterRecursive3 = TypedDict(
    'BytesFilterRecursive3',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive4'],
    },
    total=False,
)


BytesFilterRecursive4 = TypedDict(
    'BytesFilterRecursive4',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
            },
    total=False,
)


class BytesWithAggregatesFilter(BytesFilter, total=False):
    _max: 'BytesFilter'
    _min: 'BytesFilter'
    _sum: 'BytesFilter'
    _avg: 'BytesFilter'
    _count: 'IntFilter'


# TODO: preview feature for improving JSON filtering
JsonFilter = TypedDict(
    'JsonFilter',
    {
        'equals': 'fields.Json',
        'not': 'fields.Json',
    },
    total=False,
)


class JsonWithAggregatesFilter(JsonFilter, total=False):
    _max: 'JsonFilter'
    _min: 'JsonFilter'
    _sum: 'JsonFilter'
    _avg: 'JsonFilter'
    _count: 'IntFilter'


    

DecimalFilter = TypedDict(
    'DecimalFilter',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive1'],
    },
    total=False,
)


DecimalFilterRecursive1 = TypedDict(
    'DecimalFilterRecursive1',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive2'],
    },
    total=False,
)


DecimalFilterRecursive2 = TypedDict(
    'DecimalFilterRecursive2',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive3'],
    },
    total=False,
)


DecimalFilterRecursive3 = TypedDict(
    'DecimalFilterRecursive3',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive4'],
    },
    total=False,
)


DecimalFilterRecursive4 = TypedDict(
    'DecimalFilterRecursive4',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
            },
    total=False,
)


class DecimalWithAggregatesFilter(StringFilter, total=False):
    _max: 'DecimalFilter'
    _min: 'DecimalFilter'
    _sum: 'DecimalFilter'
    _avg: 'DecimalFilter'
    _count: 'IntFilter'


class _FloatSetInput(TypedDict):
    set: float


class _FloatDivideInput(TypedDict):
    divide: float


class _FloatMultiplyInput(TypedDict):
    multiply: float


class _FloatIncrementInput(TypedDict):
    increment: float


class _FloatDecrementInput(TypedDict):
    decrement: float


class _IntSetInput(TypedDict):
    set: int


class _IntDivideInput(TypedDict):
    divide: int


class _IntMultiplyInput(TypedDict):
    multiply: int


class _IntIncrementInput(TypedDict):
    increment: int


class _IntDecrementInput(TypedDict):
    decrement: int


AtomicFloatInput = Union[
    _FloatSetInput,
    _FloatDivideInput,
    _FloatMultiplyInput,
    _FloatIncrementInput,
    _FloatDecrementInput,
]
AtomicIntInput = Union[
    _IntSetInput,
    _IntDivideInput,
    _IntMultiplyInput,
    _IntIncrementInput,
    _IntDecrementInput,
]
AtomicBigIntInput = AtomicIntInput

class _StringListFilterEqualsInput(TypedDict):
    equals: Optional[List[_str]]


class _StringListFilterHasInput(TypedDict):
    has: _str


class _StringListFilterHasEveryInput(TypedDict):
    has_every: List[_str]


class _StringListFilterHasSomeInput(TypedDict):
    has_some: List[_str]


class _StringListFilterIsEmptyInput(TypedDict):
    is_empty: bool


StringListFilter = Union[
    _StringListFilterHasInput,
    _StringListFilterEqualsInput,
    _StringListFilterHasSomeInput,
    _StringListFilterIsEmptyInput,
    _StringListFilterHasEveryInput,
]


class _StringListUpdateSet(TypedDict):
    set: List[_str]


class _StringListUpdatePush(TypedDict):
    push: List[_str]


StringListUpdate = Union[
    List[_str],
    _StringListUpdateSet,
    _StringListUpdatePush,
]

class _BytesListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Base64']]


class _BytesListFilterHasInput(TypedDict):
    has: 'fields.Base64'


class _BytesListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Base64']


class _BytesListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Base64']


class _BytesListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BytesListFilter = Union[
    _BytesListFilterHasInput,
    _BytesListFilterEqualsInput,
    _BytesListFilterHasSomeInput,
    _BytesListFilterIsEmptyInput,
    _BytesListFilterHasEveryInput,
]


class _BytesListUpdateSet(TypedDict):
    set: List['fields.Base64']


class _BytesListUpdatePush(TypedDict):
    push: List['fields.Base64']


BytesListUpdate = Union[
    List['fields.Base64'],
    _BytesListUpdateSet,
    _BytesListUpdatePush,
]

class _DateTimeListFilterEqualsInput(TypedDict):
    equals: Optional[List[datetime.datetime]]


class _DateTimeListFilterHasInput(TypedDict):
    has: datetime.datetime


class _DateTimeListFilterHasEveryInput(TypedDict):
    has_every: List[datetime.datetime]


class _DateTimeListFilterHasSomeInput(TypedDict):
    has_some: List[datetime.datetime]


class _DateTimeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DateTimeListFilter = Union[
    _DateTimeListFilterHasInput,
    _DateTimeListFilterEqualsInput,
    _DateTimeListFilterHasSomeInput,
    _DateTimeListFilterIsEmptyInput,
    _DateTimeListFilterHasEveryInput,
]


class _DateTimeListUpdateSet(TypedDict):
    set: List[datetime.datetime]


class _DateTimeListUpdatePush(TypedDict):
    push: List[datetime.datetime]


DateTimeListUpdate = Union[
    List[datetime.datetime],
    _DateTimeListUpdateSet,
    _DateTimeListUpdatePush,
]

class _BooleanListFilterEqualsInput(TypedDict):
    equals: Optional[List[_bool]]


class _BooleanListFilterHasInput(TypedDict):
    has: _bool


class _BooleanListFilterHasEveryInput(TypedDict):
    has_every: List[_bool]


class _BooleanListFilterHasSomeInput(TypedDict):
    has_some: List[_bool]


class _BooleanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BooleanListFilter = Union[
    _BooleanListFilterHasInput,
    _BooleanListFilterEqualsInput,
    _BooleanListFilterHasSomeInput,
    _BooleanListFilterIsEmptyInput,
    _BooleanListFilterHasEveryInput,
]


class _BooleanListUpdateSet(TypedDict):
    set: List[_bool]


class _BooleanListUpdatePush(TypedDict):
    push: List[_bool]


BooleanListUpdate = Union[
    List[_bool],
    _BooleanListUpdateSet,
    _BooleanListUpdatePush,
]

class _IntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _IntListFilterHasInput(TypedDict):
    has: _int


class _IntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _IntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _IntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


IntListFilter = Union[
    _IntListFilterHasInput,
    _IntListFilterEqualsInput,
    _IntListFilterHasSomeInput,
    _IntListFilterIsEmptyInput,
    _IntListFilterHasEveryInput,
]


class _IntListUpdateSet(TypedDict):
    set: List[_int]


class _IntListUpdatePush(TypedDict):
    push: List[_int]


IntListUpdate = Union[
    List[_int],
    _IntListUpdateSet,
    _IntListUpdatePush,
]

class _BigIntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _BigIntListFilterHasInput(TypedDict):
    has: _int


class _BigIntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _BigIntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _BigIntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BigIntListFilter = Union[
    _BigIntListFilterHasInput,
    _BigIntListFilterEqualsInput,
    _BigIntListFilterHasSomeInput,
    _BigIntListFilterIsEmptyInput,
    _BigIntListFilterHasEveryInput,
]


class _BigIntListUpdateSet(TypedDict):
    set: List[_int]


class _BigIntListUpdatePush(TypedDict):
    push: List[_int]


BigIntListUpdate = Union[
    List[_int],
    _BigIntListUpdateSet,
    _BigIntListUpdatePush,
]

class _FloatListFilterEqualsInput(TypedDict):
    equals: Optional[List[_float]]


class _FloatListFilterHasInput(TypedDict):
    has: _float


class _FloatListFilterHasEveryInput(TypedDict):
    has_every: List[_float]


class _FloatListFilterHasSomeInput(TypedDict):
    has_some: List[_float]


class _FloatListFilterIsEmptyInput(TypedDict):
    is_empty: bool


FloatListFilter = Union[
    _FloatListFilterHasInput,
    _FloatListFilterEqualsInput,
    _FloatListFilterHasSomeInput,
    _FloatListFilterIsEmptyInput,
    _FloatListFilterHasEveryInput,
]


class _FloatListUpdateSet(TypedDict):
    set: List[_float]


class _FloatListUpdatePush(TypedDict):
    push: List[_float]


FloatListUpdate = Union[
    List[_float],
    _FloatListUpdateSet,
    _FloatListUpdatePush,
]

class _JsonListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Json']]


class _JsonListFilterHasInput(TypedDict):
    has: 'fields.Json'


class _JsonListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Json']


class _JsonListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Json']


class _JsonListFilterIsEmptyInput(TypedDict):
    is_empty: bool


JsonListFilter = Union[
    _JsonListFilterHasInput,
    _JsonListFilterEqualsInput,
    _JsonListFilterHasSomeInput,
    _JsonListFilterIsEmptyInput,
    _JsonListFilterHasEveryInput,
]


class _JsonListUpdateSet(TypedDict):
    set: List['fields.Json']


class _JsonListUpdatePush(TypedDict):
    push: List['fields.Json']


JsonListUpdate = Union[
    List['fields.Json'],
    _JsonListUpdateSet,
    _JsonListUpdatePush,
]

class _DecimalListFilterEqualsInput(TypedDict):
    equals: Optional[List[decimal.Decimal]]


class _DecimalListFilterHasInput(TypedDict):
    has: decimal.Decimal


class _DecimalListFilterHasEveryInput(TypedDict):
    has_every: List[decimal.Decimal]


class _DecimalListFilterHasSomeInput(TypedDict):
    has_some: List[decimal.Decimal]


class _DecimalListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DecimalListFilter = Union[
    _DecimalListFilterHasInput,
    _DecimalListFilterEqualsInput,
    _DecimalListFilterHasSomeInput,
    _DecimalListFilterIsEmptyInput,
    _DecimalListFilterHasEveryInput,
]


class _DecimalListUpdateSet(TypedDict):
    set: List[decimal.Decimal]


class _DecimalListUpdatePush(TypedDict):
    push: List[decimal.Decimal]


DecimalListUpdate = Union[
    List[decimal.Decimal],
    _DecimalListUpdateSet,
    _DecimalListUpdatePush,
]


# User types

class UserOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the User create method"""
    id: _str
    name: Optional[_str]
    email: Optional[_str]
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    stripeCustomerId: Optional[_str]
    stripeSubscriptionId: Optional[_str]
    stripeSubscriptionStatus: Optional[_str]
    stripePriceId: Optional[_str]
    accounts: 'AccountCreateManyNestedWithoutRelationsInput'
    sessions: 'SessionCreateManyNestedWithoutRelationsInput'
    todos: 'TodoCreateManyNestedWithoutRelationsInput'
    userType: 'UserTypeCreateManyNestedWithoutRelationsInput'
    profiles: 'ProfileCreateManyNestedWithoutRelationsInput'
    gyms: 'GymCreateManyNestedWithoutRelationsInput'
    responsibleGyms: 'GymCreateManyNestedWithoutRelationsInput'
    isResponsibleForBilling: _bool
    questionarioProntidaoAvaliacaoFisica: 'QuestionarioProntidaoAvaliacaoFisicaCreateManyNestedWithoutRelationsInput'
    formularioAvaliacaoFisica: 'FormularioAvaliacaoFisicaCreateManyNestedWithoutRelationsInput'
    registros: 'RegistraTreinoCreateManyNestedWithoutRelationsInput'


class UserCreateInput(UserOptionalCreateInput):
    """Required arguments to the User create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the User create method, without relations"""
    id: _str
    name: Optional[_str]
    email: Optional[_str]
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    stripeCustomerId: Optional[_str]
    stripeSubscriptionId: Optional[_str]
    stripeSubscriptionStatus: Optional[_str]
    stripePriceId: Optional[_str]
    isResponsibleForBilling: _bool


class UserCreateWithoutRelationsInput(UserOptionalCreateWithoutRelationsInput):
    """Required arguments to the User create method, without relations"""


class UserCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'


class UserCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserCreateWithoutRelationsInput', List['UserCreateWithoutRelationsInput']]
    connect: Union['UserWhereUniqueInput', List['UserWhereUniqueInput']]


_UserWhereUnique_id_Input = TypedDict(
    '_UserWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_UserWhereUnique_email_Input = TypedDict(
    '_UserWhereUnique_email_Input',
    {
        'email': '_str',
    },
    total=True
)

UserWhereUniqueInput = Union[
    '_UserWhereUnique_id_Input',
    '_UserWhereUnique_email_Input',
]


class UserUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: Optional[_str]
    email: Optional[_str]
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    stripeCustomerId: Optional[_str]
    stripeSubscriptionId: Optional[_str]
    stripeSubscriptionStatus: Optional[_str]
    stripePriceId: Optional[_str]
    accounts: 'AccountUpdateManyWithoutRelationsInput'
    sessions: 'SessionUpdateManyWithoutRelationsInput'
    todos: 'TodoUpdateManyWithoutRelationsInput'
    userType: 'UserTypeUpdateManyWithoutRelationsInput'
    profiles: 'ProfileUpdateManyWithoutRelationsInput'
    gyms: 'GymUpdateManyWithoutRelationsInput'
    responsibleGyms: 'GymUpdateManyWithoutRelationsInput'
    isResponsibleForBilling: _bool
    questionarioProntidaoAvaliacaoFisica: 'QuestionarioProntidaoAvaliacaoFisicaUpdateManyWithoutRelationsInput'
    formularioAvaliacaoFisica: 'FormularioAvaliacaoFisicaUpdateManyWithoutRelationsInput'
    registros: 'RegistraTreinoUpdateManyWithoutRelationsInput'


class UserUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: Optional[_str]
    email: Optional[_str]
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    stripeCustomerId: Optional[_str]
    stripeSubscriptionId: Optional[_str]
    stripeSubscriptionStatus: Optional[_str]
    stripePriceId: Optional[_str]
    isResponsibleForBilling: _bool


class UserUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserCreateWithoutRelationsInput']
    connect: List['UserWhereUniqueInput']
    set: List['UserWhereUniqueInput']
    disconnect: List['UserWhereUniqueInput']
    delete: List['UserWhereUniqueInput']

    # TODO
    # update: List['UserUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserScalarWhereInput']
    # upsert: List['UserUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['UserCreateOrConnectWithoutRelationsInput']


class UserUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserUpdateInput'
    # upsert: 'UserUpsertWithoutRelationsInput'
    # connectOrCreate: 'UserCreateOrConnectWithoutRelationsInput'


class UserUpsertInput(TypedDict):
    create: 'UserCreateInput'
    update: 'UserUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_User_id_OrderByInput = TypedDict(
    '_User_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_User_name_OrderByInput = TypedDict(
    '_User_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_User_email_OrderByInput = TypedDict(
    '_User_email_OrderByInput',
    {
        'email': 'SortOrder',
    },
    total=True
)

_User_emailVerified_OrderByInput = TypedDict(
    '_User_emailVerified_OrderByInput',
    {
        'emailVerified': 'SortOrder',
    },
    total=True
)

_User_image_OrderByInput = TypedDict(
    '_User_image_OrderByInput',
    {
        'image': 'SortOrder',
    },
    total=True
)

_User_stripeCustomerId_OrderByInput = TypedDict(
    '_User_stripeCustomerId_OrderByInput',
    {
        'stripeCustomerId': 'SortOrder',
    },
    total=True
)

_User_stripeSubscriptionId_OrderByInput = TypedDict(
    '_User_stripeSubscriptionId_OrderByInput',
    {
        'stripeSubscriptionId': 'SortOrder',
    },
    total=True
)

_User_stripeSubscriptionStatus_OrderByInput = TypedDict(
    '_User_stripeSubscriptionStatus_OrderByInput',
    {
        'stripeSubscriptionStatus': 'SortOrder',
    },
    total=True
)

_User_stripePriceId_OrderByInput = TypedDict(
    '_User_stripePriceId_OrderByInput',
    {
        'stripePriceId': 'SortOrder',
    },
    total=True
)

_User_isResponsibleForBilling_OrderByInput = TypedDict(
    '_User_isResponsibleForBilling_OrderByInput',
    {
        'isResponsibleForBilling': 'SortOrder',
    },
    total=True
)

UserOrderByInput = Union[
    '_User_id_OrderByInput',
    '_User_name_OrderByInput',
    '_User_email_OrderByInput',
    '_User_emailVerified_OrderByInput',
    '_User_image_OrderByInput',
    '_User_stripeCustomerId_OrderByInput',
    '_User_stripeSubscriptionId_OrderByInput',
    '_User_stripeSubscriptionStatus_OrderByInput',
    '_User_stripePriceId_OrderByInput',
    '_User_isResponsibleForBilling_OrderByInput',
]



# recursive User types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserRelationFilter = TypedDict(
    'UserRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserInclude(TypedDict, total=False):
    """User relational arguments"""
    accounts: Union[bool, 'FindManyAccountArgsFromUser']
    sessions: Union[bool, 'FindManySessionArgsFromUser']
    todos: Union[bool, 'FindManyTodoArgsFromUser']
    userType: Union[bool, 'FindManyUserTypeArgsFromUser']
    profiles: Union[bool, 'FindManyProfileArgsFromUser']
    gyms: Union[bool, 'FindManyGymArgsFromUser']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUser']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUser']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUser']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUser']


    

class UserIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromUserRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromUserRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserRecursive1']


class UserIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromUserRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromUserRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserRecursive2']


class UserIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromUserRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromUserRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserRecursive3']


class UserIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromUserRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromUserRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserRecursive4']


class UserIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    role: Union[bool, 'RoleArgsFromUserRecursive1']
    user: Union[bool, 'UserArgsFromUserRecursive1']


class ProfileIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    role: Union[bool, 'RoleArgsFromUserRecursive2']
    user: Union[bool, 'UserArgsFromUserRecursive2']


class ProfileIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    role: Union[bool, 'RoleArgsFromUserRecursive3']
    user: Union[bool, 'UserArgsFromUserRecursive3']


class ProfileIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    role: Union[bool, 'RoleArgsFromUserRecursive4']
    user: Union[bool, 'UserArgsFromUserRecursive4']


class ProfileIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ProfileArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyProfileArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive1']


class RoleIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive2']


class RoleIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive3']


class RoleIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserRecursive4']


class RoleIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class RoleArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyRoleArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive1']
    responsible: Union[bool, 'UserArgsFromUserRecursive1']


class GymIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive2']
    responsible: Union[bool, 'UserArgsFromUserRecursive2']


class GymIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive3']
    responsible: Union[bool, 'UserArgsFromUserRecursive3']


class GymIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive4']
    responsible: Union[bool, 'UserArgsFromUserRecursive4']


class GymIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class GymArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyGymArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class UserTypeIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class UserTypeIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class UserTypeIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class UserTypeIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserTypeArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserTypeArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class AccountIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class AccountIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class AccountIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class AccountIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class AccountArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyAccountArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class SessionIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class SessionIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class SessionIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class SessionIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class SessionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManySessionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class VerificationTokenArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyVerificationTokenArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class TodoIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class TodoIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class TodoIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class TodoIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class TodoArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyTodoArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class FormularioAvaliacaoFisicaIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class FormularioAvaliacaoFisicaIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class FormularioAvaliacaoFisicaIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class FormularioAvaliacaoFisicaIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class FormularioAvaliacaoFisicaArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""


class TreinoIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""


class TreinoIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""


class TreinoIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""


class TreinoIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class TreinoArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyTreinoArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class RegistraTreinoIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class RegistraTreinoIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class RegistraTreinoIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class RegistraTreinoIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class RegistraTreinoArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyRegistraTreinoArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyUserArgs = FindManyUserArgsFromUser
FindFirstUserArgs = FindManyUserArgsFromUser


    

class UserWhereInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    stripeCustomerId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionStatus: Union[None, _str, 'types.StringFilter']
    stripePriceId: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    todos: 'TodoListRelationFilter'
    userType: 'UserTypeListRelationFilter'
    profiles: 'ProfileListRelationFilter'
    gyms: 'GymListRelationFilter'
    responsibleGyms: 'GymListRelationFilter'
    isResponsibleForBilling: Union[_bool, 'types.BooleanFilter']
    questionarioProntidaoAvaliacaoFisica: 'QuestionarioProntidaoAvaliacaoFisicaListRelationFilter'
    formularioAvaliacaoFisica: 'FormularioAvaliacaoFisicaListRelationFilter'
    registros: 'RegistraTreinoListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive1', List['UserWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive1']
    OR: List['UserWhereInputRecursive1']
    NOT: List['UserWhereInputRecursive1']


class UserWhereInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    stripeCustomerId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionStatus: Union[None, _str, 'types.StringFilter']
    stripePriceId: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    todos: 'TodoListRelationFilter'
    userType: 'UserTypeListRelationFilter'
    profiles: 'ProfileListRelationFilter'
    gyms: 'GymListRelationFilter'
    responsibleGyms: 'GymListRelationFilter'
    isResponsibleForBilling: Union[_bool, 'types.BooleanFilter']
    questionarioProntidaoAvaliacaoFisica: 'QuestionarioProntidaoAvaliacaoFisicaListRelationFilter'
    formularioAvaliacaoFisica: 'FormularioAvaliacaoFisicaListRelationFilter'
    registros: 'RegistraTreinoListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive2', List['UserWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive2']
    OR: List['UserWhereInputRecursive2']
    NOT: List['UserWhereInputRecursive2']


class UserWhereInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    stripeCustomerId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionStatus: Union[None, _str, 'types.StringFilter']
    stripePriceId: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    todos: 'TodoListRelationFilter'
    userType: 'UserTypeListRelationFilter'
    profiles: 'ProfileListRelationFilter'
    gyms: 'GymListRelationFilter'
    responsibleGyms: 'GymListRelationFilter'
    isResponsibleForBilling: Union[_bool, 'types.BooleanFilter']
    questionarioProntidaoAvaliacaoFisica: 'QuestionarioProntidaoAvaliacaoFisicaListRelationFilter'
    formularioAvaliacaoFisica: 'FormularioAvaliacaoFisicaListRelationFilter'
    registros: 'RegistraTreinoListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive3', List['UserWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive3']
    OR: List['UserWhereInputRecursive3']
    NOT: List['UserWhereInputRecursive3']


class UserWhereInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    stripeCustomerId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionStatus: Union[None, _str, 'types.StringFilter']
    stripePriceId: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    todos: 'TodoListRelationFilter'
    userType: 'UserTypeListRelationFilter'
    profiles: 'ProfileListRelationFilter'
    gyms: 'GymListRelationFilter'
    responsibleGyms: 'GymListRelationFilter'
    isResponsibleForBilling: Union[_bool, 'types.BooleanFilter']
    questionarioProntidaoAvaliacaoFisica: 'QuestionarioProntidaoAvaliacaoFisicaListRelationFilter'
    formularioAvaliacaoFisica: 'FormularioAvaliacaoFisicaListRelationFilter'
    registros: 'RegistraTreinoListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive4', List['UserWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive4']
    OR: List['UserWhereInputRecursive4']
    NOT: List['UserWhereInputRecursive4']


class UserWhereInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    stripeCustomerId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionId: Union[None, _str, 'types.StringFilter']
    stripeSubscriptionStatus: Union[None, _str, 'types.StringFilter']
    stripePriceId: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    todos: 'TodoListRelationFilter'
    userType: 'UserTypeListRelationFilter'
    profiles: 'ProfileListRelationFilter'
    gyms: 'GymListRelationFilter'
    responsibleGyms: 'GymListRelationFilter'
    isResponsibleForBilling: Union[_bool, 'types.BooleanFilter']
    questionarioProntidaoAvaliacaoFisica: 'QuestionarioProntidaoAvaliacaoFisicaListRelationFilter'
    formularioAvaliacaoFisica: 'FormularioAvaliacaoFisicaListRelationFilter'
    registros: 'RegistraTreinoListRelationFilter'



# aggregate User types


    

class UserScalarWhereWithAggregatesInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    stripeCustomerId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionStatus: Union[_str, 'types.StringWithAggregatesFilter']
    stripePriceId: Union[_str, 'types.StringWithAggregatesFilter']
    isResponsibleForBilling: Union[_bool, 'types.BooleanWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive1']


class UserScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    stripeCustomerId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionStatus: Union[_str, 'types.StringWithAggregatesFilter']
    stripePriceId: Union[_str, 'types.StringWithAggregatesFilter']
    isResponsibleForBilling: Union[_bool, 'types.BooleanWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive2']


class UserScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    stripeCustomerId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionStatus: Union[_str, 'types.StringWithAggregatesFilter']
    stripePriceId: Union[_str, 'types.StringWithAggregatesFilter']
    isResponsibleForBilling: Union[_bool, 'types.BooleanWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive3']


class UserScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    stripeCustomerId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionStatus: Union[_str, 'types.StringWithAggregatesFilter']
    stripePriceId: Union[_str, 'types.StringWithAggregatesFilter']
    isResponsibleForBilling: Union[_bool, 'types.BooleanWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive4']


class UserScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    stripeCustomerId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionId: Union[_str, 'types.StringWithAggregatesFilter']
    stripeSubscriptionStatus: Union[_str, 'types.StringWithAggregatesFilter']
    stripePriceId: Union[_str, 'types.StringWithAggregatesFilter']
    isResponsibleForBilling: Union[_bool, 'types.BooleanWithAggregatesFilter']



class UserGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    email: _str
    emailVerified: datetime.datetime
    image: _str
    stripeCustomerId: _str
    stripeSubscriptionId: _str
    stripeSubscriptionStatus: _str
    stripePriceId: _str
    isResponsibleForBilling: _bool
    _sum: 'UserSumAggregateOutput'
    _avg: 'UserAvgAggregateOutput'
    _min: 'UserMinAggregateOutput'
    _max: 'UserMaxAggregateOutput'
    _count: 'UserCountAggregateOutput'


class UserAvgAggregateOutput(TypedDict, total=False):
    """User output for aggregating averages"""


class UserSumAggregateOutput(TypedDict, total=False):
    """User output for aggregating sums"""


class UserScalarAggregateOutput(TypedDict, total=False):
    """User output including scalar fields"""
    id: _str
    name: _str
    email: _str
    emailVerified: datetime.datetime
    image: _str
    stripeCustomerId: _str
    stripeSubscriptionId: _str
    stripeSubscriptionStatus: _str
    stripePriceId: _str
    isResponsibleForBilling: _bool


UserMinAggregateOutput = UserScalarAggregateOutput
UserMaxAggregateOutput = UserScalarAggregateOutput


class UserMaxAggregateInput(TypedDict, total=False):
    """User input for aggregating by max"""
    id: bool
    name: bool
    email: bool
    emailVerified: bool
    image: bool
    stripeCustomerId: bool
    stripeSubscriptionId: bool
    stripeSubscriptionStatus: bool
    stripePriceId: bool
    isResponsibleForBilling: bool


class UserMinAggregateInput(TypedDict, total=False):
    """User input for aggregating by min"""
    id: bool
    name: bool
    email: bool
    emailVerified: bool
    image: bool
    stripeCustomerId: bool
    stripeSubscriptionId: bool
    stripeSubscriptionStatus: bool
    stripePriceId: bool
    isResponsibleForBilling: bool


class UserNumberAggregateInput(TypedDict, total=False):
    """User input for aggregating numbers"""


UserAvgAggregateInput = UserNumberAggregateInput
UserSumAggregateInput = UserNumberAggregateInput


UserCountAggregateInput = TypedDict(
    'UserCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'email': bool,
        'emailVerified': bool,
        'image': bool,
        'stripeCustomerId': bool,
        'stripeSubscriptionId': bool,
        'stripeSubscriptionStatus': bool,
        'stripePriceId': bool,
        'isResponsibleForBilling': bool,
        '_all': bool,
    },
    total=False,
)

UserCountAggregateOutput = TypedDict(
    'UserCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'email': int,
        'emailVerified': int,
        'image': int,
        'stripeCustomerId': int,
        'stripeSubscriptionId': int,
        'stripeSubscriptionStatus': int,
        'stripePriceId': int,
        'isResponsibleForBilling': int,
        '_all': int,
    },
    total=False,
)


UserKeys = Literal[
    'id',
    'name',
    'email',
    'emailVerified',
    'image',
    'stripeCustomerId',
    'stripeSubscriptionId',
    'stripeSubscriptionStatus',
    'stripePriceId',
    'accounts',
    'sessions',
    'todos',
    'userType',
    'profiles',
    'gyms',
    'responsibleGyms',
    'isResponsibleForBilling',
    'questionarioProntidaoAvaliacaoFisica',
    'formularioAvaliacaoFisica',
    'registros',
]
UserScalarFieldKeys = Literal[
    'id',
    'name',
    'email',
    'emailVerified',
    'image',
    'stripeCustomerId',
    'stripeSubscriptionId',
    'stripeSubscriptionStatus',
    'stripePriceId',
    'isResponsibleForBilling',
]
UserScalarFieldKeysT = TypeVar('UserScalarFieldKeysT', bound=UserScalarFieldKeys)

UserRelationalFieldKeys = Literal[
        'accounts',
        'sessions',
        'todos',
        'userType',
        'profiles',
        'gyms',
        'responsibleGyms',
        'questionarioProntidaoAvaliacaoFisica',
        'formularioAvaliacaoFisica',
        'registros',
    ]

# Profile types

class ProfileOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Profile create method"""
    id: _str
    role: 'RoleCreateNestedWithoutRelationsInput'
    roleId: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    userId: _str


class ProfileCreateInput(ProfileOptionalCreateInput):
    """Required arguments to the Profile create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ProfileOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Profile create method, without relations"""
    id: _str
    roleId: _str
    userId: _str


class ProfileCreateWithoutRelationsInput(ProfileOptionalCreateWithoutRelationsInput):
    """Required arguments to the Profile create method, without relations"""


class ProfileCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ProfileCreateWithoutRelationsInput'
    connect: 'ProfileWhereUniqueInput'


class ProfileCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ProfileCreateWithoutRelationsInput', List['ProfileCreateWithoutRelationsInput']]
    connect: Union['ProfileWhereUniqueInput', List['ProfileWhereUniqueInput']]


_ProfileWhereUnique_id_Input = TypedDict(
    '_ProfileWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

ProfileWhereUniqueInput = _ProfileWhereUnique_id_Input


class ProfileUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    role: 'RoleUpdateOneWithoutRelationsInput'
    user: 'UserUpdateOneWithoutRelationsInput'


class ProfileUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str


class ProfileUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ProfileCreateWithoutRelationsInput']
    connect: List['ProfileWhereUniqueInput']
    set: List['ProfileWhereUniqueInput']
    disconnect: List['ProfileWhereUniqueInput']
    delete: List['ProfileWhereUniqueInput']

    # TODO
    # update: List['ProfileUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ProfileUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ProfileScalarWhereInput']
    # upsert: List['ProfileUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['ProfileCreateOrConnectWithoutRelationsInput']


class ProfileUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ProfileCreateWithoutRelationsInput'
    connect: 'ProfileWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ProfileUpdateInput'
    # upsert: 'ProfileUpsertWithoutRelationsInput'
    # connectOrCreate: 'ProfileCreateOrConnectWithoutRelationsInput'


class ProfileUpsertInput(TypedDict):
    create: 'ProfileCreateInput'
    update: 'ProfileUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Profile_id_OrderByInput = TypedDict(
    '_Profile_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Profile_roleId_OrderByInput = TypedDict(
    '_Profile_roleId_OrderByInput',
    {
        'roleId': 'SortOrder',
    },
    total=True
)

_Profile_userId_OrderByInput = TypedDict(
    '_Profile_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

ProfileOrderByInput = Union[
    '_Profile_id_OrderByInput',
    '_Profile_roleId_OrderByInput',
    '_Profile_userId_OrderByInput',
]



# recursive Profile types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ProfileRelationFilter = TypedDict(
    'ProfileRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ProfileListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ProfileInclude(TypedDict, total=False):
    """Profile relational arguments"""
    role: Union[bool, 'RoleArgsFromProfile']
    user: Union[bool, 'UserArgsFromProfile']


    

class UserIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    accounts: Union[bool, 'FindManyAccountArgsFromProfileRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromProfileRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromProfileRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromProfileRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromProfileRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromProfileRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromProfileRecursive1']


class UserIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    accounts: Union[bool, 'FindManyAccountArgsFromProfileRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromProfileRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromProfileRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromProfileRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromProfileRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromProfileRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromProfileRecursive2']


class UserIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    accounts: Union[bool, 'FindManyAccountArgsFromProfileRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromProfileRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromProfileRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromProfileRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromProfileRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromProfileRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromProfileRecursive3']


class UserIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    accounts: Union[bool, 'FindManyAccountArgsFromProfileRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromProfileRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromProfileRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromProfileRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromProfileRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromProfileRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromProfileRecursive4']


class UserIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class UserArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyUserArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    role: Union[bool, 'RoleArgsFromProfileRecursive1']
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class ProfileIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    role: Union[bool, 'RoleArgsFromProfileRecursive2']
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class ProfileIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    role: Union[bool, 'RoleArgsFromProfileRecursive3']
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class ProfileIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    role: Union[bool, 'RoleArgsFromProfileRecursive4']
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class ProfileIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class ProfileArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyProfileArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive1']


class RoleIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive2']


class RoleIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive3']


class RoleIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    profiles: Union[bool, 'FindManyProfileArgsFromProfileRecursive4']


class RoleIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class RoleArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyRoleArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    users: Union[bool, 'FindManyUserArgsFromProfileRecursive1']
    responsible: Union[bool, 'UserArgsFromProfileRecursive1']


class GymIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    users: Union[bool, 'FindManyUserArgsFromProfileRecursive2']
    responsible: Union[bool, 'UserArgsFromProfileRecursive2']


class GymIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    users: Union[bool, 'FindManyUserArgsFromProfileRecursive3']
    responsible: Union[bool, 'UserArgsFromProfileRecursive3']


class GymIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    users: Union[bool, 'FindManyUserArgsFromProfileRecursive4']
    responsible: Union[bool, 'UserArgsFromProfileRecursive4']


class GymIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class GymArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyGymArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class UserTypeIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class UserTypeIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class UserTypeIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class UserTypeIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class UserTypeArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyUserTypeArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class AccountIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class AccountIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class AccountIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class AccountIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class AccountArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyAccountArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class SessionIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class SessionIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class SessionIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class SessionIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class SessionArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManySessionArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""


class VerificationTokenIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""


class VerificationTokenIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""


class VerificationTokenIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""


class VerificationTokenIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class VerificationTokenArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyVerificationTokenArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class TodoIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class TodoIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class TodoIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class TodoIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class TodoArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyTodoArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class FormularioAvaliacaoFisicaIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class FormularioAvaliacaoFisicaIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class FormularioAvaliacaoFisicaIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class FormularioAvaliacaoFisicaIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class FormularioAvaliacaoFisicaArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""


class TreinoIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""


class TreinoIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""


class TreinoIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""


class TreinoIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class TreinoArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyTreinoArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromProfile(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive1']


class RegistraTreinoIncludeFromProfileRecursive1(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive2']


class RegistraTreinoIncludeFromProfileRecursive2(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive3']


class RegistraTreinoIncludeFromProfileRecursive3(TypedDict, total=False):
    """Relational arguments for Profile"""
    user: Union[bool, 'UserArgsFromProfileRecursive4']


class RegistraTreinoIncludeFromProfileRecursive4(TypedDict, total=False):
    """Relational arguments for Profile"""

    

class RegistraTreinoArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    
    

class FindManyRegistraTreinoArgsFromProfile(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromProfileRecursive1(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromProfileRecursive2(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromProfileRecursive3(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromProfileRecursive4(TypedDict, total=False):
    """Arguments for Profile"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyProfileArgs = FindManyProfileArgsFromProfile
FindFirstProfileArgs = FindManyProfileArgsFromProfile


    

class ProfileWhereInput(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    role: 'RoleRelationFilter'
    roleId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['ProfileWhereInputRecursive1', List['ProfileWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ProfileWhereInputRecursive1']
    OR: List['ProfileWhereInputRecursive1']
    NOT: List['ProfileWhereInputRecursive1']


class ProfileWhereInputRecursive1(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    role: 'RoleRelationFilter'
    roleId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['ProfileWhereInputRecursive2', List['ProfileWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ProfileWhereInputRecursive2']
    OR: List['ProfileWhereInputRecursive2']
    NOT: List['ProfileWhereInputRecursive2']


class ProfileWhereInputRecursive2(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    role: 'RoleRelationFilter'
    roleId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['ProfileWhereInputRecursive3', List['ProfileWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ProfileWhereInputRecursive3']
    OR: List['ProfileWhereInputRecursive3']
    NOT: List['ProfileWhereInputRecursive3']


class ProfileWhereInputRecursive3(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    role: 'RoleRelationFilter'
    roleId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['ProfileWhereInputRecursive4', List['ProfileWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ProfileWhereInputRecursive4']
    OR: List['ProfileWhereInputRecursive4']
    NOT: List['ProfileWhereInputRecursive4']


class ProfileWhereInputRecursive4(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    role: 'RoleRelationFilter'
    roleId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']



# aggregate Profile types


    

class ProfileScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    roleId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['ProfileScalarWhereWithAggregatesInputRecursive1']
    OR: List['ProfileScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ProfileScalarWhereWithAggregatesInputRecursive1']


class ProfileScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    roleId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['ProfileScalarWhereWithAggregatesInputRecursive2']
    OR: List['ProfileScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ProfileScalarWhereWithAggregatesInputRecursive2']


class ProfileScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    roleId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['ProfileScalarWhereWithAggregatesInputRecursive3']
    OR: List['ProfileScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ProfileScalarWhereWithAggregatesInputRecursive3']


class ProfileScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    roleId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['ProfileScalarWhereWithAggregatesInputRecursive4']
    OR: List['ProfileScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ProfileScalarWhereWithAggregatesInputRecursive4']


class ProfileScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Profile arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    roleId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']



class ProfileGroupByOutput(TypedDict, total=False):
    id: _str
    roleId: _str
    userId: _str
    _sum: 'ProfileSumAggregateOutput'
    _avg: 'ProfileAvgAggregateOutput'
    _min: 'ProfileMinAggregateOutput'
    _max: 'ProfileMaxAggregateOutput'
    _count: 'ProfileCountAggregateOutput'


class ProfileAvgAggregateOutput(TypedDict, total=False):
    """Profile output for aggregating averages"""


class ProfileSumAggregateOutput(TypedDict, total=False):
    """Profile output for aggregating sums"""


class ProfileScalarAggregateOutput(TypedDict, total=False):
    """Profile output including scalar fields"""
    id: _str
    roleId: _str
    userId: _str


ProfileMinAggregateOutput = ProfileScalarAggregateOutput
ProfileMaxAggregateOutput = ProfileScalarAggregateOutput


class ProfileMaxAggregateInput(TypedDict, total=False):
    """Profile input for aggregating by max"""
    id: bool
    roleId: bool
    userId: bool


class ProfileMinAggregateInput(TypedDict, total=False):
    """Profile input for aggregating by min"""
    id: bool
    roleId: bool
    userId: bool


class ProfileNumberAggregateInput(TypedDict, total=False):
    """Profile input for aggregating numbers"""


ProfileAvgAggregateInput = ProfileNumberAggregateInput
ProfileSumAggregateInput = ProfileNumberAggregateInput


ProfileCountAggregateInput = TypedDict(
    'ProfileCountAggregateInput',
    {
        'id': bool,
        'roleId': bool,
        'userId': bool,
        '_all': bool,
    },
    total=False,
)

ProfileCountAggregateOutput = TypedDict(
    'ProfileCountAggregateOutput',
    {
        'id': int,
        'roleId': int,
        'userId': int,
        '_all': int,
    },
    total=False,
)


ProfileKeys = Literal[
    'id',
    'role',
    'roleId',
    'user',
    'userId',
]
ProfileScalarFieldKeys = Literal[
    'id',
    'roleId',
    'userId',
]
ProfileScalarFieldKeysT = TypeVar('ProfileScalarFieldKeysT', bound=ProfileScalarFieldKeys)

ProfileRelationalFieldKeys = Literal[
        'role',
        'user',
    ]

# Role types

class RoleOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Role create method"""
    id: _str
    profiles: 'ProfileCreateManyNestedWithoutRelationsInput'


class RoleCreateInput(RoleOptionalCreateInput):
    """Required arguments to the Role create method"""
    name: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class RoleOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Role create method, without relations"""
    id: _str


class RoleCreateWithoutRelationsInput(RoleOptionalCreateWithoutRelationsInput):
    """Required arguments to the Role create method, without relations"""
    name: _str


class RoleCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'RoleCreateWithoutRelationsInput'
    connect: 'RoleWhereUniqueInput'


class RoleCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['RoleCreateWithoutRelationsInput', List['RoleCreateWithoutRelationsInput']]
    connect: Union['RoleWhereUniqueInput', List['RoleWhereUniqueInput']]


_RoleWhereUnique_id_Input = TypedDict(
    '_RoleWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

RoleWhereUniqueInput = _RoleWhereUnique_id_Input


class RoleUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    profiles: 'ProfileUpdateManyWithoutRelationsInput'


class RoleUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str


class RoleUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['RoleCreateWithoutRelationsInput']
    connect: List['RoleWhereUniqueInput']
    set: List['RoleWhereUniqueInput']
    disconnect: List['RoleWhereUniqueInput']
    delete: List['RoleWhereUniqueInput']

    # TODO
    # update: List['RoleUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['RoleUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['RoleScalarWhereInput']
    # upsert: List['RoleUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['RoleCreateOrConnectWithoutRelationsInput']


class RoleUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'RoleCreateWithoutRelationsInput'
    connect: 'RoleWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'RoleUpdateInput'
    # upsert: 'RoleUpsertWithoutRelationsInput'
    # connectOrCreate: 'RoleCreateOrConnectWithoutRelationsInput'


class RoleUpsertInput(TypedDict):
    create: 'RoleCreateInput'
    update: 'RoleUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Role_id_OrderByInput = TypedDict(
    '_Role_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Role_name_OrderByInput = TypedDict(
    '_Role_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

RoleOrderByInput = Union[
    '_Role_id_OrderByInput',
    '_Role_name_OrderByInput',
]



# recursive Role types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

RoleRelationFilter = TypedDict(
    'RoleRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class RoleListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class RoleInclude(TypedDict, total=False):
    """Role relational arguments"""
    profiles: Union[bool, 'FindManyProfileArgsFromRole']


    

class UserIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    accounts: Union[bool, 'FindManyAccountArgsFromRoleRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromRoleRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromRoleRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromRoleRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromRoleRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRoleRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRoleRecursive1']


class UserIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    accounts: Union[bool, 'FindManyAccountArgsFromRoleRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromRoleRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromRoleRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromRoleRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromRoleRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRoleRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRoleRecursive2']


class UserIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    accounts: Union[bool, 'FindManyAccountArgsFromRoleRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromRoleRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromRoleRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromRoleRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromRoleRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRoleRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRoleRecursive3']


class UserIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    accounts: Union[bool, 'FindManyAccountArgsFromRoleRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromRoleRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromRoleRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromRoleRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromRoleRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRoleRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRoleRecursive4']


class UserIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class UserArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyUserArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    role: Union[bool, 'RoleArgsFromRoleRecursive1']
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class ProfileIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    role: Union[bool, 'RoleArgsFromRoleRecursive2']
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class ProfileIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    role: Union[bool, 'RoleArgsFromRoleRecursive3']
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class ProfileIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    role: Union[bool, 'RoleArgsFromRoleRecursive4']
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class ProfileIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class ProfileArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyProfileArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive1']


class RoleIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive2']


class RoleIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive3']


class RoleIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    profiles: Union[bool, 'FindManyProfileArgsFromRoleRecursive4']


class RoleIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class RoleArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyRoleArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    users: Union[bool, 'FindManyUserArgsFromRoleRecursive1']
    responsible: Union[bool, 'UserArgsFromRoleRecursive1']


class GymIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    users: Union[bool, 'FindManyUserArgsFromRoleRecursive2']
    responsible: Union[bool, 'UserArgsFromRoleRecursive2']


class GymIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    users: Union[bool, 'FindManyUserArgsFromRoleRecursive3']
    responsible: Union[bool, 'UserArgsFromRoleRecursive3']


class GymIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    users: Union[bool, 'FindManyUserArgsFromRoleRecursive4']
    responsible: Union[bool, 'UserArgsFromRoleRecursive4']


class GymIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class GymArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyGymArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class UserTypeIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class UserTypeIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class UserTypeIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class UserTypeIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class UserTypeArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyUserTypeArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class AccountIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class AccountIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class AccountIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class AccountIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class AccountArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyAccountArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class SessionIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class SessionIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class SessionIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class SessionIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class SessionArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManySessionArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""


class VerificationTokenIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""


class VerificationTokenIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""


class VerificationTokenIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""


class VerificationTokenIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class VerificationTokenArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyVerificationTokenArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class TodoIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class TodoIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class TodoIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class TodoIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class TodoArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyTodoArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class FormularioAvaliacaoFisicaIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class FormularioAvaliacaoFisicaIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class FormularioAvaliacaoFisicaIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class FormularioAvaliacaoFisicaIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class FormularioAvaliacaoFisicaArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""


class TreinoIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""


class TreinoIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""


class TreinoIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""


class TreinoIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class TreinoArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyTreinoArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromRole(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive1']


class RegistraTreinoIncludeFromRoleRecursive1(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive2']


class RegistraTreinoIncludeFromRoleRecursive2(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive3']


class RegistraTreinoIncludeFromRoleRecursive3(TypedDict, total=False):
    """Relational arguments for Role"""
    user: Union[bool, 'UserArgsFromRoleRecursive4']


class RegistraTreinoIncludeFromRoleRecursive4(TypedDict, total=False):
    """Relational arguments for Role"""

    

class RegistraTreinoArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    
    

class FindManyRegistraTreinoArgsFromRole(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromRoleRecursive1(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromRoleRecursive2(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromRoleRecursive3(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromRoleRecursive4(TypedDict, total=False):
    """Arguments for Role"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyRoleArgs = FindManyRoleArgsFromRole
FindFirstRoleArgs = FindManyRoleArgsFromRole


    

class RoleWhereInput(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    profiles: 'ProfileListRelationFilter'

    # should be noted that AND and NOT should be Union['RoleWhereInputRecursive1', List['RoleWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['RoleWhereInputRecursive1']
    OR: List['RoleWhereInputRecursive1']
    NOT: List['RoleWhereInputRecursive1']


class RoleWhereInputRecursive1(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    profiles: 'ProfileListRelationFilter'

    # should be noted that AND and NOT should be Union['RoleWhereInputRecursive2', List['RoleWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['RoleWhereInputRecursive2']
    OR: List['RoleWhereInputRecursive2']
    NOT: List['RoleWhereInputRecursive2']


class RoleWhereInputRecursive2(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    profiles: 'ProfileListRelationFilter'

    # should be noted that AND and NOT should be Union['RoleWhereInputRecursive3', List['RoleWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['RoleWhereInputRecursive3']
    OR: List['RoleWhereInputRecursive3']
    NOT: List['RoleWhereInputRecursive3']


class RoleWhereInputRecursive3(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    profiles: 'ProfileListRelationFilter'

    # should be noted that AND and NOT should be Union['RoleWhereInputRecursive4', List['RoleWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['RoleWhereInputRecursive4']
    OR: List['RoleWhereInputRecursive4']
    NOT: List['RoleWhereInputRecursive4']


class RoleWhereInputRecursive4(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    profiles: 'ProfileListRelationFilter'



# aggregate Role types


    

class RoleScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RoleScalarWhereWithAggregatesInputRecursive1']
    OR: List['RoleScalarWhereWithAggregatesInputRecursive1']
    NOT: List['RoleScalarWhereWithAggregatesInputRecursive1']


class RoleScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RoleScalarWhereWithAggregatesInputRecursive2']
    OR: List['RoleScalarWhereWithAggregatesInputRecursive2']
    NOT: List['RoleScalarWhereWithAggregatesInputRecursive2']


class RoleScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RoleScalarWhereWithAggregatesInputRecursive3']
    OR: List['RoleScalarWhereWithAggregatesInputRecursive3']
    NOT: List['RoleScalarWhereWithAggregatesInputRecursive3']


class RoleScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RoleScalarWhereWithAggregatesInputRecursive4']
    OR: List['RoleScalarWhereWithAggregatesInputRecursive4']
    NOT: List['RoleScalarWhereWithAggregatesInputRecursive4']


class RoleScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Role arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']



class RoleGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    _sum: 'RoleSumAggregateOutput'
    _avg: 'RoleAvgAggregateOutput'
    _min: 'RoleMinAggregateOutput'
    _max: 'RoleMaxAggregateOutput'
    _count: 'RoleCountAggregateOutput'


class RoleAvgAggregateOutput(TypedDict, total=False):
    """Role output for aggregating averages"""


class RoleSumAggregateOutput(TypedDict, total=False):
    """Role output for aggregating sums"""


class RoleScalarAggregateOutput(TypedDict, total=False):
    """Role output including scalar fields"""
    id: _str
    name: _str


RoleMinAggregateOutput = RoleScalarAggregateOutput
RoleMaxAggregateOutput = RoleScalarAggregateOutput


class RoleMaxAggregateInput(TypedDict, total=False):
    """Role input for aggregating by max"""
    id: bool
    name: bool


class RoleMinAggregateInput(TypedDict, total=False):
    """Role input for aggregating by min"""
    id: bool
    name: bool


class RoleNumberAggregateInput(TypedDict, total=False):
    """Role input for aggregating numbers"""


RoleAvgAggregateInput = RoleNumberAggregateInput
RoleSumAggregateInput = RoleNumberAggregateInput


RoleCountAggregateInput = TypedDict(
    'RoleCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        '_all': bool,
    },
    total=False,
)

RoleCountAggregateOutput = TypedDict(
    'RoleCountAggregateOutput',
    {
        'id': int,
        'name': int,
        '_all': int,
    },
    total=False,
)


RoleKeys = Literal[
    'id',
    'name',
    'profiles',
]
RoleScalarFieldKeys = Literal[
    'id',
    'name',
]
RoleScalarFieldKeysT = TypeVar('RoleScalarFieldKeysT', bound=RoleScalarFieldKeys)

RoleRelationalFieldKeys = Literal[
        'profiles',
    ]

# Gym types

class GymOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Gym create method"""
    id: _str
    users: 'UserCreateManyNestedWithoutRelationsInput'
    responsibleId: Optional[_str]
    responsible: 'UserCreateNestedWithoutRelationsInput'


class GymCreateInput(GymOptionalCreateInput):
    """Required arguments to the Gym create method"""
    name: _str
    location: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GymOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Gym create method, without relations"""
    id: _str
    responsibleId: Optional[_str]


class GymCreateWithoutRelationsInput(GymOptionalCreateWithoutRelationsInput):
    """Required arguments to the Gym create method, without relations"""
    name: _str
    location: _str


class GymCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GymCreateWithoutRelationsInput'
    connect: 'GymWhereUniqueInput'


class GymCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GymCreateWithoutRelationsInput', List['GymCreateWithoutRelationsInput']]
    connect: Union['GymWhereUniqueInput', List['GymWhereUniqueInput']]


_GymWhereUnique_id_Input = TypedDict(
    '_GymWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

GymWhereUniqueInput = _GymWhereUnique_id_Input


class GymUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    location: _str
    users: 'UserUpdateManyWithoutRelationsInput'
    responsible: 'UserUpdateOneWithoutRelationsInput'


class GymUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    location: _str


class GymUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GymCreateWithoutRelationsInput']
    connect: List['GymWhereUniqueInput']
    set: List['GymWhereUniqueInput']
    disconnect: List['GymWhereUniqueInput']
    delete: List['GymWhereUniqueInput']

    # TODO
    # update: List['GymUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GymUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GymScalarWhereInput']
    # upsert: List['GymUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['GymCreateOrConnectWithoutRelationsInput']


class GymUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GymCreateWithoutRelationsInput'
    connect: 'GymWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GymUpdateInput'
    # upsert: 'GymUpsertWithoutRelationsInput'
    # connectOrCreate: 'GymCreateOrConnectWithoutRelationsInput'


class GymUpsertInput(TypedDict):
    create: 'GymCreateInput'
    update: 'GymUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Gym_id_OrderByInput = TypedDict(
    '_Gym_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Gym_name_OrderByInput = TypedDict(
    '_Gym_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Gym_location_OrderByInput = TypedDict(
    '_Gym_location_OrderByInput',
    {
        'location': 'SortOrder',
    },
    total=True
)

_Gym_responsibleId_OrderByInput = TypedDict(
    '_Gym_responsibleId_OrderByInput',
    {
        'responsibleId': 'SortOrder',
    },
    total=True
)

GymOrderByInput = Union[
    '_Gym_id_OrderByInput',
    '_Gym_name_OrderByInput',
    '_Gym_location_OrderByInput',
    '_Gym_responsibleId_OrderByInput',
]



# recursive Gym types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GymRelationFilter = TypedDict(
    'GymRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GymListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GymInclude(TypedDict, total=False):
    """Gym relational arguments"""
    users: Union[bool, 'FindManyUserArgsFromGym']
    responsible: Union[bool, 'UserArgsFromGym']


    

class UserIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    accounts: Union[bool, 'FindManyAccountArgsFromGymRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromGymRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromGymRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromGymRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromGymRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromGymRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromGymRecursive1']


class UserIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    accounts: Union[bool, 'FindManyAccountArgsFromGymRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromGymRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromGymRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromGymRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromGymRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromGymRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromGymRecursive2']


class UserIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    accounts: Union[bool, 'FindManyAccountArgsFromGymRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromGymRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromGymRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromGymRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromGymRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromGymRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromGymRecursive3']


class UserIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    accounts: Union[bool, 'FindManyAccountArgsFromGymRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromGymRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromGymRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromGymRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromGymRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromGymRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromGymRecursive4']


class UserIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class UserArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyUserArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    role: Union[bool, 'RoleArgsFromGymRecursive1']
    user: Union[bool, 'UserArgsFromGymRecursive1']


class ProfileIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    role: Union[bool, 'RoleArgsFromGymRecursive2']
    user: Union[bool, 'UserArgsFromGymRecursive2']


class ProfileIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    role: Union[bool, 'RoleArgsFromGymRecursive3']
    user: Union[bool, 'UserArgsFromGymRecursive3']


class ProfileIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    role: Union[bool, 'RoleArgsFromGymRecursive4']
    user: Union[bool, 'UserArgsFromGymRecursive4']


class ProfileIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class ProfileArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyProfileArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive1']


class RoleIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive2']


class RoleIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive3']


class RoleIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    profiles: Union[bool, 'FindManyProfileArgsFromGymRecursive4']


class RoleIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class RoleArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyRoleArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    users: Union[bool, 'FindManyUserArgsFromGymRecursive1']
    responsible: Union[bool, 'UserArgsFromGymRecursive1']


class GymIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    users: Union[bool, 'FindManyUserArgsFromGymRecursive2']
    responsible: Union[bool, 'UserArgsFromGymRecursive2']


class GymIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    users: Union[bool, 'FindManyUserArgsFromGymRecursive3']
    responsible: Union[bool, 'UserArgsFromGymRecursive3']


class GymIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    users: Union[bool, 'FindManyUserArgsFromGymRecursive4']
    responsible: Union[bool, 'UserArgsFromGymRecursive4']


class GymIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class GymArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyGymArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive1']


class UserTypeIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive2']


class UserTypeIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive3']


class UserTypeIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive4']


class UserTypeIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class UserTypeArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyUserTypeArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive1']


class AccountIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive2']


class AccountIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive3']


class AccountIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive4']


class AccountIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class AccountArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyAccountArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive1']


class SessionIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive2']


class SessionIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive3']


class SessionIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive4']


class SessionIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class SessionArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManySessionArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""


class VerificationTokenIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""


class VerificationTokenIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""


class VerificationTokenIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""


class VerificationTokenIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class VerificationTokenArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyVerificationTokenArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive1']


class TodoIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive2']


class TodoIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive3']


class TodoIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive4']


class TodoIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class TodoArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyTodoArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive1']


class FormularioAvaliacaoFisicaIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive2']


class FormularioAvaliacaoFisicaIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive3']


class FormularioAvaliacaoFisicaIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive4']


class FormularioAvaliacaoFisicaIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class FormularioAvaliacaoFisicaArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""


class TreinoIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""


class TreinoIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""


class TreinoIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""


class TreinoIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class TreinoArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyTreinoArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromGym(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive1']


class RegistraTreinoIncludeFromGymRecursive1(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive2']


class RegistraTreinoIncludeFromGymRecursive2(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive3']


class RegistraTreinoIncludeFromGymRecursive3(TypedDict, total=False):
    """Relational arguments for Gym"""
    user: Union[bool, 'UserArgsFromGymRecursive4']


class RegistraTreinoIncludeFromGymRecursive4(TypedDict, total=False):
    """Relational arguments for Gym"""

    

class RegistraTreinoArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    
    

class FindManyRegistraTreinoArgsFromGym(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromGymRecursive1(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromGymRecursive2(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromGymRecursive3(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromGymRecursive4(TypedDict, total=False):
    """Arguments for Gym"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyGymArgs = FindManyGymArgsFromGym
FindFirstGymArgs = FindManyGymArgsFromGym


    

class GymWhereInput(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    location: Union[_str, 'types.StringFilter']
    users: 'UserListRelationFilter'
    responsibleId: Union[None, _str, 'types.StringFilter']
    responsible: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['GymWhereInputRecursive1', List['GymWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GymWhereInputRecursive1']
    OR: List['GymWhereInputRecursive1']
    NOT: List['GymWhereInputRecursive1']


class GymWhereInputRecursive1(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    location: Union[_str, 'types.StringFilter']
    users: 'UserListRelationFilter'
    responsibleId: Union[None, _str, 'types.StringFilter']
    responsible: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['GymWhereInputRecursive2', List['GymWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GymWhereInputRecursive2']
    OR: List['GymWhereInputRecursive2']
    NOT: List['GymWhereInputRecursive2']


class GymWhereInputRecursive2(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    location: Union[_str, 'types.StringFilter']
    users: 'UserListRelationFilter'
    responsibleId: Union[None, _str, 'types.StringFilter']
    responsible: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['GymWhereInputRecursive3', List['GymWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GymWhereInputRecursive3']
    OR: List['GymWhereInputRecursive3']
    NOT: List['GymWhereInputRecursive3']


class GymWhereInputRecursive3(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    location: Union[_str, 'types.StringFilter']
    users: 'UserListRelationFilter'
    responsibleId: Union[None, _str, 'types.StringFilter']
    responsible: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['GymWhereInputRecursive4', List['GymWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GymWhereInputRecursive4']
    OR: List['GymWhereInputRecursive4']
    NOT: List['GymWhereInputRecursive4']


class GymWhereInputRecursive4(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    location: Union[_str, 'types.StringFilter']
    users: 'UserListRelationFilter'
    responsibleId: Union[None, _str, 'types.StringFilter']
    responsible: 'UserRelationFilter'



# aggregate Gym types


    

class GymScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    location: Union[_str, 'types.StringWithAggregatesFilter']
    responsibleId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['GymScalarWhereWithAggregatesInputRecursive1']
    OR: List['GymScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GymScalarWhereWithAggregatesInputRecursive1']


class GymScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    location: Union[_str, 'types.StringWithAggregatesFilter']
    responsibleId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['GymScalarWhereWithAggregatesInputRecursive2']
    OR: List['GymScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GymScalarWhereWithAggregatesInputRecursive2']


class GymScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    location: Union[_str, 'types.StringWithAggregatesFilter']
    responsibleId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['GymScalarWhereWithAggregatesInputRecursive3']
    OR: List['GymScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GymScalarWhereWithAggregatesInputRecursive3']


class GymScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    location: Union[_str, 'types.StringWithAggregatesFilter']
    responsibleId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['GymScalarWhereWithAggregatesInputRecursive4']
    OR: List['GymScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GymScalarWhereWithAggregatesInputRecursive4']


class GymScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Gym arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    location: Union[_str, 'types.StringWithAggregatesFilter']
    responsibleId: Union[_str, 'types.StringWithAggregatesFilter']



class GymGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    location: _str
    responsibleId: _str
    _sum: 'GymSumAggregateOutput'
    _avg: 'GymAvgAggregateOutput'
    _min: 'GymMinAggregateOutput'
    _max: 'GymMaxAggregateOutput'
    _count: 'GymCountAggregateOutput'


class GymAvgAggregateOutput(TypedDict, total=False):
    """Gym output for aggregating averages"""


class GymSumAggregateOutput(TypedDict, total=False):
    """Gym output for aggregating sums"""


class GymScalarAggregateOutput(TypedDict, total=False):
    """Gym output including scalar fields"""
    id: _str
    name: _str
    location: _str
    responsibleId: _str


GymMinAggregateOutput = GymScalarAggregateOutput
GymMaxAggregateOutput = GymScalarAggregateOutput


class GymMaxAggregateInput(TypedDict, total=False):
    """Gym input for aggregating by max"""
    id: bool
    name: bool
    location: bool
    responsibleId: bool


class GymMinAggregateInput(TypedDict, total=False):
    """Gym input for aggregating by min"""
    id: bool
    name: bool
    location: bool
    responsibleId: bool


class GymNumberAggregateInput(TypedDict, total=False):
    """Gym input for aggregating numbers"""


GymAvgAggregateInput = GymNumberAggregateInput
GymSumAggregateInput = GymNumberAggregateInput


GymCountAggregateInput = TypedDict(
    'GymCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'location': bool,
        'responsibleId': bool,
        '_all': bool,
    },
    total=False,
)

GymCountAggregateOutput = TypedDict(
    'GymCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'location': int,
        'responsibleId': int,
        '_all': int,
    },
    total=False,
)


GymKeys = Literal[
    'id',
    'name',
    'location',
    'users',
    'responsibleId',
    'responsible',
]
GymScalarFieldKeys = Literal[
    'id',
    'name',
    'location',
    'responsibleId',
]
GymScalarFieldKeysT = TypeVar('GymScalarFieldKeysT', bound=GymScalarFieldKeys)

GymRelationalFieldKeys = Literal[
        'users',
        'responsible',
    ]

# UserType types

class UserTypeOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the UserType create method"""
    id: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    userId: _str


class UserTypeCreateInput(UserTypeOptionalCreateInput):
    """Required arguments to the UserType create method"""
    perfil: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserTypeOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the UserType create method, without relations"""
    id: _str
    userId: _str


class UserTypeCreateWithoutRelationsInput(UserTypeOptionalCreateWithoutRelationsInput):
    """Required arguments to the UserType create method, without relations"""
    perfil: _str


class UserTypeCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserTypeCreateWithoutRelationsInput'
    connect: 'UserTypeWhereUniqueInput'


class UserTypeCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserTypeCreateWithoutRelationsInput', List['UserTypeCreateWithoutRelationsInput']]
    connect: Union['UserTypeWhereUniqueInput', List['UserTypeWhereUniqueInput']]


_UserTypeWhereUnique_id_Input = TypedDict(
    '_UserTypeWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

UserTypeWhereUniqueInput = _UserTypeWhereUnique_id_Input


class UserTypeUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    perfil: _str
    user: 'UserUpdateOneWithoutRelationsInput'


class UserTypeUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    perfil: _str


class UserTypeUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserTypeCreateWithoutRelationsInput']
    connect: List['UserTypeWhereUniqueInput']
    set: List['UserTypeWhereUniqueInput']
    disconnect: List['UserTypeWhereUniqueInput']
    delete: List['UserTypeWhereUniqueInput']

    # TODO
    # update: List['UserTypeUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserTypeUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserTypeScalarWhereInput']
    # upsert: List['UserTypeUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['UserTypeCreateOrConnectWithoutRelationsInput']


class UserTypeUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserTypeCreateWithoutRelationsInput'
    connect: 'UserTypeWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserTypeUpdateInput'
    # upsert: 'UserTypeUpsertWithoutRelationsInput'
    # connectOrCreate: 'UserTypeCreateOrConnectWithoutRelationsInput'


class UserTypeUpsertInput(TypedDict):
    create: 'UserTypeCreateInput'
    update: 'UserTypeUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_UserType_id_OrderByInput = TypedDict(
    '_UserType_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_UserType_perfil_OrderByInput = TypedDict(
    '_UserType_perfil_OrderByInput',
    {
        'perfil': 'SortOrder',
    },
    total=True
)

_UserType_userId_OrderByInput = TypedDict(
    '_UserType_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

UserTypeOrderByInput = Union[
    '_UserType_id_OrderByInput',
    '_UserType_perfil_OrderByInput',
    '_UserType_userId_OrderByInput',
]



# recursive UserType types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserTypeRelationFilter = TypedDict(
    'UserTypeRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserTypeListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserTypeInclude(TypedDict, total=False):
    """UserType relational arguments"""
    user: Union[bool, 'UserArgsFromUserType']


    

class UserIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserTypeRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromUserTypeRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromUserTypeRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserTypeRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserTypeRecursive1']


class UserIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserTypeRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromUserTypeRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromUserTypeRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserTypeRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserTypeRecursive2']


class UserIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserTypeRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromUserTypeRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromUserTypeRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserTypeRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserTypeRecursive3']


class UserIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserTypeRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromUserTypeRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromUserTypeRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromUserTypeRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromUserTypeRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromUserTypeRecursive4']


class UserIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class UserArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyUserArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    role: Union[bool, 'RoleArgsFromUserTypeRecursive1']
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class ProfileIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    role: Union[bool, 'RoleArgsFromUserTypeRecursive2']
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class ProfileIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    role: Union[bool, 'RoleArgsFromUserTypeRecursive3']
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class ProfileIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    role: Union[bool, 'RoleArgsFromUserTypeRecursive4']
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class ProfileIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class ProfileArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyProfileArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive1']


class RoleIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive2']


class RoleIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive3']


class RoleIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    profiles: Union[bool, 'FindManyProfileArgsFromUserTypeRecursive4']


class RoleIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class RoleArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyRoleArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    users: Union[bool, 'FindManyUserArgsFromUserTypeRecursive1']
    responsible: Union[bool, 'UserArgsFromUserTypeRecursive1']


class GymIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    users: Union[bool, 'FindManyUserArgsFromUserTypeRecursive2']
    responsible: Union[bool, 'UserArgsFromUserTypeRecursive2']


class GymIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    users: Union[bool, 'FindManyUserArgsFromUserTypeRecursive3']
    responsible: Union[bool, 'UserArgsFromUserTypeRecursive3']


class GymIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    users: Union[bool, 'FindManyUserArgsFromUserTypeRecursive4']
    responsible: Union[bool, 'UserArgsFromUserTypeRecursive4']


class GymIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class GymArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyGymArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class UserTypeIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class UserTypeIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class UserTypeIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class UserTypeIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class UserTypeArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyUserTypeArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class AccountIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class AccountIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class AccountIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class AccountIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class AccountArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyAccountArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class SessionIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class SessionIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class SessionIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class SessionIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class SessionArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManySessionArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""


class VerificationTokenIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""


class VerificationTokenIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""


class VerificationTokenIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""


class VerificationTokenIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class VerificationTokenArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyVerificationTokenArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class TodoIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class TodoIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class TodoIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class TodoIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class TodoArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyTodoArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class FormularioAvaliacaoFisicaIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class FormularioAvaliacaoFisicaIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class FormularioAvaliacaoFisicaIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class FormularioAvaliacaoFisicaIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class FormularioAvaliacaoFisicaArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""


class TreinoIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""


class TreinoIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""


class TreinoIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""


class TreinoIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class TreinoArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyTreinoArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromUserType(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive1']


class RegistraTreinoIncludeFromUserTypeRecursive1(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive2']


class RegistraTreinoIncludeFromUserTypeRecursive2(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive3']


class RegistraTreinoIncludeFromUserTypeRecursive3(TypedDict, total=False):
    """Relational arguments for UserType"""
    user: Union[bool, 'UserArgsFromUserTypeRecursive4']


class RegistraTreinoIncludeFromUserTypeRecursive4(TypedDict, total=False):
    """Relational arguments for UserType"""

    

class RegistraTreinoArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    
    

class FindManyRegistraTreinoArgsFromUserType(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromUserTypeRecursive1(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromUserTypeRecursive2(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromUserTypeRecursive3(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromUserTypeRecursive4(TypedDict, total=False):
    """Arguments for UserType"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyUserTypeArgs = FindManyUserTypeArgsFromUserType
FindFirstUserTypeArgs = FindManyUserTypeArgsFromUserType


    

class UserTypeWhereInput(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    perfil: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['UserTypeWhereInputRecursive1', List['UserTypeWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserTypeWhereInputRecursive1']
    OR: List['UserTypeWhereInputRecursive1']
    NOT: List['UserTypeWhereInputRecursive1']


class UserTypeWhereInputRecursive1(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    perfil: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['UserTypeWhereInputRecursive2', List['UserTypeWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserTypeWhereInputRecursive2']
    OR: List['UserTypeWhereInputRecursive2']
    NOT: List['UserTypeWhereInputRecursive2']


class UserTypeWhereInputRecursive2(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    perfil: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['UserTypeWhereInputRecursive3', List['UserTypeWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserTypeWhereInputRecursive3']
    OR: List['UserTypeWhereInputRecursive3']
    NOT: List['UserTypeWhereInputRecursive3']


class UserTypeWhereInputRecursive3(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    perfil: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['UserTypeWhereInputRecursive4', List['UserTypeWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserTypeWhereInputRecursive4']
    OR: List['UserTypeWhereInputRecursive4']
    NOT: List['UserTypeWhereInputRecursive4']


class UserTypeWhereInputRecursive4(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    perfil: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    userId: Union[_str, 'types.StringFilter']



# aggregate UserType types


    

class UserTypeScalarWhereWithAggregatesInput(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    perfil: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserTypeScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserTypeScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserTypeScalarWhereWithAggregatesInputRecursive1']


class UserTypeScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    perfil: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserTypeScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserTypeScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserTypeScalarWhereWithAggregatesInputRecursive2']


class UserTypeScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    perfil: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserTypeScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserTypeScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserTypeScalarWhereWithAggregatesInputRecursive3']


class UserTypeScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    perfil: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserTypeScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserTypeScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserTypeScalarWhereWithAggregatesInputRecursive4']


class UserTypeScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """UserType arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    perfil: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']



class UserTypeGroupByOutput(TypedDict, total=False):
    id: _str
    perfil: _str
    userId: _str
    _sum: 'UserTypeSumAggregateOutput'
    _avg: 'UserTypeAvgAggregateOutput'
    _min: 'UserTypeMinAggregateOutput'
    _max: 'UserTypeMaxAggregateOutput'
    _count: 'UserTypeCountAggregateOutput'


class UserTypeAvgAggregateOutput(TypedDict, total=False):
    """UserType output for aggregating averages"""


class UserTypeSumAggregateOutput(TypedDict, total=False):
    """UserType output for aggregating sums"""


class UserTypeScalarAggregateOutput(TypedDict, total=False):
    """UserType output including scalar fields"""
    id: _str
    perfil: _str
    userId: _str


UserTypeMinAggregateOutput = UserTypeScalarAggregateOutput
UserTypeMaxAggregateOutput = UserTypeScalarAggregateOutput


class UserTypeMaxAggregateInput(TypedDict, total=False):
    """UserType input for aggregating by max"""
    id: bool
    perfil: bool
    userId: bool


class UserTypeMinAggregateInput(TypedDict, total=False):
    """UserType input for aggregating by min"""
    id: bool
    perfil: bool
    userId: bool


class UserTypeNumberAggregateInput(TypedDict, total=False):
    """UserType input for aggregating numbers"""


UserTypeAvgAggregateInput = UserTypeNumberAggregateInput
UserTypeSumAggregateInput = UserTypeNumberAggregateInput


UserTypeCountAggregateInput = TypedDict(
    'UserTypeCountAggregateInput',
    {
        'id': bool,
        'perfil': bool,
        'userId': bool,
        '_all': bool,
    },
    total=False,
)

UserTypeCountAggregateOutput = TypedDict(
    'UserTypeCountAggregateOutput',
    {
        'id': int,
        'perfil': int,
        'userId': int,
        '_all': int,
    },
    total=False,
)


UserTypeKeys = Literal[
    'id',
    'perfil',
    'user',
    'userId',
]
UserTypeScalarFieldKeys = Literal[
    'id',
    'perfil',
    'userId',
]
UserTypeScalarFieldKeysT = TypeVar('UserTypeScalarFieldKeysT', bound=UserTypeScalarFieldKeys)

UserTypeRelationalFieldKeys = Literal[
        'user',
    ]

# Account types

class AccountOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Account create method"""
    id: _str
    userId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[_int]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]
    user: 'UserCreateNestedWithoutRelationsInput'


class AccountCreateInput(AccountOptionalCreateInput):
    """Required arguments to the Account create method"""
    type: _str
    provider: _str
    providerAccountId: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class AccountOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Account create method, without relations"""
    id: _str
    userId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[_int]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]


class AccountCreateWithoutRelationsInput(AccountOptionalCreateWithoutRelationsInput):
    """Required arguments to the Account create method, without relations"""
    type: _str
    provider: _str
    providerAccountId: _str


class AccountCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'AccountCreateWithoutRelationsInput'
    connect: 'AccountWhereUniqueInput'


class AccountCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['AccountCreateWithoutRelationsInput', List['AccountCreateWithoutRelationsInput']]
    connect: Union['AccountWhereUniqueInput', List['AccountWhereUniqueInput']]


_AccountWhereUnique_id_Input = TypedDict(
    '_AccountWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_AccountCompoundprovider_providerAccountIdKeyInner = TypedDict(
    '_AccountCompoundprovider_providerAccountIdKeyInner',
    {
        'provider': '_str',
        'providerAccountId': '_str',
    },
    total=True
)

_AccountCompoundprovider_providerAccountIdKey = TypedDict(
    '_AccountCompoundprovider_providerAccountIdKey',
    {
        'provider_providerAccountId': '_AccountCompoundprovider_providerAccountIdKeyInner',
    },
    total=True
)

AccountWhereUniqueInput = Union[
    '_AccountWhereUnique_id_Input',
    '_AccountCompoundprovider_providerAccountIdKey',
]


class AccountUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[Union[AtomicIntInput, _int]]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]
    user: 'UserUpdateOneWithoutRelationsInput'


class AccountUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[Union[AtomicIntInput, _int]]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]


class AccountUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['AccountCreateWithoutRelationsInput']
    connect: List['AccountWhereUniqueInput']
    set: List['AccountWhereUniqueInput']
    disconnect: List['AccountWhereUniqueInput']
    delete: List['AccountWhereUniqueInput']

    # TODO
    # update: List['AccountUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['AccountUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['AccountScalarWhereInput']
    # upsert: List['AccountUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['AccountCreateOrConnectWithoutRelationsInput']


class AccountUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'AccountCreateWithoutRelationsInput'
    connect: 'AccountWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'AccountUpdateInput'
    # upsert: 'AccountUpsertWithoutRelationsInput'
    # connectOrCreate: 'AccountCreateOrConnectWithoutRelationsInput'


class AccountUpsertInput(TypedDict):
    create: 'AccountCreateInput'
    update: 'AccountUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Account_id_OrderByInput = TypedDict(
    '_Account_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Account_userId_OrderByInput = TypedDict(
    '_Account_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Account_type_OrderByInput = TypedDict(
    '_Account_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Account_provider_OrderByInput = TypedDict(
    '_Account_provider_OrderByInput',
    {
        'provider': 'SortOrder',
    },
    total=True
)

_Account_providerAccountId_OrderByInput = TypedDict(
    '_Account_providerAccountId_OrderByInput',
    {
        'providerAccountId': 'SortOrder',
    },
    total=True
)

_Account_refresh_token_OrderByInput = TypedDict(
    '_Account_refresh_token_OrderByInput',
    {
        'refresh_token': 'SortOrder',
    },
    total=True
)

_Account_access_token_OrderByInput = TypedDict(
    '_Account_access_token_OrderByInput',
    {
        'access_token': 'SortOrder',
    },
    total=True
)

_Account_expires_at_OrderByInput = TypedDict(
    '_Account_expires_at_OrderByInput',
    {
        'expires_at': 'SortOrder',
    },
    total=True
)

_Account_token_type_OrderByInput = TypedDict(
    '_Account_token_type_OrderByInput',
    {
        'token_type': 'SortOrder',
    },
    total=True
)

_Account_scope_OrderByInput = TypedDict(
    '_Account_scope_OrderByInput',
    {
        'scope': 'SortOrder',
    },
    total=True
)

_Account_id_token_OrderByInput = TypedDict(
    '_Account_id_token_OrderByInput',
    {
        'id_token': 'SortOrder',
    },
    total=True
)

_Account_session_state_OrderByInput = TypedDict(
    '_Account_session_state_OrderByInput',
    {
        'session_state': 'SortOrder',
    },
    total=True
)

AccountOrderByInput = Union[
    '_Account_id_OrderByInput',
    '_Account_userId_OrderByInput',
    '_Account_type_OrderByInput',
    '_Account_provider_OrderByInput',
    '_Account_providerAccountId_OrderByInput',
    '_Account_refresh_token_OrderByInput',
    '_Account_access_token_OrderByInput',
    '_Account_expires_at_OrderByInput',
    '_Account_token_type_OrderByInput',
    '_Account_scope_OrderByInput',
    '_Account_id_token_OrderByInput',
    '_Account_session_state_OrderByInput',
]



# recursive Account types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

AccountRelationFilter = TypedDict(
    'AccountRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class AccountListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class AccountInclude(TypedDict, total=False):
    """Account relational arguments"""
    user: Union[bool, 'UserArgsFromAccount']


    

class UserIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromAccountRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromAccountRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromAccountRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromAccountRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromAccountRecursive1']


class UserIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromAccountRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromAccountRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromAccountRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromAccountRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromAccountRecursive2']


class UserIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromAccountRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromAccountRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromAccountRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromAccountRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromAccountRecursive3']


class UserIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromAccountRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromAccountRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromAccountRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromAccountRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromAccountRecursive4']


class UserIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class UserArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyUserArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    role: Union[bool, 'RoleArgsFromAccountRecursive1']
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class ProfileIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    role: Union[bool, 'RoleArgsFromAccountRecursive2']
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class ProfileIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    role: Union[bool, 'RoleArgsFromAccountRecursive3']
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class ProfileIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    role: Union[bool, 'RoleArgsFromAccountRecursive4']
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class ProfileIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class ProfileArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyProfileArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive1']


class RoleIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive2']


class RoleIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive3']


class RoleIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    profiles: Union[bool, 'FindManyProfileArgsFromAccountRecursive4']


class RoleIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class RoleArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyRoleArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    users: Union[bool, 'FindManyUserArgsFromAccountRecursive1']
    responsible: Union[bool, 'UserArgsFromAccountRecursive1']


class GymIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    users: Union[bool, 'FindManyUserArgsFromAccountRecursive2']
    responsible: Union[bool, 'UserArgsFromAccountRecursive2']


class GymIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    users: Union[bool, 'FindManyUserArgsFromAccountRecursive3']
    responsible: Union[bool, 'UserArgsFromAccountRecursive3']


class GymIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    users: Union[bool, 'FindManyUserArgsFromAccountRecursive4']
    responsible: Union[bool, 'UserArgsFromAccountRecursive4']


class GymIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class GymArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyGymArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class UserTypeIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class UserTypeIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class UserTypeIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class UserTypeIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class UserTypeArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyUserTypeArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class AccountIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class AccountIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class AccountIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class AccountIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class AccountArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyAccountArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class SessionIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class SessionIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class SessionIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class SessionIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class SessionArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManySessionArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class VerificationTokenArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyVerificationTokenArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class TodoIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class TodoIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class TodoIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class TodoIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class TodoArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyTodoArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class FormularioAvaliacaoFisicaIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class FormularioAvaliacaoFisicaIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class FormularioAvaliacaoFisicaIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class FormularioAvaliacaoFisicaIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class FormularioAvaliacaoFisicaArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""


class TreinoIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""


class TreinoIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""


class TreinoIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""


class TreinoIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class TreinoArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyTreinoArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class RegistraTreinoIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class RegistraTreinoIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class RegistraTreinoIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class RegistraTreinoIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class RegistraTreinoArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyRegistraTreinoArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyAccountArgs = FindManyAccountArgsFromAccount
FindFirstAccountArgs = FindManyAccountArgsFromAccount


    

class AccountWhereInput(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive1', List['AccountWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive1']
    OR: List['AccountWhereInputRecursive1']
    NOT: List['AccountWhereInputRecursive1']


class AccountWhereInputRecursive1(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive2', List['AccountWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive2']
    OR: List['AccountWhereInputRecursive2']
    NOT: List['AccountWhereInputRecursive2']


class AccountWhereInputRecursive2(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive3', List['AccountWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive3']
    OR: List['AccountWhereInputRecursive3']
    NOT: List['AccountWhereInputRecursive3']


class AccountWhereInputRecursive3(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive4', List['AccountWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive4']
    OR: List['AccountWhereInputRecursive4']
    NOT: List['AccountWhereInputRecursive4']


class AccountWhereInputRecursive4(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'



# aggregate Account types


    

class AccountScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive1']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive1']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive1']


class AccountScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive2']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive2']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive2']


class AccountScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive3']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive3']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive3']


class AccountScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive4']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive4']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive4']


class AccountScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Account arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']



class AccountGroupByOutput(TypedDict, total=False):
    id: _str
    userId: _str
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: _str
    access_token: _str
    expires_at: _int
    token_type: _str
    scope: _str
    id_token: _str
    session_state: _str
    _sum: 'AccountSumAggregateOutput'
    _avg: 'AccountAvgAggregateOutput'
    _min: 'AccountMinAggregateOutput'
    _max: 'AccountMaxAggregateOutput'
    _count: 'AccountCountAggregateOutput'


class AccountAvgAggregateOutput(TypedDict, total=False):
    """Account output for aggregating averages"""
    expires_at: float


class AccountSumAggregateOutput(TypedDict, total=False):
    """Account output for aggregating sums"""
    expires_at: _int


class AccountScalarAggregateOutput(TypedDict, total=False):
    """Account output including scalar fields"""
    id: _str
    userId: _str
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: _str
    access_token: _str
    expires_at: _int
    token_type: _str
    scope: _str
    id_token: _str
    session_state: _str


AccountMinAggregateOutput = AccountScalarAggregateOutput
AccountMaxAggregateOutput = AccountScalarAggregateOutput


class AccountMaxAggregateInput(TypedDict, total=False):
    """Account input for aggregating by max"""
    id: bool
    userId: bool
    type: bool
    provider: bool
    providerAccountId: bool
    refresh_token: bool
    access_token: bool
    expires_at: bool
    token_type: bool
    scope: bool
    id_token: bool
    session_state: bool


class AccountMinAggregateInput(TypedDict, total=False):
    """Account input for aggregating by min"""
    id: bool
    userId: bool
    type: bool
    provider: bool
    providerAccountId: bool
    refresh_token: bool
    access_token: bool
    expires_at: bool
    token_type: bool
    scope: bool
    id_token: bool
    session_state: bool


class AccountNumberAggregateInput(TypedDict, total=False):
    """Account input for aggregating numbers"""
    expires_at: bool


AccountAvgAggregateInput = AccountNumberAggregateInput
AccountSumAggregateInput = AccountNumberAggregateInput


AccountCountAggregateInput = TypedDict(
    'AccountCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'type': bool,
        'provider': bool,
        'providerAccountId': bool,
        'refresh_token': bool,
        'access_token': bool,
        'expires_at': bool,
        'token_type': bool,
        'scope': bool,
        'id_token': bool,
        'session_state': bool,
        '_all': bool,
    },
    total=False,
)

AccountCountAggregateOutput = TypedDict(
    'AccountCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'type': int,
        'provider': int,
        'providerAccountId': int,
        'refresh_token': int,
        'access_token': int,
        'expires_at': int,
        'token_type': int,
        'scope': int,
        'id_token': int,
        'session_state': int,
        '_all': int,
    },
    total=False,
)


AccountKeys = Literal[
    'id',
    'userId',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'user',
]
AccountScalarFieldKeys = Literal[
    'id',
    'userId',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
]
AccountScalarFieldKeysT = TypeVar('AccountScalarFieldKeysT', bound=AccountScalarFieldKeys)

AccountRelationalFieldKeys = Literal[
        'user',
    ]

# Session types

class SessionOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Session create method"""
    id: _str
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'


class SessionCreateInput(SessionOptionalCreateInput):
    """Required arguments to the Session create method"""
    sessionToken: _str
    expires: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class SessionOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Session create method, without relations"""
    id: _str
    userId: _str


class SessionCreateWithoutRelationsInput(SessionOptionalCreateWithoutRelationsInput):
    """Required arguments to the Session create method, without relations"""
    sessionToken: _str
    expires: datetime.datetime


class SessionCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'SessionCreateWithoutRelationsInput'
    connect: 'SessionWhereUniqueInput'


class SessionCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['SessionCreateWithoutRelationsInput', List['SessionCreateWithoutRelationsInput']]
    connect: Union['SessionWhereUniqueInput', List['SessionWhereUniqueInput']]


_SessionWhereUnique_id_Input = TypedDict(
    '_SessionWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_SessionWhereUnique_sessionToken_Input = TypedDict(
    '_SessionWhereUnique_sessionToken_Input',
    {
        'sessionToken': '_str',
    },
    total=True
)

SessionWhereUniqueInput = Union[
    '_SessionWhereUnique_id_Input',
    '_SessionWhereUnique_sessionToken_Input',
]


class SessionUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    sessionToken: _str
    expires: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'


class SessionUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    sessionToken: _str
    expires: datetime.datetime


class SessionUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['SessionCreateWithoutRelationsInput']
    connect: List['SessionWhereUniqueInput']
    set: List['SessionWhereUniqueInput']
    disconnect: List['SessionWhereUniqueInput']
    delete: List['SessionWhereUniqueInput']

    # TODO
    # update: List['SessionUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['SessionUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['SessionScalarWhereInput']
    # upsert: List['SessionUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['SessionCreateOrConnectWithoutRelationsInput']


class SessionUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'SessionCreateWithoutRelationsInput'
    connect: 'SessionWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'SessionUpdateInput'
    # upsert: 'SessionUpsertWithoutRelationsInput'
    # connectOrCreate: 'SessionCreateOrConnectWithoutRelationsInput'


class SessionUpsertInput(TypedDict):
    create: 'SessionCreateInput'
    update: 'SessionUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Session_id_OrderByInput = TypedDict(
    '_Session_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Session_sessionToken_OrderByInput = TypedDict(
    '_Session_sessionToken_OrderByInput',
    {
        'sessionToken': 'SortOrder',
    },
    total=True
)

_Session_userId_OrderByInput = TypedDict(
    '_Session_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Session_expires_OrderByInput = TypedDict(
    '_Session_expires_OrderByInput',
    {
        'expires': 'SortOrder',
    },
    total=True
)

SessionOrderByInput = Union[
    '_Session_id_OrderByInput',
    '_Session_sessionToken_OrderByInput',
    '_Session_userId_OrderByInput',
    '_Session_expires_OrderByInput',
]



# recursive Session types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

SessionRelationFilter = TypedDict(
    'SessionRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class SessionListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class SessionInclude(TypedDict, total=False):
    """Session relational arguments"""
    user: Union[bool, 'UserArgsFromSession']


    

class UserIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromSessionRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromSessionRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromSessionRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromSessionRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromSessionRecursive1']


class UserIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromSessionRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromSessionRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromSessionRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromSessionRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromSessionRecursive2']


class UserIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromSessionRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromSessionRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromSessionRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromSessionRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromSessionRecursive3']


class UserIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromSessionRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromSessionRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromSessionRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromSessionRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromSessionRecursive4']


class UserIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class UserArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyUserArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    role: Union[bool, 'RoleArgsFromSessionRecursive1']
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class ProfileIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    role: Union[bool, 'RoleArgsFromSessionRecursive2']
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class ProfileIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    role: Union[bool, 'RoleArgsFromSessionRecursive3']
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class ProfileIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    role: Union[bool, 'RoleArgsFromSessionRecursive4']
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class ProfileIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class ProfileArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyProfileArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive1']


class RoleIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive2']


class RoleIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive3']


class RoleIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    profiles: Union[bool, 'FindManyProfileArgsFromSessionRecursive4']


class RoleIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class RoleArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyRoleArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    users: Union[bool, 'FindManyUserArgsFromSessionRecursive1']
    responsible: Union[bool, 'UserArgsFromSessionRecursive1']


class GymIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    users: Union[bool, 'FindManyUserArgsFromSessionRecursive2']
    responsible: Union[bool, 'UserArgsFromSessionRecursive2']


class GymIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    users: Union[bool, 'FindManyUserArgsFromSessionRecursive3']
    responsible: Union[bool, 'UserArgsFromSessionRecursive3']


class GymIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    users: Union[bool, 'FindManyUserArgsFromSessionRecursive4']
    responsible: Union[bool, 'UserArgsFromSessionRecursive4']


class GymIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class GymArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyGymArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class UserTypeIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class UserTypeIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class UserTypeIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class UserTypeIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class UserTypeArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyUserTypeArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class AccountIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class AccountIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class AccountIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class AccountIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class AccountArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyAccountArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class SessionIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class SessionIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class SessionIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class SessionIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class SessionArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManySessionArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class VerificationTokenArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyVerificationTokenArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class TodoIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class TodoIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class TodoIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class TodoIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class TodoArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyTodoArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class FormularioAvaliacaoFisicaIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class FormularioAvaliacaoFisicaIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class FormularioAvaliacaoFisicaIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class FormularioAvaliacaoFisicaIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class FormularioAvaliacaoFisicaArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""


class TreinoIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""


class TreinoIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""


class TreinoIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""


class TreinoIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class TreinoArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyTreinoArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class RegistraTreinoIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class RegistraTreinoIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class RegistraTreinoIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class RegistraTreinoIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class RegistraTreinoArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyRegistraTreinoArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManySessionArgs = FindManySessionArgsFromSession
FindFirstSessionArgs = FindManySessionArgsFromSession


    

class SessionWhereInput(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive1', List['SessionWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive1']
    OR: List['SessionWhereInputRecursive1']
    NOT: List['SessionWhereInputRecursive1']


class SessionWhereInputRecursive1(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive2', List['SessionWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive2']
    OR: List['SessionWhereInputRecursive2']
    NOT: List['SessionWhereInputRecursive2']


class SessionWhereInputRecursive2(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive3', List['SessionWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive3']
    OR: List['SessionWhereInputRecursive3']
    NOT: List['SessionWhereInputRecursive3']


class SessionWhereInputRecursive3(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive4', List['SessionWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive4']
    OR: List['SessionWhereInputRecursive4']
    NOT: List['SessionWhereInputRecursive4']


class SessionWhereInputRecursive4(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'



# aggregate Session types


    

class SessionScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive1']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive1']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive1']


class SessionScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive2']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive2']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive2']


class SessionScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive3']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive3']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive3']


class SessionScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive4']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive4']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive4']


class SessionScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Session arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class SessionGroupByOutput(TypedDict, total=False):
    id: _str
    sessionToken: _str
    userId: _str
    expires: datetime.datetime
    _sum: 'SessionSumAggregateOutput'
    _avg: 'SessionAvgAggregateOutput'
    _min: 'SessionMinAggregateOutput'
    _max: 'SessionMaxAggregateOutput'
    _count: 'SessionCountAggregateOutput'


class SessionAvgAggregateOutput(TypedDict, total=False):
    """Session output for aggregating averages"""


class SessionSumAggregateOutput(TypedDict, total=False):
    """Session output for aggregating sums"""


class SessionScalarAggregateOutput(TypedDict, total=False):
    """Session output including scalar fields"""
    id: _str
    sessionToken: _str
    userId: _str
    expires: datetime.datetime


SessionMinAggregateOutput = SessionScalarAggregateOutput
SessionMaxAggregateOutput = SessionScalarAggregateOutput


class SessionMaxAggregateInput(TypedDict, total=False):
    """Session input for aggregating by max"""
    id: bool
    sessionToken: bool
    userId: bool
    expires: bool


class SessionMinAggregateInput(TypedDict, total=False):
    """Session input for aggregating by min"""
    id: bool
    sessionToken: bool
    userId: bool
    expires: bool


class SessionNumberAggregateInput(TypedDict, total=False):
    """Session input for aggregating numbers"""


SessionAvgAggregateInput = SessionNumberAggregateInput
SessionSumAggregateInput = SessionNumberAggregateInput


SessionCountAggregateInput = TypedDict(
    'SessionCountAggregateInput',
    {
        'id': bool,
        'sessionToken': bool,
        'userId': bool,
        'expires': bool,
        '_all': bool,
    },
    total=False,
)

SessionCountAggregateOutput = TypedDict(
    'SessionCountAggregateOutput',
    {
        'id': int,
        'sessionToken': int,
        'userId': int,
        'expires': int,
        '_all': int,
    },
    total=False,
)


SessionKeys = Literal[
    'id',
    'sessionToken',
    'userId',
    'expires',
    'user',
]
SessionScalarFieldKeys = Literal[
    'id',
    'sessionToken',
    'userId',
    'expires',
]
SessionScalarFieldKeysT = TypeVar('SessionScalarFieldKeysT', bound=SessionScalarFieldKeys)

SessionRelationalFieldKeys = Literal[
        'user',
    ]

# VerificationToken types

class VerificationTokenOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the VerificationToken create method"""


class VerificationTokenCreateInput(VerificationTokenOptionalCreateInput):
    """Required arguments to the VerificationToken create method"""
    identifier: _str
    token: _str
    expires: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class VerificationTokenOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the VerificationToken create method, without relations"""


class VerificationTokenCreateWithoutRelationsInput(VerificationTokenOptionalCreateWithoutRelationsInput):
    """Required arguments to the VerificationToken create method, without relations"""
    identifier: _str
    token: _str
    expires: datetime.datetime


class VerificationTokenCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'VerificationTokenCreateWithoutRelationsInput'
    connect: 'VerificationTokenWhereUniqueInput'


class VerificationTokenCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['VerificationTokenCreateWithoutRelationsInput', List['VerificationTokenCreateWithoutRelationsInput']]
    connect: Union['VerificationTokenWhereUniqueInput', List['VerificationTokenWhereUniqueInput']]


_VerificationTokenWhereUnique_token_Input = TypedDict(
    '_VerificationTokenWhereUnique_token_Input',
    {
        'token': '_str',
    },
    total=True
)

_VerificationTokenCompoundidentifier_tokenKeyInner = TypedDict(
    '_VerificationTokenCompoundidentifier_tokenKeyInner',
    {
        'identifier': '_str',
        'token': '_str',
    },
    total=True
)

_VerificationTokenCompoundidentifier_tokenKey = TypedDict(
    '_VerificationTokenCompoundidentifier_tokenKey',
    {
        'identifier_token': '_VerificationTokenCompoundidentifier_tokenKeyInner',
    },
    total=True
)

VerificationTokenWhereUniqueInput = Union[
    '_VerificationTokenWhereUnique_token_Input',
    '_VerificationTokenCompoundidentifier_tokenKey',
]


class VerificationTokenUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    identifier: _str
    token: _str
    expires: datetime.datetime


class VerificationTokenUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    identifier: _str
    token: _str
    expires: datetime.datetime


class VerificationTokenUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['VerificationTokenCreateWithoutRelationsInput']
    connect: List['VerificationTokenWhereUniqueInput']
    set: List['VerificationTokenWhereUniqueInput']
    disconnect: List['VerificationTokenWhereUniqueInput']
    delete: List['VerificationTokenWhereUniqueInput']

    # TODO
    # update: List['VerificationTokenUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['VerificationTokenUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['VerificationTokenScalarWhereInput']
    # upsert: List['VerificationTokenUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['VerificationTokenCreateOrConnectWithoutRelationsInput']


class VerificationTokenUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'VerificationTokenCreateWithoutRelationsInput'
    connect: 'VerificationTokenWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'VerificationTokenUpdateInput'
    # upsert: 'VerificationTokenUpsertWithoutRelationsInput'
    # connectOrCreate: 'VerificationTokenCreateOrConnectWithoutRelationsInput'


class VerificationTokenUpsertInput(TypedDict):
    create: 'VerificationTokenCreateInput'
    update: 'VerificationTokenUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_VerificationToken_identifier_OrderByInput = TypedDict(
    '_VerificationToken_identifier_OrderByInput',
    {
        'identifier': 'SortOrder',
    },
    total=True
)

_VerificationToken_token_OrderByInput = TypedDict(
    '_VerificationToken_token_OrderByInput',
    {
        'token': 'SortOrder',
    },
    total=True
)

_VerificationToken_expires_OrderByInput = TypedDict(
    '_VerificationToken_expires_OrderByInput',
    {
        'expires': 'SortOrder',
    },
    total=True
)

VerificationTokenOrderByInput = Union[
    '_VerificationToken_identifier_OrderByInput',
    '_VerificationToken_token_OrderByInput',
    '_VerificationToken_expires_OrderByInput',
]



# recursive VerificationToken types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

VerificationTokenRelationFilter = TypedDict(
    'VerificationTokenRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class VerificationTokenListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class VerificationTokenInclude(TypedDict, total=False):
    """VerificationToken relational arguments"""


    

class UserIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromVerificationTokenRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromVerificationTokenRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromVerificationTokenRecursive1']


class UserIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromVerificationTokenRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromVerificationTokenRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromVerificationTokenRecursive2']


class UserIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromVerificationTokenRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromVerificationTokenRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromVerificationTokenRecursive3']


class UserIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromVerificationTokenRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromVerificationTokenRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromVerificationTokenRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromVerificationTokenRecursive4']


class UserIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class UserArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyUserArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    role: Union[bool, 'RoleArgsFromVerificationTokenRecursive1']
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class ProfileIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    role: Union[bool, 'RoleArgsFromVerificationTokenRecursive2']
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class ProfileIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    role: Union[bool, 'RoleArgsFromVerificationTokenRecursive3']
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class ProfileIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    role: Union[bool, 'RoleArgsFromVerificationTokenRecursive4']
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class ProfileIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class ProfileArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyProfileArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive1']


class RoleIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive2']


class RoleIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive3']


class RoleIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    profiles: Union[bool, 'FindManyProfileArgsFromVerificationTokenRecursive4']


class RoleIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class RoleArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyRoleArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    users: Union[bool, 'FindManyUserArgsFromVerificationTokenRecursive1']
    responsible: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class GymIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    users: Union[bool, 'FindManyUserArgsFromVerificationTokenRecursive2']
    responsible: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class GymIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    users: Union[bool, 'FindManyUserArgsFromVerificationTokenRecursive3']
    responsible: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class GymIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    users: Union[bool, 'FindManyUserArgsFromVerificationTokenRecursive4']
    responsible: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class GymIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class GymArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyGymArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class UserTypeIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class UserTypeIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class UserTypeIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class UserTypeIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class UserTypeArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyUserTypeArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class AccountIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class AccountIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class AccountIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class AccountIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class AccountArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyAccountArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class SessionIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class SessionIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class SessionIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class SessionIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class SessionArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManySessionArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class VerificationTokenArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyVerificationTokenArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class TodoIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class TodoIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class TodoIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class TodoIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class TodoArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyTodoArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class FormularioAvaliacaoFisicaIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class FormularioAvaliacaoFisicaIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class FormularioAvaliacaoFisicaIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class FormularioAvaliacaoFisicaIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class FormularioAvaliacaoFisicaArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class TreinoIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class TreinoIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class TreinoIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class TreinoIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class TreinoArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyTreinoArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class RegistraTreinoIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class RegistraTreinoIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class RegistraTreinoIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class RegistraTreinoIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class RegistraTreinoArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyRegistraTreinoArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyVerificationTokenArgs = FindManyVerificationTokenArgsFromVerificationToken
FindFirstVerificationTokenArgs = FindManyVerificationTokenArgsFromVerificationToken


    

class VerificationTokenWhereInput(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive1', List['VerificationTokenWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive1']
    OR: List['VerificationTokenWhereInputRecursive1']
    NOT: List['VerificationTokenWhereInputRecursive1']


class VerificationTokenWhereInputRecursive1(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive2', List['VerificationTokenWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive2']
    OR: List['VerificationTokenWhereInputRecursive2']
    NOT: List['VerificationTokenWhereInputRecursive2']


class VerificationTokenWhereInputRecursive2(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive3', List['VerificationTokenWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive3']
    OR: List['VerificationTokenWhereInputRecursive3']
    NOT: List['VerificationTokenWhereInputRecursive3']


class VerificationTokenWhereInputRecursive3(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive4', List['VerificationTokenWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive4']
    OR: List['VerificationTokenWhereInputRecursive4']
    NOT: List['VerificationTokenWhereInputRecursive4']


class VerificationTokenWhereInputRecursive4(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate VerificationToken types


    

class VerificationTokenScalarWhereWithAggregatesInput(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive1']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive1']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive1']


class VerificationTokenScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive2']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive2']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive2']


class VerificationTokenScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive3']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive3']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive3']


class VerificationTokenScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive4']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive4']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive4']


class VerificationTokenScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class VerificationTokenGroupByOutput(TypedDict, total=False):
    identifier: _str
    token: _str
    expires: datetime.datetime
    _sum: 'VerificationTokenSumAggregateOutput'
    _avg: 'VerificationTokenAvgAggregateOutput'
    _min: 'VerificationTokenMinAggregateOutput'
    _max: 'VerificationTokenMaxAggregateOutput'
    _count: 'VerificationTokenCountAggregateOutput'


class VerificationTokenAvgAggregateOutput(TypedDict, total=False):
    """VerificationToken output for aggregating averages"""


class VerificationTokenSumAggregateOutput(TypedDict, total=False):
    """VerificationToken output for aggregating sums"""


class VerificationTokenScalarAggregateOutput(TypedDict, total=False):
    """VerificationToken output including scalar fields"""
    identifier: _str
    token: _str
    expires: datetime.datetime


VerificationTokenMinAggregateOutput = VerificationTokenScalarAggregateOutput
VerificationTokenMaxAggregateOutput = VerificationTokenScalarAggregateOutput


class VerificationTokenMaxAggregateInput(TypedDict, total=False):
    """VerificationToken input for aggregating by max"""
    identifier: bool
    token: bool
    expires: bool


class VerificationTokenMinAggregateInput(TypedDict, total=False):
    """VerificationToken input for aggregating by min"""
    identifier: bool
    token: bool
    expires: bool


class VerificationTokenNumberAggregateInput(TypedDict, total=False):
    """VerificationToken input for aggregating numbers"""


VerificationTokenAvgAggregateInput = VerificationTokenNumberAggregateInput
VerificationTokenSumAggregateInput = VerificationTokenNumberAggregateInput


VerificationTokenCountAggregateInput = TypedDict(
    'VerificationTokenCountAggregateInput',
    {
        'identifier': bool,
        'token': bool,
        'expires': bool,
        '_all': bool,
    },
    total=False,
)

VerificationTokenCountAggregateOutput = TypedDict(
    'VerificationTokenCountAggregateOutput',
    {
        'identifier': int,
        'token': int,
        'expires': int,
        '_all': int,
    },
    total=False,
)


VerificationTokenKeys = Literal[
    'identifier',
    'token',
    'expires',
]
VerificationTokenScalarFieldKeys = Literal[
    'identifier',
    'token',
    'expires',
]
VerificationTokenScalarFieldKeysT = TypeVar('VerificationTokenScalarFieldKeysT', bound=VerificationTokenScalarFieldKeys)

VerificationTokenRelationalFieldKeys = _NoneType

# Todo types

class TodoOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Todo create method"""
    id: _str
    userId: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserCreateNestedWithoutRelationsInput'
    doneAt: Optional[datetime.datetime]


class TodoCreateInput(TodoOptionalCreateInput):
    """Required arguments to the Todo create method"""
    title: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class TodoOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Todo create method, without relations"""
    id: _str
    userId: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    doneAt: Optional[datetime.datetime]


class TodoCreateWithoutRelationsInput(TodoOptionalCreateWithoutRelationsInput):
    """Required arguments to the Todo create method, without relations"""
    title: _str


class TodoCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'TodoCreateWithoutRelationsInput'
    connect: 'TodoWhereUniqueInput'


class TodoCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['TodoCreateWithoutRelationsInput', List['TodoCreateWithoutRelationsInput']]
    connect: Union['TodoWhereUniqueInput', List['TodoWhereUniqueInput']]


_TodoWhereUnique_id_Input = TypedDict(
    '_TodoWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

TodoWhereUniqueInput = _TodoWhereUnique_id_Input


class TodoUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    title: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'
    doneAt: Optional[datetime.datetime]


class TodoUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    title: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    doneAt: Optional[datetime.datetime]


class TodoUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['TodoCreateWithoutRelationsInput']
    connect: List['TodoWhereUniqueInput']
    set: List['TodoWhereUniqueInput']
    disconnect: List['TodoWhereUniqueInput']
    delete: List['TodoWhereUniqueInput']

    # TODO
    # update: List['TodoUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['TodoUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['TodoScalarWhereInput']
    # upsert: List['TodoUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['TodoCreateOrConnectWithoutRelationsInput']


class TodoUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'TodoCreateWithoutRelationsInput'
    connect: 'TodoWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'TodoUpdateInput'
    # upsert: 'TodoUpsertWithoutRelationsInput'
    # connectOrCreate: 'TodoCreateOrConnectWithoutRelationsInput'


class TodoUpsertInput(TypedDict):
    create: 'TodoCreateInput'
    update: 'TodoUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Todo_id_OrderByInput = TypedDict(
    '_Todo_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Todo_title_OrderByInput = TypedDict(
    '_Todo_title_OrderByInput',
    {
        'title': 'SortOrder',
    },
    total=True
)

_Todo_userId_OrderByInput = TypedDict(
    '_Todo_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Todo_createdAt_OrderByInput = TypedDict(
    '_Todo_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Todo_updatedAt_OrderByInput = TypedDict(
    '_Todo_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Todo_doneAt_OrderByInput = TypedDict(
    '_Todo_doneAt_OrderByInput',
    {
        'doneAt': 'SortOrder',
    },
    total=True
)

TodoOrderByInput = Union[
    '_Todo_id_OrderByInput',
    '_Todo_title_OrderByInput',
    '_Todo_userId_OrderByInput',
    '_Todo_createdAt_OrderByInput',
    '_Todo_updatedAt_OrderByInput',
    '_Todo_doneAt_OrderByInput',
]



# recursive Todo types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

TodoRelationFilter = TypedDict(
    'TodoRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class TodoListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class TodoInclude(TypedDict, total=False):
    """Todo relational arguments"""
    user: Union[bool, 'UserArgsFromTodo']


    

class UserIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    accounts: Union[bool, 'FindManyAccountArgsFromTodoRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromTodoRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromTodoRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromTodoRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromTodoRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTodoRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTodoRecursive1']


class UserIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    accounts: Union[bool, 'FindManyAccountArgsFromTodoRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromTodoRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromTodoRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromTodoRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromTodoRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTodoRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTodoRecursive2']


class UserIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    accounts: Union[bool, 'FindManyAccountArgsFromTodoRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromTodoRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromTodoRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromTodoRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromTodoRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTodoRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTodoRecursive3']


class UserIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    accounts: Union[bool, 'FindManyAccountArgsFromTodoRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromTodoRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromTodoRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromTodoRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromTodoRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTodoRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTodoRecursive4']


class UserIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class UserArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyUserArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    role: Union[bool, 'RoleArgsFromTodoRecursive1']
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class ProfileIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    role: Union[bool, 'RoleArgsFromTodoRecursive2']
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class ProfileIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    role: Union[bool, 'RoleArgsFromTodoRecursive3']
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class ProfileIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    role: Union[bool, 'RoleArgsFromTodoRecursive4']
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class ProfileIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class ProfileArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyProfileArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive1']


class RoleIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive2']


class RoleIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive3']


class RoleIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    profiles: Union[bool, 'FindManyProfileArgsFromTodoRecursive4']


class RoleIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class RoleArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyRoleArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    users: Union[bool, 'FindManyUserArgsFromTodoRecursive1']
    responsible: Union[bool, 'UserArgsFromTodoRecursive1']


class GymIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    users: Union[bool, 'FindManyUserArgsFromTodoRecursive2']
    responsible: Union[bool, 'UserArgsFromTodoRecursive2']


class GymIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    users: Union[bool, 'FindManyUserArgsFromTodoRecursive3']
    responsible: Union[bool, 'UserArgsFromTodoRecursive3']


class GymIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    users: Union[bool, 'FindManyUserArgsFromTodoRecursive4']
    responsible: Union[bool, 'UserArgsFromTodoRecursive4']


class GymIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class GymArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyGymArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class UserTypeIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class UserTypeIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class UserTypeIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class UserTypeIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class UserTypeArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyUserTypeArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class AccountIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class AccountIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class AccountIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class AccountIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class AccountArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyAccountArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class SessionIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class SessionIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class SessionIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class SessionIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class SessionArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManySessionArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""


class VerificationTokenIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""


class VerificationTokenIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""


class VerificationTokenIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""


class VerificationTokenIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class VerificationTokenArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyVerificationTokenArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class TodoIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class TodoIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class TodoIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class TodoIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class TodoArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyTodoArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class FormularioAvaliacaoFisicaIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class FormularioAvaliacaoFisicaIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class FormularioAvaliacaoFisicaIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class FormularioAvaliacaoFisicaIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class FormularioAvaliacaoFisicaArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""


class TreinoIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""


class TreinoIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""


class TreinoIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""


class TreinoIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class TreinoArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyTreinoArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromTodo(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive1']


class RegistraTreinoIncludeFromTodoRecursive1(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive2']


class RegistraTreinoIncludeFromTodoRecursive2(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive3']


class RegistraTreinoIncludeFromTodoRecursive3(TypedDict, total=False):
    """Relational arguments for Todo"""
    user: Union[bool, 'UserArgsFromTodoRecursive4']


class RegistraTreinoIncludeFromTodoRecursive4(TypedDict, total=False):
    """Relational arguments for Todo"""

    

class RegistraTreinoArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    
    

class FindManyRegistraTreinoArgsFromTodo(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromTodoRecursive1(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromTodoRecursive2(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromTodoRecursive3(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromTodoRecursive4(TypedDict, total=False):
    """Arguments for Todo"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyTodoArgs = FindManyTodoArgsFromTodo
FindFirstTodoArgs = FindManyTodoArgsFromTodo


    

class TodoWhereInput(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    title: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    doneAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['TodoWhereInputRecursive1', List['TodoWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['TodoWhereInputRecursive1']
    OR: List['TodoWhereInputRecursive1']
    NOT: List['TodoWhereInputRecursive1']


class TodoWhereInputRecursive1(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    title: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    doneAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['TodoWhereInputRecursive2', List['TodoWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['TodoWhereInputRecursive2']
    OR: List['TodoWhereInputRecursive2']
    NOT: List['TodoWhereInputRecursive2']


class TodoWhereInputRecursive2(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    title: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    doneAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['TodoWhereInputRecursive3', List['TodoWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['TodoWhereInputRecursive3']
    OR: List['TodoWhereInputRecursive3']
    NOT: List['TodoWhereInputRecursive3']


class TodoWhereInputRecursive3(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    title: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    doneAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['TodoWhereInputRecursive4', List['TodoWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['TodoWhereInputRecursive4']
    OR: List['TodoWhereInputRecursive4']
    NOT: List['TodoWhereInputRecursive4']


class TodoWhereInputRecursive4(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    title: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    doneAt: Union[None, datetime.datetime, 'types.DateTimeFilter']



# aggregate Todo types


    

class TodoScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    doneAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TodoScalarWhereWithAggregatesInputRecursive1']
    OR: List['TodoScalarWhereWithAggregatesInputRecursive1']
    NOT: List['TodoScalarWhereWithAggregatesInputRecursive1']


class TodoScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    doneAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TodoScalarWhereWithAggregatesInputRecursive2']
    OR: List['TodoScalarWhereWithAggregatesInputRecursive2']
    NOT: List['TodoScalarWhereWithAggregatesInputRecursive2']


class TodoScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    doneAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TodoScalarWhereWithAggregatesInputRecursive3']
    OR: List['TodoScalarWhereWithAggregatesInputRecursive3']
    NOT: List['TodoScalarWhereWithAggregatesInputRecursive3']


class TodoScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    doneAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TodoScalarWhereWithAggregatesInputRecursive4']
    OR: List['TodoScalarWhereWithAggregatesInputRecursive4']
    NOT: List['TodoScalarWhereWithAggregatesInputRecursive4']


class TodoScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Todo arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    doneAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class TodoGroupByOutput(TypedDict, total=False):
    id: _str
    title: _str
    userId: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    doneAt: datetime.datetime
    _sum: 'TodoSumAggregateOutput'
    _avg: 'TodoAvgAggregateOutput'
    _min: 'TodoMinAggregateOutput'
    _max: 'TodoMaxAggregateOutput'
    _count: 'TodoCountAggregateOutput'


class TodoAvgAggregateOutput(TypedDict, total=False):
    """Todo output for aggregating averages"""


class TodoSumAggregateOutput(TypedDict, total=False):
    """Todo output for aggregating sums"""


class TodoScalarAggregateOutput(TypedDict, total=False):
    """Todo output including scalar fields"""
    id: _str
    title: _str
    userId: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    doneAt: datetime.datetime


TodoMinAggregateOutput = TodoScalarAggregateOutput
TodoMaxAggregateOutput = TodoScalarAggregateOutput


class TodoMaxAggregateInput(TypedDict, total=False):
    """Todo input for aggregating by max"""
    id: bool
    title: bool
    userId: bool
    createdAt: bool
    updatedAt: bool
    doneAt: bool


class TodoMinAggregateInput(TypedDict, total=False):
    """Todo input for aggregating by min"""
    id: bool
    title: bool
    userId: bool
    createdAt: bool
    updatedAt: bool
    doneAt: bool


class TodoNumberAggregateInput(TypedDict, total=False):
    """Todo input for aggregating numbers"""


TodoAvgAggregateInput = TodoNumberAggregateInput
TodoSumAggregateInput = TodoNumberAggregateInput


TodoCountAggregateInput = TypedDict(
    'TodoCountAggregateInput',
    {
        'id': bool,
        'title': bool,
        'userId': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'doneAt': bool,
        '_all': bool,
    },
    total=False,
)

TodoCountAggregateOutput = TypedDict(
    'TodoCountAggregateOutput',
    {
        'id': int,
        'title': int,
        'userId': int,
        'createdAt': int,
        'updatedAt': int,
        'doneAt': int,
        '_all': int,
    },
    total=False,
)


TodoKeys = Literal[
    'id',
    'title',
    'userId',
    'createdAt',
    'updatedAt',
    'user',
    'doneAt',
]
TodoScalarFieldKeys = Literal[
    'id',
    'title',
    'userId',
    'createdAt',
    'updatedAt',
    'doneAt',
]
TodoScalarFieldKeysT = TypeVar('TodoScalarFieldKeysT', bound=TodoScalarFieldKeys)

TodoRelationalFieldKeys = Literal[
        'user',
    ]

# QuestionarioProntidaoAvaliacaoFisica types

class QuestionarioProntidaoAvaliacaoFisicaOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the QuestionarioProntidaoAvaliacaoFisica create method"""
    id: _str
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'


class QuestionarioProntidaoAvaliacaoFisicaCreateInput(QuestionarioProntidaoAvaliacaoFisicaOptionalCreateInput):
    """Required arguments to the QuestionarioProntidaoAvaliacaoFisica create method"""
    aluno: _str
    sexo: _str
    treinador: _str
    dataNascimento: _str
    Objetivo: _str
    tempoTreinamentoIninterruptoAtual: _str
    tempoDestreinamento: _str
    experienciaPreviaTreinamento: _str
    frequenciaMusculacao: _str
    modalidadeExtra: _str
    frequenciaModalidadeExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str
    idtagaluno: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class QuestionarioProntidaoAvaliacaoFisicaOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the QuestionarioProntidaoAvaliacaoFisica create method, without relations"""
    id: _str
    userId: _str


class QuestionarioProntidaoAvaliacaoFisicaCreateWithoutRelationsInput(QuestionarioProntidaoAvaliacaoFisicaOptionalCreateWithoutRelationsInput):
    """Required arguments to the QuestionarioProntidaoAvaliacaoFisica create method, without relations"""
    aluno: _str
    sexo: _str
    treinador: _str
    dataNascimento: _str
    Objetivo: _str
    tempoTreinamentoIninterruptoAtual: _str
    tempoDestreinamento: _str
    experienciaPreviaTreinamento: _str
    frequenciaMusculacao: _str
    modalidadeExtra: _str
    frequenciaModalidadeExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str
    idtagaluno: _str


class QuestionarioProntidaoAvaliacaoFisicaCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'QuestionarioProntidaoAvaliacaoFisicaCreateWithoutRelationsInput'
    connect: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'


class QuestionarioProntidaoAvaliacaoFisicaCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['QuestionarioProntidaoAvaliacaoFisicaCreateWithoutRelationsInput', List['QuestionarioProntidaoAvaliacaoFisicaCreateWithoutRelationsInput']]
    connect: Union['QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput', List['QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput']]


_QuestionarioProntidaoAvaliacaoFisicaWhereUnique_id_Input = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisicaWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput = _QuestionarioProntidaoAvaliacaoFisicaWhereUnique_id_Input


class QuestionarioProntidaoAvaliacaoFisicaUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    aluno: _str
    user: 'UserUpdateOneWithoutRelationsInput'
    sexo: _str
    treinador: _str
    dataNascimento: _str
    Objetivo: _str
    tempoTreinamentoIninterruptoAtual: _str
    tempoDestreinamento: _str
    experienciaPreviaTreinamento: _str
    frequenciaMusculacao: _str
    modalidadeExtra: _str
    frequenciaModalidadeExtra: _str
    altura: Union[AtomicFloatInput, _float]
    peso: Union[AtomicFloatInput, _float]
    torax: Union[AtomicFloatInput, _float]
    cintura: Union[AtomicFloatInput, _float]
    abdomen: Union[AtomicFloatInput, _float]
    quadril: Union[AtomicFloatInput, _float]
    braco_d: Union[AtomicFloatInput, _float]
    braco_e: Union[AtomicFloatInput, _float]
    coxa_d: Union[AtomicFloatInput, _float]
    coxa_e: Union[AtomicFloatInput, _float]
    panturrilha_d: Union[AtomicFloatInput, _float]
    panturrilha_e: Union[AtomicFloatInput, _float]
    medidaMao: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralDireita: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralEsquerda: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilEsquerdo: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloEsquerdo: Union[AtomicFloatInput, _float]
    pranchaVentral: Union[AtomicFloatInput, _float]
    extensaoColuna: Union[AtomicFloatInput, _float]
    pranchaLateralDireita: Union[AtomicFloatInput, _float]
    pranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    squatJump1: Union[AtomicFloatInput, _float]
    squatJump2: Union[AtomicFloatInput, _float]
    squatJump3: Union[AtomicFloatInput, _float]
    RMagachamento: Union[AtomicFloatInput, _float]
    RMsupino: Union[AtomicFloatInput, _float]
    RMterra: Union[AtomicFloatInput, _float]
    RMbarraFixa: Union[AtomicFloatInput, _float]
    VelocidadeAerobiaMaxima: Union[AtomicFloatInput, _float]
    bracoDireito: Union[AtomicFloatInput, _float]
    bracoEsquerdo: Union[AtomicFloatInput, _float]
    coxaDireita: Union[AtomicFloatInput, _float]
    coxaEsquerda: Union[AtomicFloatInput, _float]
    panturrilhaDireita: Union[AtomicFloatInput, _float]
    panturrilhaEsquerda: Union[AtomicFloatInput, _float]
    idade: Union[AtomicIntInput, _int]
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: Union[AtomicIntInput, _int]
    pontuacao_tempo_de_destreinamento_atual: Union[AtomicIntInput, _int]
    pontuacao_experiencia_previa_de_treinamento: Union[AtomicIntInput, _int]
    pontuacao_media_nivel_treinamento: Union[AtomicFloatInput, _float]
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: Union[AtomicFloatInput, _float]
    pontosExtensaoColuna: Union[AtomicFloatInput, _float]
    pontosPranchaLateralDireita: Union[AtomicFloatInput, _float]
    pontosPranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    forcaRelativaAgachamento: Union[AtomicFloatInput, _float]
    forcaRelativaSupino: Union[AtomicFloatInput, _float]
    forcaRelativaTerra: Union[AtomicFloatInput, _float]
    forcaRelativaBarraFixa: Union[AtomicFloatInput, _float]
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: Union[AtomicFloatInput, _float]
    pontuacao_supino_nivel: Union[AtomicFloatInput, _float]
    pontuacao_terra_nivel: Union[AtomicFloatInput, _float]
    media_squat_jump: Union[AtomicFloatInput, _float]
    vo2_estimado: Union[AtomicFloatInput, _float]
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: Union[AtomicFloatInput, _float]
    ClassificacaoIMC: _str
    idtagaluno: _str


class QuestionarioProntidaoAvaliacaoFisicaUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    aluno: _str
    sexo: _str
    treinador: _str
    dataNascimento: _str
    Objetivo: _str
    tempoTreinamentoIninterruptoAtual: _str
    tempoDestreinamento: _str
    experienciaPreviaTreinamento: _str
    frequenciaMusculacao: _str
    modalidadeExtra: _str
    frequenciaModalidadeExtra: _str
    altura: Union[AtomicFloatInput, _float]
    peso: Union[AtomicFloatInput, _float]
    torax: Union[AtomicFloatInput, _float]
    cintura: Union[AtomicFloatInput, _float]
    abdomen: Union[AtomicFloatInput, _float]
    quadril: Union[AtomicFloatInput, _float]
    braco_d: Union[AtomicFloatInput, _float]
    braco_e: Union[AtomicFloatInput, _float]
    coxa_d: Union[AtomicFloatInput, _float]
    coxa_e: Union[AtomicFloatInput, _float]
    panturrilha_d: Union[AtomicFloatInput, _float]
    panturrilha_e: Union[AtomicFloatInput, _float]
    medidaMao: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralDireita: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralEsquerda: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilEsquerdo: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloEsquerdo: Union[AtomicFloatInput, _float]
    pranchaVentral: Union[AtomicFloatInput, _float]
    extensaoColuna: Union[AtomicFloatInput, _float]
    pranchaLateralDireita: Union[AtomicFloatInput, _float]
    pranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    squatJump1: Union[AtomicFloatInput, _float]
    squatJump2: Union[AtomicFloatInput, _float]
    squatJump3: Union[AtomicFloatInput, _float]
    RMagachamento: Union[AtomicFloatInput, _float]
    RMsupino: Union[AtomicFloatInput, _float]
    RMterra: Union[AtomicFloatInput, _float]
    RMbarraFixa: Union[AtomicFloatInput, _float]
    VelocidadeAerobiaMaxima: Union[AtomicFloatInput, _float]
    bracoDireito: Union[AtomicFloatInput, _float]
    bracoEsquerdo: Union[AtomicFloatInput, _float]
    coxaDireita: Union[AtomicFloatInput, _float]
    coxaEsquerda: Union[AtomicFloatInput, _float]
    panturrilhaDireita: Union[AtomicFloatInput, _float]
    panturrilhaEsquerda: Union[AtomicFloatInput, _float]
    idade: Union[AtomicIntInput, _int]
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: Union[AtomicIntInput, _int]
    pontuacao_tempo_de_destreinamento_atual: Union[AtomicIntInput, _int]
    pontuacao_experiencia_previa_de_treinamento: Union[AtomicIntInput, _int]
    pontuacao_media_nivel_treinamento: Union[AtomicFloatInput, _float]
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: Union[AtomicFloatInput, _float]
    pontosExtensaoColuna: Union[AtomicFloatInput, _float]
    pontosPranchaLateralDireita: Union[AtomicFloatInput, _float]
    pontosPranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    forcaRelativaAgachamento: Union[AtomicFloatInput, _float]
    forcaRelativaSupino: Union[AtomicFloatInput, _float]
    forcaRelativaTerra: Union[AtomicFloatInput, _float]
    forcaRelativaBarraFixa: Union[AtomicFloatInput, _float]
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: Union[AtomicFloatInput, _float]
    pontuacao_supino_nivel: Union[AtomicFloatInput, _float]
    pontuacao_terra_nivel: Union[AtomicFloatInput, _float]
    media_squat_jump: Union[AtomicFloatInput, _float]
    vo2_estimado: Union[AtomicFloatInput, _float]
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: Union[AtomicFloatInput, _float]
    ClassificacaoIMC: _str
    idtagaluno: _str


class QuestionarioProntidaoAvaliacaoFisicaUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['QuestionarioProntidaoAvaliacaoFisicaCreateWithoutRelationsInput']
    connect: List['QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput']
    set: List['QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput']
    disconnect: List['QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput']
    delete: List['QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput']

    # TODO
    # update: List['QuestionarioProntidaoAvaliacaoFisicaUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['QuestionarioProntidaoAvaliacaoFisicaUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereInput']
    # upsert: List['QuestionarioProntidaoAvaliacaoFisicaUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['QuestionarioProntidaoAvaliacaoFisicaCreateOrConnectWithoutRelationsInput']


class QuestionarioProntidaoAvaliacaoFisicaUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'QuestionarioProntidaoAvaliacaoFisicaCreateWithoutRelationsInput'
    connect: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'QuestionarioProntidaoAvaliacaoFisicaUpdateInput'
    # upsert: 'QuestionarioProntidaoAvaliacaoFisicaUpsertWithoutRelationsInput'
    # connectOrCreate: 'QuestionarioProntidaoAvaliacaoFisicaCreateOrConnectWithoutRelationsInput'


class QuestionarioProntidaoAvaliacaoFisicaUpsertInput(TypedDict):
    create: 'QuestionarioProntidaoAvaliacaoFisicaCreateInput'
    update: 'QuestionarioProntidaoAvaliacaoFisicaUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_QuestionarioProntidaoAvaliacaoFisica_id_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_aluno_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_aluno_OrderByInput',
    {
        'aluno': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_userId_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_sexo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_sexo_OrderByInput',
    {
        'sexo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_treinador_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_treinador_OrderByInput',
    {
        'treinador': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_dataNascimento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_dataNascimento_OrderByInput',
    {
        'dataNascimento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_Objetivo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_Objetivo_OrderByInput',
    {
        'Objetivo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_tempoTreinamentoIninterruptoAtual_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_tempoTreinamentoIninterruptoAtual_OrderByInput',
    {
        'tempoTreinamentoIninterruptoAtual': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_tempoDestreinamento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_tempoDestreinamento_OrderByInput',
    {
        'tempoDestreinamento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_experienciaPreviaTreinamento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_experienciaPreviaTreinamento_OrderByInput',
    {
        'experienciaPreviaTreinamento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_frequenciaMusculacao_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_frequenciaMusculacao_OrderByInput',
    {
        'frequenciaMusculacao': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_modalidadeExtra_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_modalidadeExtra_OrderByInput',
    {
        'modalidadeExtra': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_frequenciaModalidadeExtra_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_frequenciaModalidadeExtra_OrderByInput',
    {
        'frequenciaModalidadeExtra': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_altura_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_altura_OrderByInput',
    {
        'altura': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_peso_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_peso_OrderByInput',
    {
        'peso': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_torax_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_torax_OrderByInput',
    {
        'torax': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_cintura_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_cintura_OrderByInput',
    {
        'cintura': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_abdomen_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_abdomen_OrderByInput',
    {
        'abdomen': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_quadril_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_quadril_OrderByInput',
    {
        'quadril': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_braco_d_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_braco_d_OrderByInput',
    {
        'braco_d': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_braco_e_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_braco_e_OrderByInput',
    {
        'braco_e': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_coxa_d_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_coxa_d_OrderByInput',
    {
        'coxa_d': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_coxa_e_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_coxa_e_OrderByInput',
    {
        'coxa_e': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_panturrilha_d_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilha_d_OrderByInput',
    {
        'panturrilha_d': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_panturrilha_e_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilha_e_OrderByInput',
    {
        'panturrilha_e': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_medidaMao_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_medidaMao_OrderByInput',
    {
        'medidaMao': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_mobilidadeGlenoumeralDireita_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_mobilidadeGlenoumeralDireita_OrderByInput',
    {
        'mobilidadeGlenoumeralDireita': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_mobilidadeGlenoumeralEsquerda_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_mobilidadeGlenoumeralEsquerda_OrderByInput',
    {
        'mobilidadeGlenoumeralEsquerda': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoQuadrilDireito_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoQuadrilDireito_OrderByInput',
    {
        'AmplitudeMovimentoQuadrilDireito': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoQuadrilEsquerdo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoQuadrilEsquerdo_OrderByInput',
    {
        'AmplitudeMovimentoQuadrilEsquerdo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoTornozeloDireito_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoTornozeloDireito_OrderByInput',
    {
        'AmplitudeMovimentoTornozeloDireito': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoTornozeloEsquerdo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoTornozeloEsquerdo_OrderByInput',
    {
        'AmplitudeMovimentoTornozeloEsquerdo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pranchaVentral_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pranchaVentral_OrderByInput',
    {
        'pranchaVentral': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_extensaoColuna_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_extensaoColuna_OrderByInput',
    {
        'extensaoColuna': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pranchaLateralDireita_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pranchaLateralDireita_OrderByInput',
    {
        'pranchaLateralDireita': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pranchaLateralEsquerda_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pranchaLateralEsquerda_OrderByInput',
    {
        'pranchaLateralEsquerda': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_squatJump1_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_squatJump1_OrderByInput',
    {
        'squatJump1': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_squatJump2_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_squatJump2_OrderByInput',
    {
        'squatJump2': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_squatJump3_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_squatJump3_OrderByInput',
    {
        'squatJump3': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_RMagachamento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_RMagachamento_OrderByInput',
    {
        'RMagachamento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_RMsupino_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_RMsupino_OrderByInput',
    {
        'RMsupino': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_RMterra_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_RMterra_OrderByInput',
    {
        'RMterra': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_RMbarraFixa_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_RMbarraFixa_OrderByInput',
    {
        'RMbarraFixa': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_VelocidadeAerobiaMaxima_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_VelocidadeAerobiaMaxima_OrderByInput',
    {
        'VelocidadeAerobiaMaxima': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_bracoDireito_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_bracoDireito_OrderByInput',
    {
        'bracoDireito': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_bracoEsquerdo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_bracoEsquerdo_OrderByInput',
    {
        'bracoEsquerdo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_coxaDireita_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_coxaDireita_OrderByInput',
    {
        'coxaDireita': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_coxaEsquerda_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_coxaEsquerda_OrderByInput',
    {
        'coxaEsquerda': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_panturrilhaDireita_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilhaDireita_OrderByInput',
    {
        'panturrilhaDireita': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_panturrilhaEsquerda_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilhaEsquerda_OrderByInput',
    {
        'panturrilhaEsquerda': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_idade_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_idade_OrderByInput',
    {
        'idade': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_data_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_data_OrderByInput',
    {
        'data': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_hora_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_hora_OrderByInput',
    {
        'hora': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontuacaoTempoTreinoAtual_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacaoTempoTreinoAtual_OrderByInput',
    {
        'pontuacaoTempoTreinoAtual': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontuacao_tempo_de_destreinamento_atual_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_tempo_de_destreinamento_atual_OrderByInput',
    {
        'pontuacao_tempo_de_destreinamento_atual': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontuacao_experiencia_previa_de_treinamento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_experiencia_previa_de_treinamento_OrderByInput',
    {
        'pontuacao_experiencia_previa_de_treinamento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontuacao_media_nivel_treinamento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_media_nivel_treinamento_OrderByInput',
    {
        'pontuacao_media_nivel_treinamento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_status_de_treinamento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_status_de_treinamento_OrderByInput',
    {
        'status_de_treinamento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_torn_direito_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_torn_direito_OrderByInput',
    {
        'nivel_mob_torn_direito': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_torn_esquerdo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_torn_esquerdo_OrderByInput',
    {
        'nivel_mob_torn_esquerdo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_quadril_direito_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_quadril_direito_OrderByInput',
    {
        'nivel_mob_quadril_direito': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_quadril_esquerdo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_quadril_esquerdo_OrderByInput',
    {
        'nivel_mob_quadril_esquerdo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_omb_direito_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_omb_direito_OrderByInput',
    {
        'nivel_mob_omb_direito': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_omb_esquerdo_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_omb_esquerdo_OrderByInput',
    {
        'nivel_mob_omb_esquerdo': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaVentral_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaVentral_OrderByInput',
    {
        'nivelPranchaVentral': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivelExtensaoColuna_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivelExtensaoColuna_OrderByInput',
    {
        'nivelExtensaoColuna': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaLateralDireita_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaLateralDireita_OrderByInput',
    {
        'nivelPranchaLateralDireita': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaLateralEsquerda_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaLateralEsquerda_OrderByInput',
    {
        'nivelPranchaLateralEsquerda': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaVentral_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaVentral_OrderByInput',
    {
        'pontosPranchaVentral': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontosExtensaoColuna_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontosExtensaoColuna_OrderByInput',
    {
        'pontosExtensaoColuna': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaLateralDireita_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaLateralDireita_OrderByInput',
    {
        'pontosPranchaLateralDireita': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaLateralEsquerda_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaLateralEsquerda_OrderByInput',
    {
        'pontosPranchaLateralEsquerda': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaAgachamento_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaAgachamento_OrderByInput',
    {
        'forcaRelativaAgachamento': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaSupino_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaSupino_OrderByInput',
    {
        'forcaRelativaSupino': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaTerra_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaTerra_OrderByInput',
    {
        'forcaRelativaTerra': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaBarraFixa_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaBarraFixa_OrderByInput',
    {
        'forcaRelativaBarraFixa': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_squat_nivel_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_squat_nivel_OrderByInput',
    {
        'squat_nivel': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_supino_nivel_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_supino_nivel_OrderByInput',
    {
        'supino_nivel': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_terra_nivel_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_terra_nivel_OrderByInput',
    {
        'terra_nivel': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontuacao_squat_nivel_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_squat_nivel_OrderByInput',
    {
        'pontuacao_squat_nivel': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontuacao_supino_nivel_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_supino_nivel_OrderByInput',
    {
        'pontuacao_supino_nivel': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_pontuacao_terra_nivel_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_terra_nivel_OrderByInput',
    {
        'pontuacao_terra_nivel': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_media_squat_jump_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_media_squat_jump_OrderByInput',
    {
        'media_squat_jump': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_vo2_estimado_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_vo2_estimado_OrderByInput',
    {
        'vo2_estimado': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_faixa_etaria_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_faixa_etaria_OrderByInput',
    {
        'faixa_etaria': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_nivel_vo2_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_vo2_OrderByInput',
    {
        'nivel_vo2': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_IMC_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_IMC_OrderByInput',
    {
        'IMC': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_ClassificacaoIMC_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_ClassificacaoIMC_OrderByInput',
    {
        'ClassificacaoIMC': 'SortOrder',
    },
    total=True
)

_QuestionarioProntidaoAvaliacaoFisica_idtagaluno_OrderByInput = TypedDict(
    '_QuestionarioProntidaoAvaliacaoFisica_idtagaluno_OrderByInput',
    {
        'idtagaluno': 'SortOrder',
    },
    total=True
)

QuestionarioProntidaoAvaliacaoFisicaOrderByInput = Union[
    '_QuestionarioProntidaoAvaliacaoFisica_id_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_aluno_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_userId_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_sexo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_treinador_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_dataNascimento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_Objetivo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_tempoTreinamentoIninterruptoAtual_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_tempoDestreinamento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_experienciaPreviaTreinamento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_frequenciaMusculacao_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_modalidadeExtra_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_frequenciaModalidadeExtra_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_altura_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_peso_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_torax_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_cintura_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_abdomen_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_quadril_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_braco_d_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_braco_e_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_coxa_d_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_coxa_e_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilha_d_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilha_e_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_medidaMao_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_mobilidadeGlenoumeralDireita_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_mobilidadeGlenoumeralEsquerda_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoQuadrilDireito_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoQuadrilEsquerdo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoTornozeloDireito_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_AmplitudeMovimentoTornozeloEsquerdo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pranchaVentral_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_extensaoColuna_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pranchaLateralDireita_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pranchaLateralEsquerda_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_squatJump1_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_squatJump2_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_squatJump3_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_RMagachamento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_RMsupino_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_RMterra_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_RMbarraFixa_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_VelocidadeAerobiaMaxima_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_bracoDireito_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_bracoEsquerdo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_coxaDireita_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_coxaEsquerda_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilhaDireita_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_panturrilhaEsquerda_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_idade_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_data_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_hora_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacaoTempoTreinoAtual_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_tempo_de_destreinamento_atual_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_experiencia_previa_de_treinamento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_media_nivel_treinamento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_status_de_treinamento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_torn_direito_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_torn_esquerdo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_quadril_direito_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_quadril_esquerdo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_omb_direito_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_mob_omb_esquerdo_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaVentral_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivelExtensaoColuna_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaLateralDireita_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivelPranchaLateralEsquerda_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaVentral_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontosExtensaoColuna_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaLateralDireita_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontosPranchaLateralEsquerda_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaAgachamento_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaSupino_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaTerra_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_forcaRelativaBarraFixa_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_squat_nivel_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_supino_nivel_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_terra_nivel_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_squat_nivel_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_supino_nivel_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_pontuacao_terra_nivel_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_media_squat_jump_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_vo2_estimado_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_faixa_etaria_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_nivel_vo2_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_IMC_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_ClassificacaoIMC_OrderByInput',
    '_QuestionarioProntidaoAvaliacaoFisica_idtagaluno_OrderByInput',
]



# recursive QuestionarioProntidaoAvaliacaoFisica types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

QuestionarioProntidaoAvaliacaoFisicaRelationFilter = TypedDict(
    'QuestionarioProntidaoAvaliacaoFisicaRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class QuestionarioProntidaoAvaliacaoFisicaListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class QuestionarioProntidaoAvaliacaoFisicaInclude(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica relational arguments"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisica']


    

class UserIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class UserIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class UserIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class UserIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class UserIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class UserArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class ProfileIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class ProfileIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class ProfileIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class ProfileIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class ProfileArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class RoleIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class RoleIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class RoleIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class RoleIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class RoleArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyRoleArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']
    responsible: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class GymIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']
    responsible: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class GymIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']
    responsible: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class GymIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']
    responsible: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class GymIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class GymArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class UserTypeIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class UserTypeIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class UserTypeIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class UserTypeIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class UserTypeArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class AccountIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class AccountIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class AccountIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class AccountIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class AccountArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class SessionIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class SessionIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class SessionIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class SessionIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class SessionArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class VerificationTokenIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class VerificationTokenIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class VerificationTokenIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class VerificationTokenIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class VerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyVerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class TodoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class TodoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class TodoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class TodoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class TodoArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class FormularioAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class FormularioAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class FormularioAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class FormularioAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class FormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class TreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class TreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class TreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""


class TreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class TreinoArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyTreinoArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1']


class RegistraTreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2']


class RegistraTreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3']


class RegistraTreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4']


class RegistraTreinoIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for QuestionarioProntidaoAvaliacaoFisica"""

    

class RegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    
    

class FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisica(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromQuestionarioProntidaoAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for QuestionarioProntidaoAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyQuestionarioProntidaoAvaliacaoFisicaArgs = FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisica
FindFirstQuestionarioProntidaoAvaliacaoFisicaArgs = FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromQuestionarioProntidaoAvaliacaoFisica


    

class QuestionarioProntidaoAvaliacaoFisicaWhereInput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    aluno: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    sexo: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    dataNascimento: Union[_str, 'types.StringFilter']
    Objetivo: Union[_str, 'types.StringFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringFilter']
    tempoDestreinamento: Union[_str, 'types.StringFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringFilter']
    frequenciaMusculacao: Union[_str, 'types.StringFilter']
    modalidadeExtra: Union[_str, 'types.StringFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']
    idtagaluno: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive1', List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive1']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive1']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive1(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    aluno: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    sexo: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    dataNascimento: Union[_str, 'types.StringFilter']
    Objetivo: Union[_str, 'types.StringFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringFilter']
    tempoDestreinamento: Union[_str, 'types.StringFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringFilter']
    frequenciaMusculacao: Union[_str, 'types.StringFilter']
    modalidadeExtra: Union[_str, 'types.StringFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']
    idtagaluno: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive2', List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive2']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive2']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive2(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    aluno: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    sexo: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    dataNascimento: Union[_str, 'types.StringFilter']
    Objetivo: Union[_str, 'types.StringFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringFilter']
    tempoDestreinamento: Union[_str, 'types.StringFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringFilter']
    frequenciaMusculacao: Union[_str, 'types.StringFilter']
    modalidadeExtra: Union[_str, 'types.StringFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']
    idtagaluno: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive3', List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive3']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive3']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive3(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    aluno: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    sexo: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    dataNascimento: Union[_str, 'types.StringFilter']
    Objetivo: Union[_str, 'types.StringFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringFilter']
    tempoDestreinamento: Union[_str, 'types.StringFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringFilter']
    frequenciaMusculacao: Union[_str, 'types.StringFilter']
    modalidadeExtra: Union[_str, 'types.StringFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']
    idtagaluno: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive4', List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive4']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive4']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaWhereInputRecursive4(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    aluno: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    sexo: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    dataNascimento: Union[_str, 'types.StringFilter']
    Objetivo: Union[_str, 'types.StringFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringFilter']
    tempoDestreinamento: Union[_str, 'types.StringFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringFilter']
    frequenciaMusculacao: Union[_str, 'types.StringFilter']
    modalidadeExtra: Union[_str, 'types.StringFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']
    idtagaluno: Union[_str, 'types.StringFilter']



# aggregate QuestionarioProntidaoAvaliacaoFisica types


    

class QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    sexo: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    dataNascimento: Union[_str, 'types.StringWithAggregatesFilter']
    Objetivo: Union[_str, 'types.StringWithAggregatesFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringWithAggregatesFilter']
    tempoDestreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaMusculacao: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']
    idtagaluno: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    sexo: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    dataNascimento: Union[_str, 'types.StringWithAggregatesFilter']
    Objetivo: Union[_str, 'types.StringWithAggregatesFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringWithAggregatesFilter']
    tempoDestreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaMusculacao: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']
    idtagaluno: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    sexo: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    dataNascimento: Union[_str, 'types.StringWithAggregatesFilter']
    Objetivo: Union[_str, 'types.StringWithAggregatesFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringWithAggregatesFilter']
    tempoDestreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaMusculacao: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']
    idtagaluno: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    sexo: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    dataNascimento: Union[_str, 'types.StringWithAggregatesFilter']
    Objetivo: Union[_str, 'types.StringWithAggregatesFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringWithAggregatesFilter']
    tempoDestreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaMusculacao: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']
    idtagaluno: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4']
    OR: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4']
    NOT: List['QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    sexo: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    dataNascimento: Union[_str, 'types.StringWithAggregatesFilter']
    Objetivo: Union[_str, 'types.StringWithAggregatesFilter']
    tempoTreinamentoIninterruptoAtual: Union[_str, 'types.StringWithAggregatesFilter']
    tempoDestreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    experienciaPreviaTreinamento: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaMusculacao: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    frequenciaModalidadeExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']
    idtagaluno: Union[_str, 'types.StringWithAggregatesFilter']



class QuestionarioProntidaoAvaliacaoFisicaGroupByOutput(TypedDict, total=False):
    id: _str
    aluno: _str
    userId: _str
    sexo: _str
    treinador: _str
    dataNascimento: _str
    Objetivo: _str
    tempoTreinamentoIninterruptoAtual: _str
    tempoDestreinamento: _str
    experienciaPreviaTreinamento: _str
    frequenciaMusculacao: _str
    modalidadeExtra: _str
    frequenciaModalidadeExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str
    idtagaluno: _str
    _sum: 'QuestionarioProntidaoAvaliacaoFisicaSumAggregateOutput'
    _avg: 'QuestionarioProntidaoAvaliacaoFisicaAvgAggregateOutput'
    _min: 'QuestionarioProntidaoAvaliacaoFisicaMinAggregateOutput'
    _max: 'QuestionarioProntidaoAvaliacaoFisicaMaxAggregateOutput'
    _count: 'QuestionarioProntidaoAvaliacaoFisicaCountAggregateOutput'


class QuestionarioProntidaoAvaliacaoFisicaAvgAggregateOutput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica output for aggregating averages"""
    altura: float
    peso: float
    torax: float
    cintura: float
    abdomen: float
    quadril: float
    braco_d: float
    braco_e: float
    coxa_d: float
    coxa_e: float
    panturrilha_d: float
    panturrilha_e: float
    medidaMao: float
    mobilidadeGlenoumeralDireita: float
    mobilidadeGlenoumeralEsquerda: float
    AmplitudeMovimentoQuadrilDireito: float
    AmplitudeMovimentoQuadrilEsquerdo: float
    AmplitudeMovimentoTornozeloDireito: float
    AmplitudeMovimentoTornozeloEsquerdo: float
    pranchaVentral: float
    extensaoColuna: float
    pranchaLateralDireita: float
    pranchaLateralEsquerda: float
    squatJump1: float
    squatJump2: float
    squatJump3: float
    RMagachamento: float
    RMsupino: float
    RMterra: float
    RMbarraFixa: float
    VelocidadeAerobiaMaxima: float
    bracoDireito: float
    bracoEsquerdo: float
    coxaDireita: float
    coxaEsquerda: float
    panturrilhaDireita: float
    panturrilhaEsquerda: float
    idade: float
    pontuacaoTempoTreinoAtual: float
    pontuacao_tempo_de_destreinamento_atual: float
    pontuacao_experiencia_previa_de_treinamento: float
    pontuacao_media_nivel_treinamento: float
    pontosPranchaVentral: float
    pontosExtensaoColuna: float
    pontosPranchaLateralDireita: float
    pontosPranchaLateralEsquerda: float
    forcaRelativaAgachamento: float
    forcaRelativaSupino: float
    forcaRelativaTerra: float
    forcaRelativaBarraFixa: float
    pontuacao_squat_nivel: float
    pontuacao_supino_nivel: float
    pontuacao_terra_nivel: float
    media_squat_jump: float
    vo2_estimado: float
    IMC: float


class QuestionarioProntidaoAvaliacaoFisicaSumAggregateOutput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica output for aggregating sums"""
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    IMC: _float


class QuestionarioProntidaoAvaliacaoFisicaScalarAggregateOutput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica output including scalar fields"""
    id: _str
    aluno: _str
    userId: _str
    sexo: _str
    treinador: _str
    dataNascimento: _str
    Objetivo: _str
    tempoTreinamentoIninterruptoAtual: _str
    tempoDestreinamento: _str
    experienciaPreviaTreinamento: _str
    frequenciaMusculacao: _str
    modalidadeExtra: _str
    frequenciaModalidadeExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str
    idtagaluno: _str


QuestionarioProntidaoAvaliacaoFisicaMinAggregateOutput = QuestionarioProntidaoAvaliacaoFisicaScalarAggregateOutput
QuestionarioProntidaoAvaliacaoFisicaMaxAggregateOutput = QuestionarioProntidaoAvaliacaoFisicaScalarAggregateOutput


class QuestionarioProntidaoAvaliacaoFisicaMaxAggregateInput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica input for aggregating by max"""
    id: bool
    aluno: bool
    userId: bool
    sexo: bool
    treinador: bool
    dataNascimento: bool
    Objetivo: bool
    tempoTreinamentoIninterruptoAtual: bool
    tempoDestreinamento: bool
    experienciaPreviaTreinamento: bool
    frequenciaMusculacao: bool
    modalidadeExtra: bool
    frequenciaModalidadeExtra: bool
    altura: bool
    peso: bool
    torax: bool
    cintura: bool
    abdomen: bool
    quadril: bool
    braco_d: bool
    braco_e: bool
    coxa_d: bool
    coxa_e: bool
    panturrilha_d: bool
    panturrilha_e: bool
    medidaMao: bool
    mobilidadeGlenoumeralDireita: bool
    mobilidadeGlenoumeralEsquerda: bool
    AmplitudeMovimentoQuadrilDireito: bool
    AmplitudeMovimentoQuadrilEsquerdo: bool
    AmplitudeMovimentoTornozeloDireito: bool
    AmplitudeMovimentoTornozeloEsquerdo: bool
    pranchaVentral: bool
    extensaoColuna: bool
    pranchaLateralDireita: bool
    pranchaLateralEsquerda: bool
    squatJump1: bool
    squatJump2: bool
    squatJump3: bool
    RMagachamento: bool
    RMsupino: bool
    RMterra: bool
    RMbarraFixa: bool
    VelocidadeAerobiaMaxima: bool
    bracoDireito: bool
    bracoEsquerdo: bool
    coxaDireita: bool
    coxaEsquerda: bool
    panturrilhaDireita: bool
    panturrilhaEsquerda: bool
    idade: bool
    data: bool
    hora: bool
    pontuacaoTempoTreinoAtual: bool
    pontuacao_tempo_de_destreinamento_atual: bool
    pontuacao_experiencia_previa_de_treinamento: bool
    pontuacao_media_nivel_treinamento: bool
    status_de_treinamento: bool
    nivel_mob_torn_direito: bool
    nivel_mob_torn_esquerdo: bool
    nivel_mob_quadril_direito: bool
    nivel_mob_quadril_esquerdo: bool
    nivel_mob_omb_direito: bool
    nivel_mob_omb_esquerdo: bool
    nivelPranchaVentral: bool
    nivelExtensaoColuna: bool
    nivelPranchaLateralDireita: bool
    nivelPranchaLateralEsquerda: bool
    pontosPranchaVentral: bool
    pontosExtensaoColuna: bool
    pontosPranchaLateralDireita: bool
    pontosPranchaLateralEsquerda: bool
    forcaRelativaAgachamento: bool
    forcaRelativaSupino: bool
    forcaRelativaTerra: bool
    forcaRelativaBarraFixa: bool
    squat_nivel: bool
    supino_nivel: bool
    terra_nivel: bool
    pontuacao_squat_nivel: bool
    pontuacao_supino_nivel: bool
    pontuacao_terra_nivel: bool
    media_squat_jump: bool
    vo2_estimado: bool
    faixa_etaria: bool
    nivel_vo2: bool
    IMC: bool
    ClassificacaoIMC: bool
    idtagaluno: bool


class QuestionarioProntidaoAvaliacaoFisicaMinAggregateInput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica input for aggregating by min"""
    id: bool
    aluno: bool
    userId: bool
    sexo: bool
    treinador: bool
    dataNascimento: bool
    Objetivo: bool
    tempoTreinamentoIninterruptoAtual: bool
    tempoDestreinamento: bool
    experienciaPreviaTreinamento: bool
    frequenciaMusculacao: bool
    modalidadeExtra: bool
    frequenciaModalidadeExtra: bool
    altura: bool
    peso: bool
    torax: bool
    cintura: bool
    abdomen: bool
    quadril: bool
    braco_d: bool
    braco_e: bool
    coxa_d: bool
    coxa_e: bool
    panturrilha_d: bool
    panturrilha_e: bool
    medidaMao: bool
    mobilidadeGlenoumeralDireita: bool
    mobilidadeGlenoumeralEsquerda: bool
    AmplitudeMovimentoQuadrilDireito: bool
    AmplitudeMovimentoQuadrilEsquerdo: bool
    AmplitudeMovimentoTornozeloDireito: bool
    AmplitudeMovimentoTornozeloEsquerdo: bool
    pranchaVentral: bool
    extensaoColuna: bool
    pranchaLateralDireita: bool
    pranchaLateralEsquerda: bool
    squatJump1: bool
    squatJump2: bool
    squatJump3: bool
    RMagachamento: bool
    RMsupino: bool
    RMterra: bool
    RMbarraFixa: bool
    VelocidadeAerobiaMaxima: bool
    bracoDireito: bool
    bracoEsquerdo: bool
    coxaDireita: bool
    coxaEsquerda: bool
    panturrilhaDireita: bool
    panturrilhaEsquerda: bool
    idade: bool
    data: bool
    hora: bool
    pontuacaoTempoTreinoAtual: bool
    pontuacao_tempo_de_destreinamento_atual: bool
    pontuacao_experiencia_previa_de_treinamento: bool
    pontuacao_media_nivel_treinamento: bool
    status_de_treinamento: bool
    nivel_mob_torn_direito: bool
    nivel_mob_torn_esquerdo: bool
    nivel_mob_quadril_direito: bool
    nivel_mob_quadril_esquerdo: bool
    nivel_mob_omb_direito: bool
    nivel_mob_omb_esquerdo: bool
    nivelPranchaVentral: bool
    nivelExtensaoColuna: bool
    nivelPranchaLateralDireita: bool
    nivelPranchaLateralEsquerda: bool
    pontosPranchaVentral: bool
    pontosExtensaoColuna: bool
    pontosPranchaLateralDireita: bool
    pontosPranchaLateralEsquerda: bool
    forcaRelativaAgachamento: bool
    forcaRelativaSupino: bool
    forcaRelativaTerra: bool
    forcaRelativaBarraFixa: bool
    squat_nivel: bool
    supino_nivel: bool
    terra_nivel: bool
    pontuacao_squat_nivel: bool
    pontuacao_supino_nivel: bool
    pontuacao_terra_nivel: bool
    media_squat_jump: bool
    vo2_estimado: bool
    faixa_etaria: bool
    nivel_vo2: bool
    IMC: bool
    ClassificacaoIMC: bool
    idtagaluno: bool


class QuestionarioProntidaoAvaliacaoFisicaNumberAggregateInput(TypedDict, total=False):
    """QuestionarioProntidaoAvaliacaoFisica input for aggregating numbers"""
    altura: bool
    peso: bool
    torax: bool
    cintura: bool
    abdomen: bool
    quadril: bool
    braco_d: bool
    braco_e: bool
    coxa_d: bool
    coxa_e: bool
    panturrilha_d: bool
    panturrilha_e: bool
    medidaMao: bool
    mobilidadeGlenoumeralDireita: bool
    mobilidadeGlenoumeralEsquerda: bool
    AmplitudeMovimentoQuadrilDireito: bool
    AmplitudeMovimentoQuadrilEsquerdo: bool
    AmplitudeMovimentoTornozeloDireito: bool
    AmplitudeMovimentoTornozeloEsquerdo: bool
    pranchaVentral: bool
    extensaoColuna: bool
    pranchaLateralDireita: bool
    pranchaLateralEsquerda: bool
    squatJump1: bool
    squatJump2: bool
    squatJump3: bool
    RMagachamento: bool
    RMsupino: bool
    RMterra: bool
    RMbarraFixa: bool
    VelocidadeAerobiaMaxima: bool
    bracoDireito: bool
    bracoEsquerdo: bool
    coxaDireita: bool
    coxaEsquerda: bool
    panturrilhaDireita: bool
    panturrilhaEsquerda: bool
    idade: bool
    pontuacaoTempoTreinoAtual: bool
    pontuacao_tempo_de_destreinamento_atual: bool
    pontuacao_experiencia_previa_de_treinamento: bool
    pontuacao_media_nivel_treinamento: bool
    pontosPranchaVentral: bool
    pontosExtensaoColuna: bool
    pontosPranchaLateralDireita: bool
    pontosPranchaLateralEsquerda: bool
    forcaRelativaAgachamento: bool
    forcaRelativaSupino: bool
    forcaRelativaTerra: bool
    forcaRelativaBarraFixa: bool
    pontuacao_squat_nivel: bool
    pontuacao_supino_nivel: bool
    pontuacao_terra_nivel: bool
    media_squat_jump: bool
    vo2_estimado: bool
    IMC: bool


QuestionarioProntidaoAvaliacaoFisicaAvgAggregateInput = QuestionarioProntidaoAvaliacaoFisicaNumberAggregateInput
QuestionarioProntidaoAvaliacaoFisicaSumAggregateInput = QuestionarioProntidaoAvaliacaoFisicaNumberAggregateInput


QuestionarioProntidaoAvaliacaoFisicaCountAggregateInput = TypedDict(
    'QuestionarioProntidaoAvaliacaoFisicaCountAggregateInput',
    {
        'id': bool,
        'aluno': bool,
        'userId': bool,
        'sexo': bool,
        'treinador': bool,
        'dataNascimento': bool,
        'Objetivo': bool,
        'tempoTreinamentoIninterruptoAtual': bool,
        'tempoDestreinamento': bool,
        'experienciaPreviaTreinamento': bool,
        'frequenciaMusculacao': bool,
        'modalidadeExtra': bool,
        'frequenciaModalidadeExtra': bool,
        'altura': bool,
        'peso': bool,
        'torax': bool,
        'cintura': bool,
        'abdomen': bool,
        'quadril': bool,
        'braco_d': bool,
        'braco_e': bool,
        'coxa_d': bool,
        'coxa_e': bool,
        'panturrilha_d': bool,
        'panturrilha_e': bool,
        'medidaMao': bool,
        'mobilidadeGlenoumeralDireita': bool,
        'mobilidadeGlenoumeralEsquerda': bool,
        'AmplitudeMovimentoQuadrilDireito': bool,
        'AmplitudeMovimentoQuadrilEsquerdo': bool,
        'AmplitudeMovimentoTornozeloDireito': bool,
        'AmplitudeMovimentoTornozeloEsquerdo': bool,
        'pranchaVentral': bool,
        'extensaoColuna': bool,
        'pranchaLateralDireita': bool,
        'pranchaLateralEsquerda': bool,
        'squatJump1': bool,
        'squatJump2': bool,
        'squatJump3': bool,
        'RMagachamento': bool,
        'RMsupino': bool,
        'RMterra': bool,
        'RMbarraFixa': bool,
        'VelocidadeAerobiaMaxima': bool,
        'bracoDireito': bool,
        'bracoEsquerdo': bool,
        'coxaDireita': bool,
        'coxaEsquerda': bool,
        'panturrilhaDireita': bool,
        'panturrilhaEsquerda': bool,
        'idade': bool,
        'data': bool,
        'hora': bool,
        'pontuacaoTempoTreinoAtual': bool,
        'pontuacao_tempo_de_destreinamento_atual': bool,
        'pontuacao_experiencia_previa_de_treinamento': bool,
        'pontuacao_media_nivel_treinamento': bool,
        'status_de_treinamento': bool,
        'nivel_mob_torn_direito': bool,
        'nivel_mob_torn_esquerdo': bool,
        'nivel_mob_quadril_direito': bool,
        'nivel_mob_quadril_esquerdo': bool,
        'nivel_mob_omb_direito': bool,
        'nivel_mob_omb_esquerdo': bool,
        'nivelPranchaVentral': bool,
        'nivelExtensaoColuna': bool,
        'nivelPranchaLateralDireita': bool,
        'nivelPranchaLateralEsquerda': bool,
        'pontosPranchaVentral': bool,
        'pontosExtensaoColuna': bool,
        'pontosPranchaLateralDireita': bool,
        'pontosPranchaLateralEsquerda': bool,
        'forcaRelativaAgachamento': bool,
        'forcaRelativaSupino': bool,
        'forcaRelativaTerra': bool,
        'forcaRelativaBarraFixa': bool,
        'squat_nivel': bool,
        'supino_nivel': bool,
        'terra_nivel': bool,
        'pontuacao_squat_nivel': bool,
        'pontuacao_supino_nivel': bool,
        'pontuacao_terra_nivel': bool,
        'media_squat_jump': bool,
        'vo2_estimado': bool,
        'faixa_etaria': bool,
        'nivel_vo2': bool,
        'IMC': bool,
        'ClassificacaoIMC': bool,
        'idtagaluno': bool,
        '_all': bool,
    },
    total=False,
)

QuestionarioProntidaoAvaliacaoFisicaCountAggregateOutput = TypedDict(
    'QuestionarioProntidaoAvaliacaoFisicaCountAggregateOutput',
    {
        'id': int,
        'aluno': int,
        'userId': int,
        'sexo': int,
        'treinador': int,
        'dataNascimento': int,
        'Objetivo': int,
        'tempoTreinamentoIninterruptoAtual': int,
        'tempoDestreinamento': int,
        'experienciaPreviaTreinamento': int,
        'frequenciaMusculacao': int,
        'modalidadeExtra': int,
        'frequenciaModalidadeExtra': int,
        'altura': int,
        'peso': int,
        'torax': int,
        'cintura': int,
        'abdomen': int,
        'quadril': int,
        'braco_d': int,
        'braco_e': int,
        'coxa_d': int,
        'coxa_e': int,
        'panturrilha_d': int,
        'panturrilha_e': int,
        'medidaMao': int,
        'mobilidadeGlenoumeralDireita': int,
        'mobilidadeGlenoumeralEsquerda': int,
        'AmplitudeMovimentoQuadrilDireito': int,
        'AmplitudeMovimentoQuadrilEsquerdo': int,
        'AmplitudeMovimentoTornozeloDireito': int,
        'AmplitudeMovimentoTornozeloEsquerdo': int,
        'pranchaVentral': int,
        'extensaoColuna': int,
        'pranchaLateralDireita': int,
        'pranchaLateralEsquerda': int,
        'squatJump1': int,
        'squatJump2': int,
        'squatJump3': int,
        'RMagachamento': int,
        'RMsupino': int,
        'RMterra': int,
        'RMbarraFixa': int,
        'VelocidadeAerobiaMaxima': int,
        'bracoDireito': int,
        'bracoEsquerdo': int,
        'coxaDireita': int,
        'coxaEsquerda': int,
        'panturrilhaDireita': int,
        'panturrilhaEsquerda': int,
        'idade': int,
        'data': int,
        'hora': int,
        'pontuacaoTempoTreinoAtual': int,
        'pontuacao_tempo_de_destreinamento_atual': int,
        'pontuacao_experiencia_previa_de_treinamento': int,
        'pontuacao_media_nivel_treinamento': int,
        'status_de_treinamento': int,
        'nivel_mob_torn_direito': int,
        'nivel_mob_torn_esquerdo': int,
        'nivel_mob_quadril_direito': int,
        'nivel_mob_quadril_esquerdo': int,
        'nivel_mob_omb_direito': int,
        'nivel_mob_omb_esquerdo': int,
        'nivelPranchaVentral': int,
        'nivelExtensaoColuna': int,
        'nivelPranchaLateralDireita': int,
        'nivelPranchaLateralEsquerda': int,
        'pontosPranchaVentral': int,
        'pontosExtensaoColuna': int,
        'pontosPranchaLateralDireita': int,
        'pontosPranchaLateralEsquerda': int,
        'forcaRelativaAgachamento': int,
        'forcaRelativaSupino': int,
        'forcaRelativaTerra': int,
        'forcaRelativaBarraFixa': int,
        'squat_nivel': int,
        'supino_nivel': int,
        'terra_nivel': int,
        'pontuacao_squat_nivel': int,
        'pontuacao_supino_nivel': int,
        'pontuacao_terra_nivel': int,
        'media_squat_jump': int,
        'vo2_estimado': int,
        'faixa_etaria': int,
        'nivel_vo2': int,
        'IMC': int,
        'ClassificacaoIMC': int,
        'idtagaluno': int,
        '_all': int,
    },
    total=False,
)


QuestionarioProntidaoAvaliacaoFisicaKeys = Literal[
    'id',
    'aluno',
    'userId',
    'user',
    'sexo',
    'treinador',
    'dataNascimento',
    'Objetivo',
    'tempoTreinamentoIninterruptoAtual',
    'tempoDestreinamento',
    'experienciaPreviaTreinamento',
    'frequenciaMusculacao',
    'modalidadeExtra',
    'frequenciaModalidadeExtra',
    'altura',
    'peso',
    'torax',
    'cintura',
    'abdomen',
    'quadril',
    'braco_d',
    'braco_e',
    'coxa_d',
    'coxa_e',
    'panturrilha_d',
    'panturrilha_e',
    'medidaMao',
    'mobilidadeGlenoumeralDireita',
    'mobilidadeGlenoumeralEsquerda',
    'AmplitudeMovimentoQuadrilDireito',
    'AmplitudeMovimentoQuadrilEsquerdo',
    'AmplitudeMovimentoTornozeloDireito',
    'AmplitudeMovimentoTornozeloEsquerdo',
    'pranchaVentral',
    'extensaoColuna',
    'pranchaLateralDireita',
    'pranchaLateralEsquerda',
    'squatJump1',
    'squatJump2',
    'squatJump3',
    'RMagachamento',
    'RMsupino',
    'RMterra',
    'RMbarraFixa',
    'VelocidadeAerobiaMaxima',
    'bracoDireito',
    'bracoEsquerdo',
    'coxaDireita',
    'coxaEsquerda',
    'panturrilhaDireita',
    'panturrilhaEsquerda',
    'idade',
    'data',
    'hora',
    'pontuacaoTempoTreinoAtual',
    'pontuacao_tempo_de_destreinamento_atual',
    'pontuacao_experiencia_previa_de_treinamento',
    'pontuacao_media_nivel_treinamento',
    'status_de_treinamento',
    'nivel_mob_torn_direito',
    'nivel_mob_torn_esquerdo',
    'nivel_mob_quadril_direito',
    'nivel_mob_quadril_esquerdo',
    'nivel_mob_omb_direito',
    'nivel_mob_omb_esquerdo',
    'nivelPranchaVentral',
    'nivelExtensaoColuna',
    'nivelPranchaLateralDireita',
    'nivelPranchaLateralEsquerda',
    'pontosPranchaVentral',
    'pontosExtensaoColuna',
    'pontosPranchaLateralDireita',
    'pontosPranchaLateralEsquerda',
    'forcaRelativaAgachamento',
    'forcaRelativaSupino',
    'forcaRelativaTerra',
    'forcaRelativaBarraFixa',
    'squat_nivel',
    'supino_nivel',
    'terra_nivel',
    'pontuacao_squat_nivel',
    'pontuacao_supino_nivel',
    'pontuacao_terra_nivel',
    'media_squat_jump',
    'vo2_estimado',
    'faixa_etaria',
    'nivel_vo2',
    'IMC',
    'ClassificacaoIMC',
    'idtagaluno',
]
QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys = Literal[
    'id',
    'aluno',
    'userId',
    'sexo',
    'treinador',
    'dataNascimento',
    'Objetivo',
    'tempoTreinamentoIninterruptoAtual',
    'tempoDestreinamento',
    'experienciaPreviaTreinamento',
    'frequenciaMusculacao',
    'modalidadeExtra',
    'frequenciaModalidadeExtra',
    'altura',
    'peso',
    'torax',
    'cintura',
    'abdomen',
    'quadril',
    'braco_d',
    'braco_e',
    'coxa_d',
    'coxa_e',
    'panturrilha_d',
    'panturrilha_e',
    'medidaMao',
    'mobilidadeGlenoumeralDireita',
    'mobilidadeGlenoumeralEsquerda',
    'AmplitudeMovimentoQuadrilDireito',
    'AmplitudeMovimentoQuadrilEsquerdo',
    'AmplitudeMovimentoTornozeloDireito',
    'AmplitudeMovimentoTornozeloEsquerdo',
    'pranchaVentral',
    'extensaoColuna',
    'pranchaLateralDireita',
    'pranchaLateralEsquerda',
    'squatJump1',
    'squatJump2',
    'squatJump3',
    'RMagachamento',
    'RMsupino',
    'RMterra',
    'RMbarraFixa',
    'VelocidadeAerobiaMaxima',
    'bracoDireito',
    'bracoEsquerdo',
    'coxaDireita',
    'coxaEsquerda',
    'panturrilhaDireita',
    'panturrilhaEsquerda',
    'idade',
    'data',
    'hora',
    'pontuacaoTempoTreinoAtual',
    'pontuacao_tempo_de_destreinamento_atual',
    'pontuacao_experiencia_previa_de_treinamento',
    'pontuacao_media_nivel_treinamento',
    'status_de_treinamento',
    'nivel_mob_torn_direito',
    'nivel_mob_torn_esquerdo',
    'nivel_mob_quadril_direito',
    'nivel_mob_quadril_esquerdo',
    'nivel_mob_omb_direito',
    'nivel_mob_omb_esquerdo',
    'nivelPranchaVentral',
    'nivelExtensaoColuna',
    'nivelPranchaLateralDireita',
    'nivelPranchaLateralEsquerda',
    'pontosPranchaVentral',
    'pontosExtensaoColuna',
    'pontosPranchaLateralDireita',
    'pontosPranchaLateralEsquerda',
    'forcaRelativaAgachamento',
    'forcaRelativaSupino',
    'forcaRelativaTerra',
    'forcaRelativaBarraFixa',
    'squat_nivel',
    'supino_nivel',
    'terra_nivel',
    'pontuacao_squat_nivel',
    'pontuacao_supino_nivel',
    'pontuacao_terra_nivel',
    'media_squat_jump',
    'vo2_estimado',
    'faixa_etaria',
    'nivel_vo2',
    'IMC',
    'ClassificacaoIMC',
    'idtagaluno',
]
QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeysT = TypeVar('QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeysT', bound=QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys)

QuestionarioProntidaoAvaliacaoFisicaRelationalFieldKeys = Literal[
        'user',
    ]

# FormularioAvaliacaoFisica types

class FormularioAvaliacaoFisicaOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the FormularioAvaliacaoFisica create method"""
    id: _str
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'


class FormularioAvaliacaoFisicaCreateInput(FormularioAvaliacaoFisicaOptionalCreateInput):
    """Required arguments to the FormularioAvaliacaoFisica create method"""
    aluno: _str
    treinador: _str
    diaTreino: _str
    modalidadeTreino: _str
    diaTreinoExtra: _str
    modalidadeTreinoExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class FormularioAvaliacaoFisicaOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the FormularioAvaliacaoFisica create method, without relations"""
    id: _str
    userId: _str


class FormularioAvaliacaoFisicaCreateWithoutRelationsInput(FormularioAvaliacaoFisicaOptionalCreateWithoutRelationsInput):
    """Required arguments to the FormularioAvaliacaoFisica create method, without relations"""
    aluno: _str
    treinador: _str
    diaTreino: _str
    modalidadeTreino: _str
    diaTreinoExtra: _str
    modalidadeTreinoExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str


class FormularioAvaliacaoFisicaCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'FormularioAvaliacaoFisicaCreateWithoutRelationsInput'
    connect: 'FormularioAvaliacaoFisicaWhereUniqueInput'


class FormularioAvaliacaoFisicaCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['FormularioAvaliacaoFisicaCreateWithoutRelationsInput', List['FormularioAvaliacaoFisicaCreateWithoutRelationsInput']]
    connect: Union['FormularioAvaliacaoFisicaWhereUniqueInput', List['FormularioAvaliacaoFisicaWhereUniqueInput']]


_FormularioAvaliacaoFisicaWhereUnique_id_Input = TypedDict(
    '_FormularioAvaliacaoFisicaWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

FormularioAvaliacaoFisicaWhereUniqueInput = _FormularioAvaliacaoFisicaWhereUnique_id_Input


class FormularioAvaliacaoFisicaUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    user: 'UserUpdateOneWithoutRelationsInput'
    aluno: _str
    treinador: _str
    diaTreino: _str
    modalidadeTreino: _str
    diaTreinoExtra: _str
    modalidadeTreinoExtra: _str
    altura: Union[AtomicFloatInput, _float]
    peso: Union[AtomicFloatInput, _float]
    torax: Union[AtomicFloatInput, _float]
    cintura: Union[AtomicFloatInput, _float]
    abdomen: Union[AtomicFloatInput, _float]
    quadril: Union[AtomicFloatInput, _float]
    braco_d: Union[AtomicFloatInput, _float]
    braco_e: Union[AtomicFloatInput, _float]
    coxa_d: Union[AtomicFloatInput, _float]
    coxa_e: Union[AtomicFloatInput, _float]
    panturrilha_d: Union[AtomicFloatInput, _float]
    panturrilha_e: Union[AtomicFloatInput, _float]
    medidaMao: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralDireita: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralEsquerda: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilEsquerdo: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloEsquerdo: Union[AtomicFloatInput, _float]
    pranchaVentral: Union[AtomicFloatInput, _float]
    extensaoColuna: Union[AtomicFloatInput, _float]
    pranchaLateralDireita: Union[AtomicFloatInput, _float]
    pranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    squatJump1: Union[AtomicFloatInput, _float]
    squatJump2: Union[AtomicFloatInput, _float]
    squatJump3: Union[AtomicFloatInput, _float]
    RMagachamento: Union[AtomicFloatInput, _float]
    RMsupino: Union[AtomicFloatInput, _float]
    RMterra: Union[AtomicFloatInput, _float]
    RMbarraFixa: Union[AtomicFloatInput, _float]
    VelocidadeAerobiaMaxima: Union[AtomicFloatInput, _float]
    bracoDireito: Union[AtomicFloatInput, _float]
    bracoEsquerdo: Union[AtomicFloatInput, _float]
    coxaDireita: Union[AtomicFloatInput, _float]
    coxaEsquerda: Union[AtomicFloatInput, _float]
    panturrilhaDireita: Union[AtomicFloatInput, _float]
    panturrilhaEsquerda: Union[AtomicFloatInput, _float]
    idade: Union[AtomicIntInput, _int]
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: Union[AtomicIntInput, _int]
    pontuacao_tempo_de_destreinamento_atual: Union[AtomicIntInput, _int]
    pontuacao_experiencia_previa_de_treinamento: Union[AtomicIntInput, _int]
    pontuacao_media_nivel_treinamento: Union[AtomicFloatInput, _float]
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: Union[AtomicFloatInput, _float]
    pontosExtensaoColuna: Union[AtomicFloatInput, _float]
    pontosPranchaLateralDireita: Union[AtomicFloatInput, _float]
    pontosPranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    forcaRelativaAgachamento: Union[AtomicFloatInput, _float]
    forcaRelativaSupino: Union[AtomicFloatInput, _float]
    forcaRelativaTerra: Union[AtomicFloatInput, _float]
    forcaRelativaBarraFixa: Union[AtomicFloatInput, _float]
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: Union[AtomicFloatInput, _float]
    pontuacao_supino_nivel: Union[AtomicFloatInput, _float]
    pontuacao_terra_nivel: Union[AtomicFloatInput, _float]
    media_squat_jump: Union[AtomicFloatInput, _float]
    vo2_estimado: Union[AtomicFloatInput, _float]
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: Union[AtomicFloatInput, _float]
    ClassificacaoIMC: _str


class FormularioAvaliacaoFisicaUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    aluno: _str
    treinador: _str
    diaTreino: _str
    modalidadeTreino: _str
    diaTreinoExtra: _str
    modalidadeTreinoExtra: _str
    altura: Union[AtomicFloatInput, _float]
    peso: Union[AtomicFloatInput, _float]
    torax: Union[AtomicFloatInput, _float]
    cintura: Union[AtomicFloatInput, _float]
    abdomen: Union[AtomicFloatInput, _float]
    quadril: Union[AtomicFloatInput, _float]
    braco_d: Union[AtomicFloatInput, _float]
    braco_e: Union[AtomicFloatInput, _float]
    coxa_d: Union[AtomicFloatInput, _float]
    coxa_e: Union[AtomicFloatInput, _float]
    panturrilha_d: Union[AtomicFloatInput, _float]
    panturrilha_e: Union[AtomicFloatInput, _float]
    medidaMao: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralDireita: Union[AtomicFloatInput, _float]
    mobilidadeGlenoumeralEsquerda: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoQuadrilEsquerdo: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloDireito: Union[AtomicFloatInput, _float]
    AmplitudeMovimentoTornozeloEsquerdo: Union[AtomicFloatInput, _float]
    pranchaVentral: Union[AtomicFloatInput, _float]
    extensaoColuna: Union[AtomicFloatInput, _float]
    pranchaLateralDireita: Union[AtomicFloatInput, _float]
    pranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    squatJump1: Union[AtomicFloatInput, _float]
    squatJump2: Union[AtomicFloatInput, _float]
    squatJump3: Union[AtomicFloatInput, _float]
    RMagachamento: Union[AtomicFloatInput, _float]
    RMsupino: Union[AtomicFloatInput, _float]
    RMterra: Union[AtomicFloatInput, _float]
    RMbarraFixa: Union[AtomicFloatInput, _float]
    VelocidadeAerobiaMaxima: Union[AtomicFloatInput, _float]
    bracoDireito: Union[AtomicFloatInput, _float]
    bracoEsquerdo: Union[AtomicFloatInput, _float]
    coxaDireita: Union[AtomicFloatInput, _float]
    coxaEsquerda: Union[AtomicFloatInput, _float]
    panturrilhaDireita: Union[AtomicFloatInput, _float]
    panturrilhaEsquerda: Union[AtomicFloatInput, _float]
    idade: Union[AtomicIntInput, _int]
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: Union[AtomicIntInput, _int]
    pontuacao_tempo_de_destreinamento_atual: Union[AtomicIntInput, _int]
    pontuacao_experiencia_previa_de_treinamento: Union[AtomicIntInput, _int]
    pontuacao_media_nivel_treinamento: Union[AtomicFloatInput, _float]
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: Union[AtomicFloatInput, _float]
    pontosExtensaoColuna: Union[AtomicFloatInput, _float]
    pontosPranchaLateralDireita: Union[AtomicFloatInput, _float]
    pontosPranchaLateralEsquerda: Union[AtomicFloatInput, _float]
    forcaRelativaAgachamento: Union[AtomicFloatInput, _float]
    forcaRelativaSupino: Union[AtomicFloatInput, _float]
    forcaRelativaTerra: Union[AtomicFloatInput, _float]
    forcaRelativaBarraFixa: Union[AtomicFloatInput, _float]
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: Union[AtomicFloatInput, _float]
    pontuacao_supino_nivel: Union[AtomicFloatInput, _float]
    pontuacao_terra_nivel: Union[AtomicFloatInput, _float]
    media_squat_jump: Union[AtomicFloatInput, _float]
    vo2_estimado: Union[AtomicFloatInput, _float]
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: Union[AtomicFloatInput, _float]
    ClassificacaoIMC: _str


class FormularioAvaliacaoFisicaUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['FormularioAvaliacaoFisicaCreateWithoutRelationsInput']
    connect: List['FormularioAvaliacaoFisicaWhereUniqueInput']
    set: List['FormularioAvaliacaoFisicaWhereUniqueInput']
    disconnect: List['FormularioAvaliacaoFisicaWhereUniqueInput']
    delete: List['FormularioAvaliacaoFisicaWhereUniqueInput']

    # TODO
    # update: List['FormularioAvaliacaoFisicaUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['FormularioAvaliacaoFisicaUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['FormularioAvaliacaoFisicaScalarWhereInput']
    # upsert: List['FormularioAvaliacaoFisicaUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['FormularioAvaliacaoFisicaCreateOrConnectWithoutRelationsInput']


class FormularioAvaliacaoFisicaUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'FormularioAvaliacaoFisicaCreateWithoutRelationsInput'
    connect: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'FormularioAvaliacaoFisicaUpdateInput'
    # upsert: 'FormularioAvaliacaoFisicaUpsertWithoutRelationsInput'
    # connectOrCreate: 'FormularioAvaliacaoFisicaCreateOrConnectWithoutRelationsInput'


class FormularioAvaliacaoFisicaUpsertInput(TypedDict):
    create: 'FormularioAvaliacaoFisicaCreateInput'
    update: 'FormularioAvaliacaoFisicaUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_FormularioAvaliacaoFisica_id_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_userId_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_aluno_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_aluno_OrderByInput',
    {
        'aluno': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_treinador_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_treinador_OrderByInput',
    {
        'treinador': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_diaTreino_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_diaTreino_OrderByInput',
    {
        'diaTreino': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_modalidadeTreino_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_modalidadeTreino_OrderByInput',
    {
        'modalidadeTreino': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_diaTreinoExtra_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_diaTreinoExtra_OrderByInput',
    {
        'diaTreinoExtra': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_modalidadeTreinoExtra_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_modalidadeTreinoExtra_OrderByInput',
    {
        'modalidadeTreinoExtra': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_altura_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_altura_OrderByInput',
    {
        'altura': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_peso_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_peso_OrderByInput',
    {
        'peso': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_torax_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_torax_OrderByInput',
    {
        'torax': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_cintura_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_cintura_OrderByInput',
    {
        'cintura': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_abdomen_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_abdomen_OrderByInput',
    {
        'abdomen': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_quadril_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_quadril_OrderByInput',
    {
        'quadril': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_braco_d_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_braco_d_OrderByInput',
    {
        'braco_d': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_braco_e_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_braco_e_OrderByInput',
    {
        'braco_e': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_coxa_d_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_coxa_d_OrderByInput',
    {
        'coxa_d': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_coxa_e_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_coxa_e_OrderByInput',
    {
        'coxa_e': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_panturrilha_d_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_panturrilha_d_OrderByInput',
    {
        'panturrilha_d': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_panturrilha_e_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_panturrilha_e_OrderByInput',
    {
        'panturrilha_e': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_medidaMao_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_medidaMao_OrderByInput',
    {
        'medidaMao': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_mobilidadeGlenoumeralDireita_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_mobilidadeGlenoumeralDireita_OrderByInput',
    {
        'mobilidadeGlenoumeralDireita': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_mobilidadeGlenoumeralEsquerda_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_mobilidadeGlenoumeralEsquerda_OrderByInput',
    {
        'mobilidadeGlenoumeralEsquerda': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_AmplitudeMovimentoQuadrilDireito_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoQuadrilDireito_OrderByInput',
    {
        'AmplitudeMovimentoQuadrilDireito': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_AmplitudeMovimentoQuadrilEsquerdo_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoQuadrilEsquerdo_OrderByInput',
    {
        'AmplitudeMovimentoQuadrilEsquerdo': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_AmplitudeMovimentoTornozeloDireito_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoTornozeloDireito_OrderByInput',
    {
        'AmplitudeMovimentoTornozeloDireito': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_AmplitudeMovimentoTornozeloEsquerdo_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoTornozeloEsquerdo_OrderByInput',
    {
        'AmplitudeMovimentoTornozeloEsquerdo': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pranchaVentral_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pranchaVentral_OrderByInput',
    {
        'pranchaVentral': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_extensaoColuna_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_extensaoColuna_OrderByInput',
    {
        'extensaoColuna': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pranchaLateralDireita_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pranchaLateralDireita_OrderByInput',
    {
        'pranchaLateralDireita': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pranchaLateralEsquerda_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pranchaLateralEsquerda_OrderByInput',
    {
        'pranchaLateralEsquerda': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_squatJump1_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_squatJump1_OrderByInput',
    {
        'squatJump1': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_squatJump2_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_squatJump2_OrderByInput',
    {
        'squatJump2': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_squatJump3_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_squatJump3_OrderByInput',
    {
        'squatJump3': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_RMagachamento_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_RMagachamento_OrderByInput',
    {
        'RMagachamento': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_RMsupino_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_RMsupino_OrderByInput',
    {
        'RMsupino': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_RMterra_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_RMterra_OrderByInput',
    {
        'RMterra': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_RMbarraFixa_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_RMbarraFixa_OrderByInput',
    {
        'RMbarraFixa': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_VelocidadeAerobiaMaxima_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_VelocidadeAerobiaMaxima_OrderByInput',
    {
        'VelocidadeAerobiaMaxima': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_bracoDireito_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_bracoDireito_OrderByInput',
    {
        'bracoDireito': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_bracoEsquerdo_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_bracoEsquerdo_OrderByInput',
    {
        'bracoEsquerdo': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_coxaDireita_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_coxaDireita_OrderByInput',
    {
        'coxaDireita': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_coxaEsquerda_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_coxaEsquerda_OrderByInput',
    {
        'coxaEsquerda': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_panturrilhaDireita_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_panturrilhaDireita_OrderByInput',
    {
        'panturrilhaDireita': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_panturrilhaEsquerda_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_panturrilhaEsquerda_OrderByInput',
    {
        'panturrilhaEsquerda': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_idade_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_idade_OrderByInput',
    {
        'idade': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_data_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_data_OrderByInput',
    {
        'data': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_hora_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_hora_OrderByInput',
    {
        'hora': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontuacaoTempoTreinoAtual_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontuacaoTempoTreinoAtual_OrderByInput',
    {
        'pontuacaoTempoTreinoAtual': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontuacao_tempo_de_destreinamento_atual_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontuacao_tempo_de_destreinamento_atual_OrderByInput',
    {
        'pontuacao_tempo_de_destreinamento_atual': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontuacao_experiencia_previa_de_treinamento_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontuacao_experiencia_previa_de_treinamento_OrderByInput',
    {
        'pontuacao_experiencia_previa_de_treinamento': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontuacao_media_nivel_treinamento_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontuacao_media_nivel_treinamento_OrderByInput',
    {
        'pontuacao_media_nivel_treinamento': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_status_de_treinamento_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_status_de_treinamento_OrderByInput',
    {
        'status_de_treinamento': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivel_mob_torn_direito_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivel_mob_torn_direito_OrderByInput',
    {
        'nivel_mob_torn_direito': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivel_mob_torn_esquerdo_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivel_mob_torn_esquerdo_OrderByInput',
    {
        'nivel_mob_torn_esquerdo': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivel_mob_quadril_direito_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivel_mob_quadril_direito_OrderByInput',
    {
        'nivel_mob_quadril_direito': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivel_mob_quadril_esquerdo_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivel_mob_quadril_esquerdo_OrderByInput',
    {
        'nivel_mob_quadril_esquerdo': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivel_mob_omb_direito_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivel_mob_omb_direito_OrderByInput',
    {
        'nivel_mob_omb_direito': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivel_mob_omb_esquerdo_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivel_mob_omb_esquerdo_OrderByInput',
    {
        'nivel_mob_omb_esquerdo': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivelPranchaVentral_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivelPranchaVentral_OrderByInput',
    {
        'nivelPranchaVentral': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivelExtensaoColuna_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivelExtensaoColuna_OrderByInput',
    {
        'nivelExtensaoColuna': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivelPranchaLateralDireita_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivelPranchaLateralDireita_OrderByInput',
    {
        'nivelPranchaLateralDireita': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivelPranchaLateralEsquerda_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivelPranchaLateralEsquerda_OrderByInput',
    {
        'nivelPranchaLateralEsquerda': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontosPranchaVentral_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontosPranchaVentral_OrderByInput',
    {
        'pontosPranchaVentral': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontosExtensaoColuna_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontosExtensaoColuna_OrderByInput',
    {
        'pontosExtensaoColuna': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontosPranchaLateralDireita_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontosPranchaLateralDireita_OrderByInput',
    {
        'pontosPranchaLateralDireita': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontosPranchaLateralEsquerda_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontosPranchaLateralEsquerda_OrderByInput',
    {
        'pontosPranchaLateralEsquerda': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_forcaRelativaAgachamento_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_forcaRelativaAgachamento_OrderByInput',
    {
        'forcaRelativaAgachamento': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_forcaRelativaSupino_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_forcaRelativaSupino_OrderByInput',
    {
        'forcaRelativaSupino': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_forcaRelativaTerra_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_forcaRelativaTerra_OrderByInput',
    {
        'forcaRelativaTerra': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_forcaRelativaBarraFixa_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_forcaRelativaBarraFixa_OrderByInput',
    {
        'forcaRelativaBarraFixa': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_squat_nivel_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_squat_nivel_OrderByInput',
    {
        'squat_nivel': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_supino_nivel_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_supino_nivel_OrderByInput',
    {
        'supino_nivel': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_terra_nivel_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_terra_nivel_OrderByInput',
    {
        'terra_nivel': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontuacao_squat_nivel_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontuacao_squat_nivel_OrderByInput',
    {
        'pontuacao_squat_nivel': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontuacao_supino_nivel_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontuacao_supino_nivel_OrderByInput',
    {
        'pontuacao_supino_nivel': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_pontuacao_terra_nivel_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_pontuacao_terra_nivel_OrderByInput',
    {
        'pontuacao_terra_nivel': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_media_squat_jump_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_media_squat_jump_OrderByInput',
    {
        'media_squat_jump': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_vo2_estimado_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_vo2_estimado_OrderByInput',
    {
        'vo2_estimado': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_faixa_etaria_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_faixa_etaria_OrderByInput',
    {
        'faixa_etaria': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_nivel_vo2_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_nivel_vo2_OrderByInput',
    {
        'nivel_vo2': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_IMC_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_IMC_OrderByInput',
    {
        'IMC': 'SortOrder',
    },
    total=True
)

_FormularioAvaliacaoFisica_ClassificacaoIMC_OrderByInput = TypedDict(
    '_FormularioAvaliacaoFisica_ClassificacaoIMC_OrderByInput',
    {
        'ClassificacaoIMC': 'SortOrder',
    },
    total=True
)

FormularioAvaliacaoFisicaOrderByInput = Union[
    '_FormularioAvaliacaoFisica_id_OrderByInput',
    '_FormularioAvaliacaoFisica_userId_OrderByInput',
    '_FormularioAvaliacaoFisica_aluno_OrderByInput',
    '_FormularioAvaliacaoFisica_treinador_OrderByInput',
    '_FormularioAvaliacaoFisica_diaTreino_OrderByInput',
    '_FormularioAvaliacaoFisica_modalidadeTreino_OrderByInput',
    '_FormularioAvaliacaoFisica_diaTreinoExtra_OrderByInput',
    '_FormularioAvaliacaoFisica_modalidadeTreinoExtra_OrderByInput',
    '_FormularioAvaliacaoFisica_altura_OrderByInput',
    '_FormularioAvaliacaoFisica_peso_OrderByInput',
    '_FormularioAvaliacaoFisica_torax_OrderByInput',
    '_FormularioAvaliacaoFisica_cintura_OrderByInput',
    '_FormularioAvaliacaoFisica_abdomen_OrderByInput',
    '_FormularioAvaliacaoFisica_quadril_OrderByInput',
    '_FormularioAvaliacaoFisica_braco_d_OrderByInput',
    '_FormularioAvaliacaoFisica_braco_e_OrderByInput',
    '_FormularioAvaliacaoFisica_coxa_d_OrderByInput',
    '_FormularioAvaliacaoFisica_coxa_e_OrderByInput',
    '_FormularioAvaliacaoFisica_panturrilha_d_OrderByInput',
    '_FormularioAvaliacaoFisica_panturrilha_e_OrderByInput',
    '_FormularioAvaliacaoFisica_medidaMao_OrderByInput',
    '_FormularioAvaliacaoFisica_mobilidadeGlenoumeralDireita_OrderByInput',
    '_FormularioAvaliacaoFisica_mobilidadeGlenoumeralEsquerda_OrderByInput',
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoQuadrilDireito_OrderByInput',
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoQuadrilEsquerdo_OrderByInput',
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoTornozeloDireito_OrderByInput',
    '_FormularioAvaliacaoFisica_AmplitudeMovimentoTornozeloEsquerdo_OrderByInput',
    '_FormularioAvaliacaoFisica_pranchaVentral_OrderByInput',
    '_FormularioAvaliacaoFisica_extensaoColuna_OrderByInput',
    '_FormularioAvaliacaoFisica_pranchaLateralDireita_OrderByInput',
    '_FormularioAvaliacaoFisica_pranchaLateralEsquerda_OrderByInput',
    '_FormularioAvaliacaoFisica_squatJump1_OrderByInput',
    '_FormularioAvaliacaoFisica_squatJump2_OrderByInput',
    '_FormularioAvaliacaoFisica_squatJump3_OrderByInput',
    '_FormularioAvaliacaoFisica_RMagachamento_OrderByInput',
    '_FormularioAvaliacaoFisica_RMsupino_OrderByInput',
    '_FormularioAvaliacaoFisica_RMterra_OrderByInput',
    '_FormularioAvaliacaoFisica_RMbarraFixa_OrderByInput',
    '_FormularioAvaliacaoFisica_VelocidadeAerobiaMaxima_OrderByInput',
    '_FormularioAvaliacaoFisica_bracoDireito_OrderByInput',
    '_FormularioAvaliacaoFisica_bracoEsquerdo_OrderByInput',
    '_FormularioAvaliacaoFisica_coxaDireita_OrderByInput',
    '_FormularioAvaliacaoFisica_coxaEsquerda_OrderByInput',
    '_FormularioAvaliacaoFisica_panturrilhaDireita_OrderByInput',
    '_FormularioAvaliacaoFisica_panturrilhaEsquerda_OrderByInput',
    '_FormularioAvaliacaoFisica_idade_OrderByInput',
    '_FormularioAvaliacaoFisica_data_OrderByInput',
    '_FormularioAvaliacaoFisica_hora_OrderByInput',
    '_FormularioAvaliacaoFisica_pontuacaoTempoTreinoAtual_OrderByInput',
    '_FormularioAvaliacaoFisica_pontuacao_tempo_de_destreinamento_atual_OrderByInput',
    '_FormularioAvaliacaoFisica_pontuacao_experiencia_previa_de_treinamento_OrderByInput',
    '_FormularioAvaliacaoFisica_pontuacao_media_nivel_treinamento_OrderByInput',
    '_FormularioAvaliacaoFisica_status_de_treinamento_OrderByInput',
    '_FormularioAvaliacaoFisica_nivel_mob_torn_direito_OrderByInput',
    '_FormularioAvaliacaoFisica_nivel_mob_torn_esquerdo_OrderByInput',
    '_FormularioAvaliacaoFisica_nivel_mob_quadril_direito_OrderByInput',
    '_FormularioAvaliacaoFisica_nivel_mob_quadril_esquerdo_OrderByInput',
    '_FormularioAvaliacaoFisica_nivel_mob_omb_direito_OrderByInput',
    '_FormularioAvaliacaoFisica_nivel_mob_omb_esquerdo_OrderByInput',
    '_FormularioAvaliacaoFisica_nivelPranchaVentral_OrderByInput',
    '_FormularioAvaliacaoFisica_nivelExtensaoColuna_OrderByInput',
    '_FormularioAvaliacaoFisica_nivelPranchaLateralDireita_OrderByInput',
    '_FormularioAvaliacaoFisica_nivelPranchaLateralEsquerda_OrderByInput',
    '_FormularioAvaliacaoFisica_pontosPranchaVentral_OrderByInput',
    '_FormularioAvaliacaoFisica_pontosExtensaoColuna_OrderByInput',
    '_FormularioAvaliacaoFisica_pontosPranchaLateralDireita_OrderByInput',
    '_FormularioAvaliacaoFisica_pontosPranchaLateralEsquerda_OrderByInput',
    '_FormularioAvaliacaoFisica_forcaRelativaAgachamento_OrderByInput',
    '_FormularioAvaliacaoFisica_forcaRelativaSupino_OrderByInput',
    '_FormularioAvaliacaoFisica_forcaRelativaTerra_OrderByInput',
    '_FormularioAvaliacaoFisica_forcaRelativaBarraFixa_OrderByInput',
    '_FormularioAvaliacaoFisica_squat_nivel_OrderByInput',
    '_FormularioAvaliacaoFisica_supino_nivel_OrderByInput',
    '_FormularioAvaliacaoFisica_terra_nivel_OrderByInput',
    '_FormularioAvaliacaoFisica_pontuacao_squat_nivel_OrderByInput',
    '_FormularioAvaliacaoFisica_pontuacao_supino_nivel_OrderByInput',
    '_FormularioAvaliacaoFisica_pontuacao_terra_nivel_OrderByInput',
    '_FormularioAvaliacaoFisica_media_squat_jump_OrderByInput',
    '_FormularioAvaliacaoFisica_vo2_estimado_OrderByInput',
    '_FormularioAvaliacaoFisica_faixa_etaria_OrderByInput',
    '_FormularioAvaliacaoFisica_nivel_vo2_OrderByInput',
    '_FormularioAvaliacaoFisica_IMC_OrderByInput',
    '_FormularioAvaliacaoFisica_ClassificacaoIMC_OrderByInput',
]



# recursive FormularioAvaliacaoFisica types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

FormularioAvaliacaoFisicaRelationFilter = TypedDict(
    'FormularioAvaliacaoFisicaRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class FormularioAvaliacaoFisicaListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class FormularioAvaliacaoFisicaInclude(TypedDict, total=False):
    """FormularioAvaliacaoFisica relational arguments"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisica']


    

class UserIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive1']


class UserIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive2']


class UserIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive3']


class UserIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    accounts: Union[bool, 'FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive4']


class UserIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class UserArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyUserArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromFormularioAvaliacaoFisicaRecursive1']
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class ProfileIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromFormularioAvaliacaoFisicaRecursive2']
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class ProfileIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromFormularioAvaliacaoFisicaRecursive3']
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class ProfileIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    role: Union[bool, 'RoleArgsFromFormularioAvaliacaoFisicaRecursive4']
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class ProfileIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class ProfileArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyProfileArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive1']


class RoleIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive2']


class RoleIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive3']


class RoleIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    profiles: Union[bool, 'FindManyProfileArgsFromFormularioAvaliacaoFisicaRecursive4']


class RoleIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class RoleArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyRoleArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive1']
    responsible: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class GymIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive2']
    responsible: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class GymIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive3']
    responsible: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class GymIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    users: Union[bool, 'FindManyUserArgsFromFormularioAvaliacaoFisicaRecursive4']
    responsible: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class GymIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class GymArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyGymArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class UserTypeIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class UserTypeIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class UserTypeIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class UserTypeIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class UserTypeArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyUserTypeArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class AccountIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class AccountIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class AccountIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class AccountIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class AccountArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyAccountArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class SessionIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class SessionIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class SessionIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class SessionIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class SessionArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManySessionArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class VerificationTokenIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class VerificationTokenIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class VerificationTokenIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class VerificationTokenIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class VerificationTokenArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyVerificationTokenArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class TodoIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class TodoIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class TodoIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class TodoIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class TodoArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyTodoArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class FormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class TreinoIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class TreinoIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class TreinoIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""


class TreinoIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class TreinoArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyTreinoArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive1']


class RegistraTreinoIncludeFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive2']


class RegistraTreinoIncludeFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive3']


class RegistraTreinoIncludeFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""
    user: Union[bool, 'UserArgsFromFormularioAvaliacaoFisicaRecursive4']


class RegistraTreinoIncludeFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Relational arguments for FormularioAvaliacaoFisica"""

    

class RegistraTreinoArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    
    

class FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisica(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive1(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive2(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive3(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromFormularioAvaliacaoFisicaRecursive4(TypedDict, total=False):
    """Arguments for FormularioAvaliacaoFisica"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyFormularioAvaliacaoFisicaArgs = FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisica
FindFirstFormularioAvaliacaoFisicaArgs = FindManyFormularioAvaliacaoFisicaArgsFromFormularioAvaliacaoFisica


    

class FormularioAvaliacaoFisicaWhereInput(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    aluno: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    diaTreino: Union[_str, 'types.StringFilter']
    modalidadeTreino: Union[_str, 'types.StringFilter']
    diaTreinoExtra: Union[_str, 'types.StringFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['FormularioAvaliacaoFisicaWhereInputRecursive1', List['FormularioAvaliacaoFisicaWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['FormularioAvaliacaoFisicaWhereInputRecursive1']
    OR: List['FormularioAvaliacaoFisicaWhereInputRecursive1']
    NOT: List['FormularioAvaliacaoFisicaWhereInputRecursive1']


class FormularioAvaliacaoFisicaWhereInputRecursive1(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    aluno: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    diaTreino: Union[_str, 'types.StringFilter']
    modalidadeTreino: Union[_str, 'types.StringFilter']
    diaTreinoExtra: Union[_str, 'types.StringFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['FormularioAvaliacaoFisicaWhereInputRecursive2', List['FormularioAvaliacaoFisicaWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['FormularioAvaliacaoFisicaWhereInputRecursive2']
    OR: List['FormularioAvaliacaoFisicaWhereInputRecursive2']
    NOT: List['FormularioAvaliacaoFisicaWhereInputRecursive2']


class FormularioAvaliacaoFisicaWhereInputRecursive2(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    aluno: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    diaTreino: Union[_str, 'types.StringFilter']
    modalidadeTreino: Union[_str, 'types.StringFilter']
    diaTreinoExtra: Union[_str, 'types.StringFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['FormularioAvaliacaoFisicaWhereInputRecursive3', List['FormularioAvaliacaoFisicaWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['FormularioAvaliacaoFisicaWhereInputRecursive3']
    OR: List['FormularioAvaliacaoFisicaWhereInputRecursive3']
    NOT: List['FormularioAvaliacaoFisicaWhereInputRecursive3']


class FormularioAvaliacaoFisicaWhereInputRecursive3(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    aluno: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    diaTreino: Union[_str, 'types.StringFilter']
    modalidadeTreino: Union[_str, 'types.StringFilter']
    diaTreinoExtra: Union[_str, 'types.StringFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['FormularioAvaliacaoFisicaWhereInputRecursive4', List['FormularioAvaliacaoFisicaWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['FormularioAvaliacaoFisicaWhereInputRecursive4']
    OR: List['FormularioAvaliacaoFisicaWhereInputRecursive4']
    NOT: List['FormularioAvaliacaoFisicaWhereInputRecursive4']


class FormularioAvaliacaoFisicaWhereInputRecursive4(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    aluno: Union[_str, 'types.StringFilter']
    treinador: Union[_str, 'types.StringFilter']
    diaTreino: Union[_str, 'types.StringFilter']
    modalidadeTreino: Union[_str, 'types.StringFilter']
    diaTreinoExtra: Union[_str, 'types.StringFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringFilter']
    altura: Union[_float, 'types.FloatFilter']
    peso: Union[_float, 'types.FloatFilter']
    torax: Union[_float, 'types.FloatFilter']
    cintura: Union[_float, 'types.FloatFilter']
    abdomen: Union[_float, 'types.FloatFilter']
    quadril: Union[_float, 'types.FloatFilter']
    braco_d: Union[_float, 'types.FloatFilter']
    braco_e: Union[_float, 'types.FloatFilter']
    coxa_d: Union[_float, 'types.FloatFilter']
    coxa_e: Union[_float, 'types.FloatFilter']
    panturrilha_d: Union[_float, 'types.FloatFilter']
    panturrilha_e: Union[_float, 'types.FloatFilter']
    medidaMao: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatFilter']
    pranchaVentral: Union[_float, 'types.FloatFilter']
    extensaoColuna: Union[_float, 'types.FloatFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    squatJump1: Union[_float, 'types.FloatFilter']
    squatJump2: Union[_float, 'types.FloatFilter']
    squatJump3: Union[_float, 'types.FloatFilter']
    RMagachamento: Union[_float, 'types.FloatFilter']
    RMsupino: Union[_float, 'types.FloatFilter']
    RMterra: Union[_float, 'types.FloatFilter']
    RMbarraFixa: Union[_float, 'types.FloatFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatFilter']
    bracoDireito: Union[_float, 'types.FloatFilter']
    bracoEsquerdo: Union[_float, 'types.FloatFilter']
    coxaDireita: Union[_float, 'types.FloatFilter']
    coxaEsquerda: Union[_float, 'types.FloatFilter']
    panturrilhaDireita: Union[_float, 'types.FloatFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatFilter']
    idade: Union[_int, 'types.IntFilter']
    data: Union[_str, 'types.StringFilter']
    hora: Union[_str, 'types.StringFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatFilter']
    status_de_treinamento: Union[_str, 'types.StringFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringFilter']
    nivelPranchaVentral: Union[_str, 'types.StringFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatFilter']
    squat_nivel: Union[_str, 'types.StringFilter']
    supino_nivel: Union[_str, 'types.StringFilter']
    terra_nivel: Union[_str, 'types.StringFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatFilter']
    media_squat_jump: Union[_float, 'types.FloatFilter']
    vo2_estimado: Union[_float, 'types.FloatFilter']
    faixa_etaria: Union[_str, 'types.StringFilter']
    nivel_vo2: Union[_str, 'types.StringFilter']
    IMC: Union[_float, 'types.FloatFilter']
    ClassificacaoIMC: Union[_str, 'types.StringFilter']



# aggregate FormularioAvaliacaoFisica types


    

class FormularioAvaliacaoFisicaScalarWhereWithAggregatesInput(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreino: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1']
    OR: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1']
    NOT: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1']


class FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreino: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2']
    OR: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2']
    NOT: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2']


class FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreino: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3']
    OR: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3']
    NOT: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3']


class FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreino: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4']
    OR: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4']
    NOT: List['FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4']


class FormularioAvaliacaoFisicaScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """FormularioAvaliacaoFisica arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    aluno: Union[_str, 'types.StringWithAggregatesFilter']
    treinador: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreino: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    diaTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    modalidadeTreinoExtra: Union[_str, 'types.StringWithAggregatesFilter']
    altura: Union[_float, 'types.FloatWithAggregatesFilter']
    peso: Union[_float, 'types.FloatWithAggregatesFilter']
    torax: Union[_float, 'types.FloatWithAggregatesFilter']
    cintura: Union[_float, 'types.FloatWithAggregatesFilter']
    abdomen: Union[_float, 'types.FloatWithAggregatesFilter']
    quadril: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_d: Union[_float, 'types.FloatWithAggregatesFilter']
    braco_e: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_d: Union[_float, 'types.FloatWithAggregatesFilter']
    coxa_e: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_d: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilha_e: Union[_float, 'types.FloatWithAggregatesFilter']
    medidaMao: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    mobilidadeGlenoumeralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoQuadrilEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    AmplitudeMovimentoTornozeloEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    extensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump1: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump2: Union[_float, 'types.FloatWithAggregatesFilter']
    squatJump3: Union[_float, 'types.FloatWithAggregatesFilter']
    RMagachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    RMsupino: Union[_float, 'types.FloatWithAggregatesFilter']
    RMterra: Union[_float, 'types.FloatWithAggregatesFilter']
    RMbarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    VelocidadeAerobiaMaxima: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoDireito: Union[_float, 'types.FloatWithAggregatesFilter']
    bracoEsquerdo: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    coxaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    panturrilhaEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    idade: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union[_str, 'types.StringWithAggregatesFilter']
    hora: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacaoTempoTreinoAtual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_tempo_de_destreinamento_atual: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_experiencia_previa_de_treinamento: Union[_int, 'types.IntWithAggregatesFilter']
    pontuacao_media_nivel_treinamento: Union[_float, 'types.FloatWithAggregatesFilter']
    status_de_treinamento: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_torn_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_quadril_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_direito: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_mob_omb_esquerdo: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaVentral: Union[_str, 'types.StringWithAggregatesFilter']
    nivelExtensaoColuna: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralDireita: Union[_str, 'types.StringWithAggregatesFilter']
    nivelPranchaLateralEsquerda: Union[_str, 'types.StringWithAggregatesFilter']
    pontosPranchaVentral: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosExtensaoColuna: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralDireita: Union[_float, 'types.FloatWithAggregatesFilter']
    pontosPranchaLateralEsquerda: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaAgachamento: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaSupino: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaTerra: Union[_float, 'types.FloatWithAggregatesFilter']
    forcaRelativaBarraFixa: Union[_float, 'types.FloatWithAggregatesFilter']
    squat_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    supino_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    terra_nivel: Union[_str, 'types.StringWithAggregatesFilter']
    pontuacao_squat_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_supino_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    pontuacao_terra_nivel: Union[_float, 'types.FloatWithAggregatesFilter']
    media_squat_jump: Union[_float, 'types.FloatWithAggregatesFilter']
    vo2_estimado: Union[_float, 'types.FloatWithAggregatesFilter']
    faixa_etaria: Union[_str, 'types.StringWithAggregatesFilter']
    nivel_vo2: Union[_str, 'types.StringWithAggregatesFilter']
    IMC: Union[_float, 'types.FloatWithAggregatesFilter']
    ClassificacaoIMC: Union[_str, 'types.StringWithAggregatesFilter']



class FormularioAvaliacaoFisicaGroupByOutput(TypedDict, total=False):
    id: _str
    userId: _str
    aluno: _str
    treinador: _str
    diaTreino: _str
    modalidadeTreino: _str
    diaTreinoExtra: _str
    modalidadeTreinoExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str
    _sum: 'FormularioAvaliacaoFisicaSumAggregateOutput'
    _avg: 'FormularioAvaliacaoFisicaAvgAggregateOutput'
    _min: 'FormularioAvaliacaoFisicaMinAggregateOutput'
    _max: 'FormularioAvaliacaoFisicaMaxAggregateOutput'
    _count: 'FormularioAvaliacaoFisicaCountAggregateOutput'


class FormularioAvaliacaoFisicaAvgAggregateOutput(TypedDict, total=False):
    """FormularioAvaliacaoFisica output for aggregating averages"""
    altura: float
    peso: float
    torax: float
    cintura: float
    abdomen: float
    quadril: float
    braco_d: float
    braco_e: float
    coxa_d: float
    coxa_e: float
    panturrilha_d: float
    panturrilha_e: float
    medidaMao: float
    mobilidadeGlenoumeralDireita: float
    mobilidadeGlenoumeralEsquerda: float
    AmplitudeMovimentoQuadrilDireito: float
    AmplitudeMovimentoQuadrilEsquerdo: float
    AmplitudeMovimentoTornozeloDireito: float
    AmplitudeMovimentoTornozeloEsquerdo: float
    pranchaVentral: float
    extensaoColuna: float
    pranchaLateralDireita: float
    pranchaLateralEsquerda: float
    squatJump1: float
    squatJump2: float
    squatJump3: float
    RMagachamento: float
    RMsupino: float
    RMterra: float
    RMbarraFixa: float
    VelocidadeAerobiaMaxima: float
    bracoDireito: float
    bracoEsquerdo: float
    coxaDireita: float
    coxaEsquerda: float
    panturrilhaDireita: float
    panturrilhaEsquerda: float
    idade: float
    pontuacaoTempoTreinoAtual: float
    pontuacao_tempo_de_destreinamento_atual: float
    pontuacao_experiencia_previa_de_treinamento: float
    pontuacao_media_nivel_treinamento: float
    pontosPranchaVentral: float
    pontosExtensaoColuna: float
    pontosPranchaLateralDireita: float
    pontosPranchaLateralEsquerda: float
    forcaRelativaAgachamento: float
    forcaRelativaSupino: float
    forcaRelativaTerra: float
    forcaRelativaBarraFixa: float
    pontuacao_squat_nivel: float
    pontuacao_supino_nivel: float
    pontuacao_terra_nivel: float
    media_squat_jump: float
    vo2_estimado: float
    IMC: float


class FormularioAvaliacaoFisicaSumAggregateOutput(TypedDict, total=False):
    """FormularioAvaliacaoFisica output for aggregating sums"""
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    IMC: _float


class FormularioAvaliacaoFisicaScalarAggregateOutput(TypedDict, total=False):
    """FormularioAvaliacaoFisica output including scalar fields"""
    id: _str
    userId: _str
    aluno: _str
    treinador: _str
    diaTreino: _str
    modalidadeTreino: _str
    diaTreinoExtra: _str
    modalidadeTreinoExtra: _str
    altura: _float
    peso: _float
    torax: _float
    cintura: _float
    abdomen: _float
    quadril: _float
    braco_d: _float
    braco_e: _float
    coxa_d: _float
    coxa_e: _float
    panturrilha_d: _float
    panturrilha_e: _float
    medidaMao: _float
    mobilidadeGlenoumeralDireita: _float
    mobilidadeGlenoumeralEsquerda: _float
    AmplitudeMovimentoQuadrilDireito: _float
    AmplitudeMovimentoQuadrilEsquerdo: _float
    AmplitudeMovimentoTornozeloDireito: _float
    AmplitudeMovimentoTornozeloEsquerdo: _float
    pranchaVentral: _float
    extensaoColuna: _float
    pranchaLateralDireita: _float
    pranchaLateralEsquerda: _float
    squatJump1: _float
    squatJump2: _float
    squatJump3: _float
    RMagachamento: _float
    RMsupino: _float
    RMterra: _float
    RMbarraFixa: _float
    VelocidadeAerobiaMaxima: _float
    bracoDireito: _float
    bracoEsquerdo: _float
    coxaDireita: _float
    coxaEsquerda: _float
    panturrilhaDireita: _float
    panturrilhaEsquerda: _float
    idade: _int
    data: _str
    hora: _str
    pontuacaoTempoTreinoAtual: _int
    pontuacao_tempo_de_destreinamento_atual: _int
    pontuacao_experiencia_previa_de_treinamento: _int
    pontuacao_media_nivel_treinamento: _float
    status_de_treinamento: _str
    nivel_mob_torn_direito: _str
    nivel_mob_torn_esquerdo: _str
    nivel_mob_quadril_direito: _str
    nivel_mob_quadril_esquerdo: _str
    nivel_mob_omb_direito: _str
    nivel_mob_omb_esquerdo: _str
    nivelPranchaVentral: _str
    nivelExtensaoColuna: _str
    nivelPranchaLateralDireita: _str
    nivelPranchaLateralEsquerda: _str
    pontosPranchaVentral: _float
    pontosExtensaoColuna: _float
    pontosPranchaLateralDireita: _float
    pontosPranchaLateralEsquerda: _float
    forcaRelativaAgachamento: _float
    forcaRelativaSupino: _float
    forcaRelativaTerra: _float
    forcaRelativaBarraFixa: _float
    squat_nivel: _str
    supino_nivel: _str
    terra_nivel: _str
    pontuacao_squat_nivel: _float
    pontuacao_supino_nivel: _float
    pontuacao_terra_nivel: _float
    media_squat_jump: _float
    vo2_estimado: _float
    faixa_etaria: _str
    nivel_vo2: _str
    IMC: _float
    ClassificacaoIMC: _str


FormularioAvaliacaoFisicaMinAggregateOutput = FormularioAvaliacaoFisicaScalarAggregateOutput
FormularioAvaliacaoFisicaMaxAggregateOutput = FormularioAvaliacaoFisicaScalarAggregateOutput


class FormularioAvaliacaoFisicaMaxAggregateInput(TypedDict, total=False):
    """FormularioAvaliacaoFisica input for aggregating by max"""
    id: bool
    userId: bool
    aluno: bool
    treinador: bool
    diaTreino: bool
    modalidadeTreino: bool
    diaTreinoExtra: bool
    modalidadeTreinoExtra: bool
    altura: bool
    peso: bool
    torax: bool
    cintura: bool
    abdomen: bool
    quadril: bool
    braco_d: bool
    braco_e: bool
    coxa_d: bool
    coxa_e: bool
    panturrilha_d: bool
    panturrilha_e: bool
    medidaMao: bool
    mobilidadeGlenoumeralDireita: bool
    mobilidadeGlenoumeralEsquerda: bool
    AmplitudeMovimentoQuadrilDireito: bool
    AmplitudeMovimentoQuadrilEsquerdo: bool
    AmplitudeMovimentoTornozeloDireito: bool
    AmplitudeMovimentoTornozeloEsquerdo: bool
    pranchaVentral: bool
    extensaoColuna: bool
    pranchaLateralDireita: bool
    pranchaLateralEsquerda: bool
    squatJump1: bool
    squatJump2: bool
    squatJump3: bool
    RMagachamento: bool
    RMsupino: bool
    RMterra: bool
    RMbarraFixa: bool
    VelocidadeAerobiaMaxima: bool
    bracoDireito: bool
    bracoEsquerdo: bool
    coxaDireita: bool
    coxaEsquerda: bool
    panturrilhaDireita: bool
    panturrilhaEsquerda: bool
    idade: bool
    data: bool
    hora: bool
    pontuacaoTempoTreinoAtual: bool
    pontuacao_tempo_de_destreinamento_atual: bool
    pontuacao_experiencia_previa_de_treinamento: bool
    pontuacao_media_nivel_treinamento: bool
    status_de_treinamento: bool
    nivel_mob_torn_direito: bool
    nivel_mob_torn_esquerdo: bool
    nivel_mob_quadril_direito: bool
    nivel_mob_quadril_esquerdo: bool
    nivel_mob_omb_direito: bool
    nivel_mob_omb_esquerdo: bool
    nivelPranchaVentral: bool
    nivelExtensaoColuna: bool
    nivelPranchaLateralDireita: bool
    nivelPranchaLateralEsquerda: bool
    pontosPranchaVentral: bool
    pontosExtensaoColuna: bool
    pontosPranchaLateralDireita: bool
    pontosPranchaLateralEsquerda: bool
    forcaRelativaAgachamento: bool
    forcaRelativaSupino: bool
    forcaRelativaTerra: bool
    forcaRelativaBarraFixa: bool
    squat_nivel: bool
    supino_nivel: bool
    terra_nivel: bool
    pontuacao_squat_nivel: bool
    pontuacao_supino_nivel: bool
    pontuacao_terra_nivel: bool
    media_squat_jump: bool
    vo2_estimado: bool
    faixa_etaria: bool
    nivel_vo2: bool
    IMC: bool
    ClassificacaoIMC: bool


class FormularioAvaliacaoFisicaMinAggregateInput(TypedDict, total=False):
    """FormularioAvaliacaoFisica input for aggregating by min"""
    id: bool
    userId: bool
    aluno: bool
    treinador: bool
    diaTreino: bool
    modalidadeTreino: bool
    diaTreinoExtra: bool
    modalidadeTreinoExtra: bool
    altura: bool
    peso: bool
    torax: bool
    cintura: bool
    abdomen: bool
    quadril: bool
    braco_d: bool
    braco_e: bool
    coxa_d: bool
    coxa_e: bool
    panturrilha_d: bool
    panturrilha_e: bool
    medidaMao: bool
    mobilidadeGlenoumeralDireita: bool
    mobilidadeGlenoumeralEsquerda: bool
    AmplitudeMovimentoQuadrilDireito: bool
    AmplitudeMovimentoQuadrilEsquerdo: bool
    AmplitudeMovimentoTornozeloDireito: bool
    AmplitudeMovimentoTornozeloEsquerdo: bool
    pranchaVentral: bool
    extensaoColuna: bool
    pranchaLateralDireita: bool
    pranchaLateralEsquerda: bool
    squatJump1: bool
    squatJump2: bool
    squatJump3: bool
    RMagachamento: bool
    RMsupino: bool
    RMterra: bool
    RMbarraFixa: bool
    VelocidadeAerobiaMaxima: bool
    bracoDireito: bool
    bracoEsquerdo: bool
    coxaDireita: bool
    coxaEsquerda: bool
    panturrilhaDireita: bool
    panturrilhaEsquerda: bool
    idade: bool
    data: bool
    hora: bool
    pontuacaoTempoTreinoAtual: bool
    pontuacao_tempo_de_destreinamento_atual: bool
    pontuacao_experiencia_previa_de_treinamento: bool
    pontuacao_media_nivel_treinamento: bool
    status_de_treinamento: bool
    nivel_mob_torn_direito: bool
    nivel_mob_torn_esquerdo: bool
    nivel_mob_quadril_direito: bool
    nivel_mob_quadril_esquerdo: bool
    nivel_mob_omb_direito: bool
    nivel_mob_omb_esquerdo: bool
    nivelPranchaVentral: bool
    nivelExtensaoColuna: bool
    nivelPranchaLateralDireita: bool
    nivelPranchaLateralEsquerda: bool
    pontosPranchaVentral: bool
    pontosExtensaoColuna: bool
    pontosPranchaLateralDireita: bool
    pontosPranchaLateralEsquerda: bool
    forcaRelativaAgachamento: bool
    forcaRelativaSupino: bool
    forcaRelativaTerra: bool
    forcaRelativaBarraFixa: bool
    squat_nivel: bool
    supino_nivel: bool
    terra_nivel: bool
    pontuacao_squat_nivel: bool
    pontuacao_supino_nivel: bool
    pontuacao_terra_nivel: bool
    media_squat_jump: bool
    vo2_estimado: bool
    faixa_etaria: bool
    nivel_vo2: bool
    IMC: bool
    ClassificacaoIMC: bool


class FormularioAvaliacaoFisicaNumberAggregateInput(TypedDict, total=False):
    """FormularioAvaliacaoFisica input for aggregating numbers"""
    altura: bool
    peso: bool
    torax: bool
    cintura: bool
    abdomen: bool
    quadril: bool
    braco_d: bool
    braco_e: bool
    coxa_d: bool
    coxa_e: bool
    panturrilha_d: bool
    panturrilha_e: bool
    medidaMao: bool
    mobilidadeGlenoumeralDireita: bool
    mobilidadeGlenoumeralEsquerda: bool
    AmplitudeMovimentoQuadrilDireito: bool
    AmplitudeMovimentoQuadrilEsquerdo: bool
    AmplitudeMovimentoTornozeloDireito: bool
    AmplitudeMovimentoTornozeloEsquerdo: bool
    pranchaVentral: bool
    extensaoColuna: bool
    pranchaLateralDireita: bool
    pranchaLateralEsquerda: bool
    squatJump1: bool
    squatJump2: bool
    squatJump3: bool
    RMagachamento: bool
    RMsupino: bool
    RMterra: bool
    RMbarraFixa: bool
    VelocidadeAerobiaMaxima: bool
    bracoDireito: bool
    bracoEsquerdo: bool
    coxaDireita: bool
    coxaEsquerda: bool
    panturrilhaDireita: bool
    panturrilhaEsquerda: bool
    idade: bool
    pontuacaoTempoTreinoAtual: bool
    pontuacao_tempo_de_destreinamento_atual: bool
    pontuacao_experiencia_previa_de_treinamento: bool
    pontuacao_media_nivel_treinamento: bool
    pontosPranchaVentral: bool
    pontosExtensaoColuna: bool
    pontosPranchaLateralDireita: bool
    pontosPranchaLateralEsquerda: bool
    forcaRelativaAgachamento: bool
    forcaRelativaSupino: bool
    forcaRelativaTerra: bool
    forcaRelativaBarraFixa: bool
    pontuacao_squat_nivel: bool
    pontuacao_supino_nivel: bool
    pontuacao_terra_nivel: bool
    media_squat_jump: bool
    vo2_estimado: bool
    IMC: bool


FormularioAvaliacaoFisicaAvgAggregateInput = FormularioAvaliacaoFisicaNumberAggregateInput
FormularioAvaliacaoFisicaSumAggregateInput = FormularioAvaliacaoFisicaNumberAggregateInput


FormularioAvaliacaoFisicaCountAggregateInput = TypedDict(
    'FormularioAvaliacaoFisicaCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'aluno': bool,
        'treinador': bool,
        'diaTreino': bool,
        'modalidadeTreino': bool,
        'diaTreinoExtra': bool,
        'modalidadeTreinoExtra': bool,
        'altura': bool,
        'peso': bool,
        'torax': bool,
        'cintura': bool,
        'abdomen': bool,
        'quadril': bool,
        'braco_d': bool,
        'braco_e': bool,
        'coxa_d': bool,
        'coxa_e': bool,
        'panturrilha_d': bool,
        'panturrilha_e': bool,
        'medidaMao': bool,
        'mobilidadeGlenoumeralDireita': bool,
        'mobilidadeGlenoumeralEsquerda': bool,
        'AmplitudeMovimentoQuadrilDireito': bool,
        'AmplitudeMovimentoQuadrilEsquerdo': bool,
        'AmplitudeMovimentoTornozeloDireito': bool,
        'AmplitudeMovimentoTornozeloEsquerdo': bool,
        'pranchaVentral': bool,
        'extensaoColuna': bool,
        'pranchaLateralDireita': bool,
        'pranchaLateralEsquerda': bool,
        'squatJump1': bool,
        'squatJump2': bool,
        'squatJump3': bool,
        'RMagachamento': bool,
        'RMsupino': bool,
        'RMterra': bool,
        'RMbarraFixa': bool,
        'VelocidadeAerobiaMaxima': bool,
        'bracoDireito': bool,
        'bracoEsquerdo': bool,
        'coxaDireita': bool,
        'coxaEsquerda': bool,
        'panturrilhaDireita': bool,
        'panturrilhaEsquerda': bool,
        'idade': bool,
        'data': bool,
        'hora': bool,
        'pontuacaoTempoTreinoAtual': bool,
        'pontuacao_tempo_de_destreinamento_atual': bool,
        'pontuacao_experiencia_previa_de_treinamento': bool,
        'pontuacao_media_nivel_treinamento': bool,
        'status_de_treinamento': bool,
        'nivel_mob_torn_direito': bool,
        'nivel_mob_torn_esquerdo': bool,
        'nivel_mob_quadril_direito': bool,
        'nivel_mob_quadril_esquerdo': bool,
        'nivel_mob_omb_direito': bool,
        'nivel_mob_omb_esquerdo': bool,
        'nivelPranchaVentral': bool,
        'nivelExtensaoColuna': bool,
        'nivelPranchaLateralDireita': bool,
        'nivelPranchaLateralEsquerda': bool,
        'pontosPranchaVentral': bool,
        'pontosExtensaoColuna': bool,
        'pontosPranchaLateralDireita': bool,
        'pontosPranchaLateralEsquerda': bool,
        'forcaRelativaAgachamento': bool,
        'forcaRelativaSupino': bool,
        'forcaRelativaTerra': bool,
        'forcaRelativaBarraFixa': bool,
        'squat_nivel': bool,
        'supino_nivel': bool,
        'terra_nivel': bool,
        'pontuacao_squat_nivel': bool,
        'pontuacao_supino_nivel': bool,
        'pontuacao_terra_nivel': bool,
        'media_squat_jump': bool,
        'vo2_estimado': bool,
        'faixa_etaria': bool,
        'nivel_vo2': bool,
        'IMC': bool,
        'ClassificacaoIMC': bool,
        '_all': bool,
    },
    total=False,
)

FormularioAvaliacaoFisicaCountAggregateOutput = TypedDict(
    'FormularioAvaliacaoFisicaCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'aluno': int,
        'treinador': int,
        'diaTreino': int,
        'modalidadeTreino': int,
        'diaTreinoExtra': int,
        'modalidadeTreinoExtra': int,
        'altura': int,
        'peso': int,
        'torax': int,
        'cintura': int,
        'abdomen': int,
        'quadril': int,
        'braco_d': int,
        'braco_e': int,
        'coxa_d': int,
        'coxa_e': int,
        'panturrilha_d': int,
        'panturrilha_e': int,
        'medidaMao': int,
        'mobilidadeGlenoumeralDireita': int,
        'mobilidadeGlenoumeralEsquerda': int,
        'AmplitudeMovimentoQuadrilDireito': int,
        'AmplitudeMovimentoQuadrilEsquerdo': int,
        'AmplitudeMovimentoTornozeloDireito': int,
        'AmplitudeMovimentoTornozeloEsquerdo': int,
        'pranchaVentral': int,
        'extensaoColuna': int,
        'pranchaLateralDireita': int,
        'pranchaLateralEsquerda': int,
        'squatJump1': int,
        'squatJump2': int,
        'squatJump3': int,
        'RMagachamento': int,
        'RMsupino': int,
        'RMterra': int,
        'RMbarraFixa': int,
        'VelocidadeAerobiaMaxima': int,
        'bracoDireito': int,
        'bracoEsquerdo': int,
        'coxaDireita': int,
        'coxaEsquerda': int,
        'panturrilhaDireita': int,
        'panturrilhaEsquerda': int,
        'idade': int,
        'data': int,
        'hora': int,
        'pontuacaoTempoTreinoAtual': int,
        'pontuacao_tempo_de_destreinamento_atual': int,
        'pontuacao_experiencia_previa_de_treinamento': int,
        'pontuacao_media_nivel_treinamento': int,
        'status_de_treinamento': int,
        'nivel_mob_torn_direito': int,
        'nivel_mob_torn_esquerdo': int,
        'nivel_mob_quadril_direito': int,
        'nivel_mob_quadril_esquerdo': int,
        'nivel_mob_omb_direito': int,
        'nivel_mob_omb_esquerdo': int,
        'nivelPranchaVentral': int,
        'nivelExtensaoColuna': int,
        'nivelPranchaLateralDireita': int,
        'nivelPranchaLateralEsquerda': int,
        'pontosPranchaVentral': int,
        'pontosExtensaoColuna': int,
        'pontosPranchaLateralDireita': int,
        'pontosPranchaLateralEsquerda': int,
        'forcaRelativaAgachamento': int,
        'forcaRelativaSupino': int,
        'forcaRelativaTerra': int,
        'forcaRelativaBarraFixa': int,
        'squat_nivel': int,
        'supino_nivel': int,
        'terra_nivel': int,
        'pontuacao_squat_nivel': int,
        'pontuacao_supino_nivel': int,
        'pontuacao_terra_nivel': int,
        'media_squat_jump': int,
        'vo2_estimado': int,
        'faixa_etaria': int,
        'nivel_vo2': int,
        'IMC': int,
        'ClassificacaoIMC': int,
        '_all': int,
    },
    total=False,
)


FormularioAvaliacaoFisicaKeys = Literal[
    'id',
    'userId',
    'user',
    'aluno',
    'treinador',
    'diaTreino',
    'modalidadeTreino',
    'diaTreinoExtra',
    'modalidadeTreinoExtra',
    'altura',
    'peso',
    'torax',
    'cintura',
    'abdomen',
    'quadril',
    'braco_d',
    'braco_e',
    'coxa_d',
    'coxa_e',
    'panturrilha_d',
    'panturrilha_e',
    'medidaMao',
    'mobilidadeGlenoumeralDireita',
    'mobilidadeGlenoumeralEsquerda',
    'AmplitudeMovimentoQuadrilDireito',
    'AmplitudeMovimentoQuadrilEsquerdo',
    'AmplitudeMovimentoTornozeloDireito',
    'AmplitudeMovimentoTornozeloEsquerdo',
    'pranchaVentral',
    'extensaoColuna',
    'pranchaLateralDireita',
    'pranchaLateralEsquerda',
    'squatJump1',
    'squatJump2',
    'squatJump3',
    'RMagachamento',
    'RMsupino',
    'RMterra',
    'RMbarraFixa',
    'VelocidadeAerobiaMaxima',
    'bracoDireito',
    'bracoEsquerdo',
    'coxaDireita',
    'coxaEsquerda',
    'panturrilhaDireita',
    'panturrilhaEsquerda',
    'idade',
    'data',
    'hora',
    'pontuacaoTempoTreinoAtual',
    'pontuacao_tempo_de_destreinamento_atual',
    'pontuacao_experiencia_previa_de_treinamento',
    'pontuacao_media_nivel_treinamento',
    'status_de_treinamento',
    'nivel_mob_torn_direito',
    'nivel_mob_torn_esquerdo',
    'nivel_mob_quadril_direito',
    'nivel_mob_quadril_esquerdo',
    'nivel_mob_omb_direito',
    'nivel_mob_omb_esquerdo',
    'nivelPranchaVentral',
    'nivelExtensaoColuna',
    'nivelPranchaLateralDireita',
    'nivelPranchaLateralEsquerda',
    'pontosPranchaVentral',
    'pontosExtensaoColuna',
    'pontosPranchaLateralDireita',
    'pontosPranchaLateralEsquerda',
    'forcaRelativaAgachamento',
    'forcaRelativaSupino',
    'forcaRelativaTerra',
    'forcaRelativaBarraFixa',
    'squat_nivel',
    'supino_nivel',
    'terra_nivel',
    'pontuacao_squat_nivel',
    'pontuacao_supino_nivel',
    'pontuacao_terra_nivel',
    'media_squat_jump',
    'vo2_estimado',
    'faixa_etaria',
    'nivel_vo2',
    'IMC',
    'ClassificacaoIMC',
]
FormularioAvaliacaoFisicaScalarFieldKeys = Literal[
    'id',
    'userId',
    'aluno',
    'treinador',
    'diaTreino',
    'modalidadeTreino',
    'diaTreinoExtra',
    'modalidadeTreinoExtra',
    'altura',
    'peso',
    'torax',
    'cintura',
    'abdomen',
    'quadril',
    'braco_d',
    'braco_e',
    'coxa_d',
    'coxa_e',
    'panturrilha_d',
    'panturrilha_e',
    'medidaMao',
    'mobilidadeGlenoumeralDireita',
    'mobilidadeGlenoumeralEsquerda',
    'AmplitudeMovimentoQuadrilDireito',
    'AmplitudeMovimentoQuadrilEsquerdo',
    'AmplitudeMovimentoTornozeloDireito',
    'AmplitudeMovimentoTornozeloEsquerdo',
    'pranchaVentral',
    'extensaoColuna',
    'pranchaLateralDireita',
    'pranchaLateralEsquerda',
    'squatJump1',
    'squatJump2',
    'squatJump3',
    'RMagachamento',
    'RMsupino',
    'RMterra',
    'RMbarraFixa',
    'VelocidadeAerobiaMaxima',
    'bracoDireito',
    'bracoEsquerdo',
    'coxaDireita',
    'coxaEsquerda',
    'panturrilhaDireita',
    'panturrilhaEsquerda',
    'idade',
    'data',
    'hora',
    'pontuacaoTempoTreinoAtual',
    'pontuacao_tempo_de_destreinamento_atual',
    'pontuacao_experiencia_previa_de_treinamento',
    'pontuacao_media_nivel_treinamento',
    'status_de_treinamento',
    'nivel_mob_torn_direito',
    'nivel_mob_torn_esquerdo',
    'nivel_mob_quadril_direito',
    'nivel_mob_quadril_esquerdo',
    'nivel_mob_omb_direito',
    'nivel_mob_omb_esquerdo',
    'nivelPranchaVentral',
    'nivelExtensaoColuna',
    'nivelPranchaLateralDireita',
    'nivelPranchaLateralEsquerda',
    'pontosPranchaVentral',
    'pontosExtensaoColuna',
    'pontosPranchaLateralDireita',
    'pontosPranchaLateralEsquerda',
    'forcaRelativaAgachamento',
    'forcaRelativaSupino',
    'forcaRelativaTerra',
    'forcaRelativaBarraFixa',
    'squat_nivel',
    'supino_nivel',
    'terra_nivel',
    'pontuacao_squat_nivel',
    'pontuacao_supino_nivel',
    'pontuacao_terra_nivel',
    'media_squat_jump',
    'vo2_estimado',
    'faixa_etaria',
    'nivel_vo2',
    'IMC',
    'ClassificacaoIMC',
]
FormularioAvaliacaoFisicaScalarFieldKeysT = TypeVar('FormularioAvaliacaoFisicaScalarFieldKeysT', bound=FormularioAvaliacaoFisicaScalarFieldKeys)

FormularioAvaliacaoFisicaRelationalFieldKeys = Literal[
        'user',
    ]

# Treino types

class TreinoOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Treino create method"""
    id: _str


class TreinoCreateInput(TreinoOptionalCreateInput):
    """Required arguments to the Treino create method"""
    nome: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class TreinoOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Treino create method, without relations"""
    id: _str


class TreinoCreateWithoutRelationsInput(TreinoOptionalCreateWithoutRelationsInput):
    """Required arguments to the Treino create method, without relations"""
    nome: _str


class TreinoCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'TreinoCreateWithoutRelationsInput'
    connect: 'TreinoWhereUniqueInput'


class TreinoCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['TreinoCreateWithoutRelationsInput', List['TreinoCreateWithoutRelationsInput']]
    connect: Union['TreinoWhereUniqueInput', List['TreinoWhereUniqueInput']]


_TreinoWhereUnique_id_Input = TypedDict(
    '_TreinoWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

TreinoWhereUniqueInput = _TreinoWhereUnique_id_Input


class TreinoUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    nome: _str


class TreinoUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    nome: _str


class TreinoUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['TreinoCreateWithoutRelationsInput']
    connect: List['TreinoWhereUniqueInput']
    set: List['TreinoWhereUniqueInput']
    disconnect: List['TreinoWhereUniqueInput']
    delete: List['TreinoWhereUniqueInput']

    # TODO
    # update: List['TreinoUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['TreinoUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['TreinoScalarWhereInput']
    # upsert: List['TreinoUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['TreinoCreateOrConnectWithoutRelationsInput']


class TreinoUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'TreinoCreateWithoutRelationsInput'
    connect: 'TreinoWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'TreinoUpdateInput'
    # upsert: 'TreinoUpsertWithoutRelationsInput'
    # connectOrCreate: 'TreinoCreateOrConnectWithoutRelationsInput'


class TreinoUpsertInput(TypedDict):
    create: 'TreinoCreateInput'
    update: 'TreinoUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Treino_id_OrderByInput = TypedDict(
    '_Treino_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Treino_nome_OrderByInput = TypedDict(
    '_Treino_nome_OrderByInput',
    {
        'nome': 'SortOrder',
    },
    total=True
)

TreinoOrderByInput = Union[
    '_Treino_id_OrderByInput',
    '_Treino_nome_OrderByInput',
]



# recursive Treino types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

TreinoRelationFilter = TypedDict(
    'TreinoRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class TreinoListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class TreinoInclude(TypedDict, total=False):
    """Treino relational arguments"""


    

class UserIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    accounts: Union[bool, 'FindManyAccountArgsFromTreinoRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromTreinoRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromTreinoRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromTreinoRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTreinoRecursive1']


class UserIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    accounts: Union[bool, 'FindManyAccountArgsFromTreinoRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromTreinoRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromTreinoRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromTreinoRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTreinoRecursive2']


class UserIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    accounts: Union[bool, 'FindManyAccountArgsFromTreinoRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromTreinoRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromTreinoRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromTreinoRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTreinoRecursive3']


class UserIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    accounts: Union[bool, 'FindManyAccountArgsFromTreinoRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromTreinoRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromTreinoRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromTreinoRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromTreinoRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromTreinoRecursive4']


class UserIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class UserArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyUserArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    role: Union[bool, 'RoleArgsFromTreinoRecursive1']
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class ProfileIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    role: Union[bool, 'RoleArgsFromTreinoRecursive2']
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class ProfileIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    role: Union[bool, 'RoleArgsFromTreinoRecursive3']
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class ProfileIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    role: Union[bool, 'RoleArgsFromTreinoRecursive4']
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class ProfileIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class ProfileArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyProfileArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive1']


class RoleIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive2']


class RoleIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive3']


class RoleIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    profiles: Union[bool, 'FindManyProfileArgsFromTreinoRecursive4']


class RoleIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class RoleArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyRoleArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    users: Union[bool, 'FindManyUserArgsFromTreinoRecursive1']
    responsible: Union[bool, 'UserArgsFromTreinoRecursive1']


class GymIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    users: Union[bool, 'FindManyUserArgsFromTreinoRecursive2']
    responsible: Union[bool, 'UserArgsFromTreinoRecursive2']


class GymIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    users: Union[bool, 'FindManyUserArgsFromTreinoRecursive3']
    responsible: Union[bool, 'UserArgsFromTreinoRecursive3']


class GymIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    users: Union[bool, 'FindManyUserArgsFromTreinoRecursive4']
    responsible: Union[bool, 'UserArgsFromTreinoRecursive4']


class GymIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class GymArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyGymArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class UserTypeIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class UserTypeIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class UserTypeIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class UserTypeIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class UserTypeArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyUserTypeArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class AccountIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class AccountIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class AccountIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class AccountIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class AccountArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyAccountArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class SessionIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class SessionIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class SessionIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class SessionIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class SessionArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManySessionArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""


class VerificationTokenIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""


class VerificationTokenIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""


class VerificationTokenIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""


class VerificationTokenIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class VerificationTokenArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyVerificationTokenArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class TodoIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class TodoIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class TodoIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class TodoIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class TodoArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyTodoArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class FormularioAvaliacaoFisicaIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class FormularioAvaliacaoFisicaIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class FormularioAvaliacaoFisicaIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class FormularioAvaliacaoFisicaIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class FormularioAvaliacaoFisicaArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""


class TreinoIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""


class TreinoIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""


class TreinoIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""


class TreinoIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class TreinoArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyTreinoArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromTreino(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive1']


class RegistraTreinoIncludeFromTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive2']


class RegistraTreinoIncludeFromTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive3']


class RegistraTreinoIncludeFromTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for Treino"""
    user: Union[bool, 'UserArgsFromTreinoRecursive4']


class RegistraTreinoIncludeFromTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for Treino"""

    

class RegistraTreinoArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    
    

class FindManyRegistraTreinoArgsFromTreino(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromTreinoRecursive1(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromTreinoRecursive2(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromTreinoRecursive3(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromTreinoRecursive4(TypedDict, total=False):
    """Arguments for Treino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyTreinoArgs = FindManyTreinoArgsFromTreino
FindFirstTreinoArgs = FindManyTreinoArgsFromTreino


    

class TreinoWhereInput(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    nome: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['TreinoWhereInputRecursive1', List['TreinoWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['TreinoWhereInputRecursive1']
    OR: List['TreinoWhereInputRecursive1']
    NOT: List['TreinoWhereInputRecursive1']


class TreinoWhereInputRecursive1(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    nome: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['TreinoWhereInputRecursive2', List['TreinoWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['TreinoWhereInputRecursive2']
    OR: List['TreinoWhereInputRecursive2']
    NOT: List['TreinoWhereInputRecursive2']


class TreinoWhereInputRecursive2(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    nome: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['TreinoWhereInputRecursive3', List['TreinoWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['TreinoWhereInputRecursive3']
    OR: List['TreinoWhereInputRecursive3']
    NOT: List['TreinoWhereInputRecursive3']


class TreinoWhereInputRecursive3(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    nome: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['TreinoWhereInputRecursive4', List['TreinoWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['TreinoWhereInputRecursive4']
    OR: List['TreinoWhereInputRecursive4']
    NOT: List['TreinoWhereInputRecursive4']


class TreinoWhereInputRecursive4(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    nome: Union[_str, 'types.StringFilter']



# aggregate Treino types


    

class TreinoScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    nome: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['TreinoScalarWhereWithAggregatesInputRecursive1']
    OR: List['TreinoScalarWhereWithAggregatesInputRecursive1']
    NOT: List['TreinoScalarWhereWithAggregatesInputRecursive1']


class TreinoScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    nome: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['TreinoScalarWhereWithAggregatesInputRecursive2']
    OR: List['TreinoScalarWhereWithAggregatesInputRecursive2']
    NOT: List['TreinoScalarWhereWithAggregatesInputRecursive2']


class TreinoScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    nome: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['TreinoScalarWhereWithAggregatesInputRecursive3']
    OR: List['TreinoScalarWhereWithAggregatesInputRecursive3']
    NOT: List['TreinoScalarWhereWithAggregatesInputRecursive3']


class TreinoScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    nome: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['TreinoScalarWhereWithAggregatesInputRecursive4']
    OR: List['TreinoScalarWhereWithAggregatesInputRecursive4']
    NOT: List['TreinoScalarWhereWithAggregatesInputRecursive4']


class TreinoScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Treino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    nome: Union[_str, 'types.StringWithAggregatesFilter']



class TreinoGroupByOutput(TypedDict, total=False):
    id: _str
    nome: _str
    _sum: 'TreinoSumAggregateOutput'
    _avg: 'TreinoAvgAggregateOutput'
    _min: 'TreinoMinAggregateOutput'
    _max: 'TreinoMaxAggregateOutput'
    _count: 'TreinoCountAggregateOutput'


class TreinoAvgAggregateOutput(TypedDict, total=False):
    """Treino output for aggregating averages"""


class TreinoSumAggregateOutput(TypedDict, total=False):
    """Treino output for aggregating sums"""


class TreinoScalarAggregateOutput(TypedDict, total=False):
    """Treino output including scalar fields"""
    id: _str
    nome: _str


TreinoMinAggregateOutput = TreinoScalarAggregateOutput
TreinoMaxAggregateOutput = TreinoScalarAggregateOutput


class TreinoMaxAggregateInput(TypedDict, total=False):
    """Treino input for aggregating by max"""
    id: bool
    nome: bool


class TreinoMinAggregateInput(TypedDict, total=False):
    """Treino input for aggregating by min"""
    id: bool
    nome: bool


class TreinoNumberAggregateInput(TypedDict, total=False):
    """Treino input for aggregating numbers"""


TreinoAvgAggregateInput = TreinoNumberAggregateInput
TreinoSumAggregateInput = TreinoNumberAggregateInput


TreinoCountAggregateInput = TypedDict(
    'TreinoCountAggregateInput',
    {
        'id': bool,
        'nome': bool,
        '_all': bool,
    },
    total=False,
)

TreinoCountAggregateOutput = TypedDict(
    'TreinoCountAggregateOutput',
    {
        'id': int,
        'nome': int,
        '_all': int,
    },
    total=False,
)


TreinoKeys = Literal[
    'id',
    'nome',
]
TreinoScalarFieldKeys = Literal[
    'id',
    'nome',
]
TreinoScalarFieldKeysT = TypeVar('TreinoScalarFieldKeysT', bound=TreinoScalarFieldKeys)

TreinoRelationalFieldKeys = _NoneType

# RegistraTreino types

class RegistraTreinoOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the RegistraTreino create method"""
    id: _str
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'


class RegistraTreinoCreateInput(RegistraTreinoOptionalCreateInput):
    """Required arguments to the RegistraTreino create method"""
    cdTipodeTreino: _str
    cdTreino: _str
    dataHoraRegistroInterno: _str
    dataHoraRegistroPeloUser: _str
    treinoId: _str
    escalacomosesente: _int
    escaladisposicaoantesdasecao: _int
    estadocontroleinterno: _int
    logdoprocessoderegistro: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class RegistraTreinoOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the RegistraTreino create method, without relations"""
    id: _str
    userId: _str


class RegistraTreinoCreateWithoutRelationsInput(RegistraTreinoOptionalCreateWithoutRelationsInput):
    """Required arguments to the RegistraTreino create method, without relations"""
    cdTipodeTreino: _str
    cdTreino: _str
    dataHoraRegistroInterno: _str
    dataHoraRegistroPeloUser: _str
    treinoId: _str
    escalacomosesente: _int
    escaladisposicaoantesdasecao: _int
    estadocontroleinterno: _int
    logdoprocessoderegistro: _str


class RegistraTreinoCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'RegistraTreinoCreateWithoutRelationsInput'
    connect: 'RegistraTreinoWhereUniqueInput'


class RegistraTreinoCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['RegistraTreinoCreateWithoutRelationsInput', List['RegistraTreinoCreateWithoutRelationsInput']]
    connect: Union['RegistraTreinoWhereUniqueInput', List['RegistraTreinoWhereUniqueInput']]


_RegistraTreinoWhereUnique_id_Input = TypedDict(
    '_RegistraTreinoWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

RegistraTreinoWhereUniqueInput = _RegistraTreinoWhereUnique_id_Input


class RegistraTreinoUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    cdTipodeTreino: _str
    cdTreino: _str
    user: 'UserUpdateOneWithoutRelationsInput'
    dataHoraRegistroInterno: _str
    dataHoraRegistroPeloUser: _str
    treinoId: _str
    escalacomosesente: Union[AtomicIntInput, _int]
    escaladisposicaoantesdasecao: Union[AtomicIntInput, _int]
    estadocontroleinterno: Union[AtomicIntInput, _int]
    logdoprocessoderegistro: _str


class RegistraTreinoUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    cdTipodeTreino: _str
    cdTreino: _str
    dataHoraRegistroInterno: _str
    dataHoraRegistroPeloUser: _str
    treinoId: _str
    escalacomosesente: Union[AtomicIntInput, _int]
    escaladisposicaoantesdasecao: Union[AtomicIntInput, _int]
    estadocontroleinterno: Union[AtomicIntInput, _int]
    logdoprocessoderegistro: _str


class RegistraTreinoUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['RegistraTreinoCreateWithoutRelationsInput']
    connect: List['RegistraTreinoWhereUniqueInput']
    set: List['RegistraTreinoWhereUniqueInput']
    disconnect: List['RegistraTreinoWhereUniqueInput']
    delete: List['RegistraTreinoWhereUniqueInput']

    # TODO
    # update: List['RegistraTreinoUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['RegistraTreinoUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['RegistraTreinoScalarWhereInput']
    # upsert: List['RegistraTreinoUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['RegistraTreinoCreateOrConnectWithoutRelationsInput']


class RegistraTreinoUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'RegistraTreinoCreateWithoutRelationsInput'
    connect: 'RegistraTreinoWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'RegistraTreinoUpdateInput'
    # upsert: 'RegistraTreinoUpsertWithoutRelationsInput'
    # connectOrCreate: 'RegistraTreinoCreateOrConnectWithoutRelationsInput'


class RegistraTreinoUpsertInput(TypedDict):
    create: 'RegistraTreinoCreateInput'
    update: 'RegistraTreinoUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_RegistraTreino_id_OrderByInput = TypedDict(
    '_RegistraTreino_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_RegistraTreino_cdTipodeTreino_OrderByInput = TypedDict(
    '_RegistraTreino_cdTipodeTreino_OrderByInput',
    {
        'cdTipodeTreino': 'SortOrder',
    },
    total=True
)

_RegistraTreino_cdTreino_OrderByInput = TypedDict(
    '_RegistraTreino_cdTreino_OrderByInput',
    {
        'cdTreino': 'SortOrder',
    },
    total=True
)

_RegistraTreino_userId_OrderByInput = TypedDict(
    '_RegistraTreino_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_RegistraTreino_dataHoraRegistroInterno_OrderByInput = TypedDict(
    '_RegistraTreino_dataHoraRegistroInterno_OrderByInput',
    {
        'dataHoraRegistroInterno': 'SortOrder',
    },
    total=True
)

_RegistraTreino_dataHoraRegistroPeloUser_OrderByInput = TypedDict(
    '_RegistraTreino_dataHoraRegistroPeloUser_OrderByInput',
    {
        'dataHoraRegistroPeloUser': 'SortOrder',
    },
    total=True
)

_RegistraTreino_treinoId_OrderByInput = TypedDict(
    '_RegistraTreino_treinoId_OrderByInput',
    {
        'treinoId': 'SortOrder',
    },
    total=True
)

_RegistraTreino_escalacomosesente_OrderByInput = TypedDict(
    '_RegistraTreino_escalacomosesente_OrderByInput',
    {
        'escalacomosesente': 'SortOrder',
    },
    total=True
)

_RegistraTreino_escaladisposicaoantesdasecao_OrderByInput = TypedDict(
    '_RegistraTreino_escaladisposicaoantesdasecao_OrderByInput',
    {
        'escaladisposicaoantesdasecao': 'SortOrder',
    },
    total=True
)

_RegistraTreino_estadocontroleinterno_OrderByInput = TypedDict(
    '_RegistraTreino_estadocontroleinterno_OrderByInput',
    {
        'estadocontroleinterno': 'SortOrder',
    },
    total=True
)

_RegistraTreino_logdoprocessoderegistro_OrderByInput = TypedDict(
    '_RegistraTreino_logdoprocessoderegistro_OrderByInput',
    {
        'logdoprocessoderegistro': 'SortOrder',
    },
    total=True
)

RegistraTreinoOrderByInput = Union[
    '_RegistraTreino_id_OrderByInput',
    '_RegistraTreino_cdTipodeTreino_OrderByInput',
    '_RegistraTreino_cdTreino_OrderByInput',
    '_RegistraTreino_userId_OrderByInput',
    '_RegistraTreino_dataHoraRegistroInterno_OrderByInput',
    '_RegistraTreino_dataHoraRegistroPeloUser_OrderByInput',
    '_RegistraTreino_treinoId_OrderByInput',
    '_RegistraTreino_escalacomosesente_OrderByInput',
    '_RegistraTreino_escaladisposicaoantesdasecao_OrderByInput',
    '_RegistraTreino_estadocontroleinterno_OrderByInput',
    '_RegistraTreino_logdoprocessoderegistro_OrderByInput',
]



# recursive RegistraTreino types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

RegistraTreinoRelationFilter = TypedDict(
    'RegistraTreinoRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class RegistraTreinoListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class RegistraTreinoInclude(TypedDict, total=False):
    """RegistraTreino relational arguments"""
    user: Union[bool, 'UserArgsFromRegistraTreino']


    

class UserIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    accounts: Union[bool, 'FindManyAccountArgsFromRegistraTreinoRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromRegistraTreinoRecursive1']
    todos: Union[bool, 'FindManyTodoArgsFromRegistraTreinoRecursive1']
    userType: Union[bool, 'FindManyUserTypeArgsFromRegistraTreinoRecursive1']
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive1']
    gyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive1']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive1']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive1']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive1']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRegistraTreinoRecursive1']


class UserIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    accounts: Union[bool, 'FindManyAccountArgsFromRegistraTreinoRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromRegistraTreinoRecursive2']
    todos: Union[bool, 'FindManyTodoArgsFromRegistraTreinoRecursive2']
    userType: Union[bool, 'FindManyUserTypeArgsFromRegistraTreinoRecursive2']
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive2']
    gyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive2']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive2']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive2']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive2']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRegistraTreinoRecursive2']


class UserIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    accounts: Union[bool, 'FindManyAccountArgsFromRegistraTreinoRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromRegistraTreinoRecursive3']
    todos: Union[bool, 'FindManyTodoArgsFromRegistraTreinoRecursive3']
    userType: Union[bool, 'FindManyUserTypeArgsFromRegistraTreinoRecursive3']
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive3']
    gyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive3']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive3']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive3']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive3']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRegistraTreinoRecursive3']


class UserIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    accounts: Union[bool, 'FindManyAccountArgsFromRegistraTreinoRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromRegistraTreinoRecursive4']
    todos: Union[bool, 'FindManyTodoArgsFromRegistraTreinoRecursive4']
    userType: Union[bool, 'FindManyUserTypeArgsFromRegistraTreinoRecursive4']
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive4']
    gyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive4']
    responsibleGyms: Union[bool, 'FindManyGymArgsFromRegistraTreinoRecursive4']
    questionarioProntidaoAvaliacaoFisica: Union[bool, 'FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive4']
    formularioAvaliacaoFisica: Union[bool, 'FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive4']
    registros: Union[bool, 'FindManyRegistraTreinoArgsFromRegistraTreinoRecursive4']


class UserIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class UserArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyUserArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class ProfileIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    role: Union[bool, 'RoleArgsFromRegistraTreinoRecursive1']
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class ProfileIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    role: Union[bool, 'RoleArgsFromRegistraTreinoRecursive2']
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class ProfileIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    role: Union[bool, 'RoleArgsFromRegistraTreinoRecursive3']
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class ProfileIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    role: Union[bool, 'RoleArgsFromRegistraTreinoRecursive4']
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class ProfileIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class ProfileArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'ProfileIncludeFromProfileRecursive1'


class ProfileArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'ProfileIncludeFromProfileRecursive2'


class ProfileArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'ProfileIncludeFromProfileRecursive3'


class ProfileArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'ProfileIncludeFromProfileRecursive4'


class ProfileArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyProfileArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive1'


class FindManyProfileArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive2'


class FindManyProfileArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive3'


class FindManyProfileArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    include: 'ProfileIncludeFromProfileRecursive4'


class FindManyProfileArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['ProfileOrderByInput', List['ProfileOrderByInput']]
    where: 'ProfileWhereInput'
    cursor: 'ProfileWhereUniqueInput'
    distinct: List['ProfileScalarFieldKeys']
    
    

class RoleIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive1']


class RoleIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive2']


class RoleIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive3']


class RoleIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    profiles: Union[bool, 'FindManyProfileArgsFromRegistraTreinoRecursive4']


class RoleIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class RoleArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RoleIncludeFromRoleRecursive1'


class RoleArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RoleIncludeFromRoleRecursive2'


class RoleArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RoleIncludeFromRoleRecursive3'


class RoleArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RoleIncludeFromRoleRecursive4'


class RoleArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyRoleArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive1'


class FindManyRoleArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive2'


class FindManyRoleArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive3'


class FindManyRoleArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    include: 'RoleIncludeFromRoleRecursive4'


class FindManyRoleArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RoleOrderByInput', List['RoleOrderByInput']]
    where: 'RoleWhereInput'
    cursor: 'RoleWhereUniqueInput'
    distinct: List['RoleScalarFieldKeys']
    
    

class GymIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    users: Union[bool, 'FindManyUserArgsFromRegistraTreinoRecursive1']
    responsible: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class GymIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    users: Union[bool, 'FindManyUserArgsFromRegistraTreinoRecursive2']
    responsible: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class GymIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    users: Union[bool, 'FindManyUserArgsFromRegistraTreinoRecursive3']
    responsible: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class GymIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    users: Union[bool, 'FindManyUserArgsFromRegistraTreinoRecursive4']
    responsible: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class GymIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class GymArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'GymIncludeFromGymRecursive1'


class GymArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'GymIncludeFromGymRecursive2'


class GymArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'GymIncludeFromGymRecursive3'


class GymArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'GymIncludeFromGymRecursive4'


class GymArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyGymArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive1'


class FindManyGymArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive2'


class FindManyGymArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive3'


class FindManyGymArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    include: 'GymIncludeFromGymRecursive4'


class FindManyGymArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['GymOrderByInput', List['GymOrderByInput']]
    where: 'GymWhereInput'
    cursor: 'GymWhereUniqueInput'
    distinct: List['GymScalarFieldKeys']
    
    

class UserTypeIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class UserTypeIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class UserTypeIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class UserTypeIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class UserTypeIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class UserTypeArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class UserTypeArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class UserTypeArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class UserTypeArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class UserTypeArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyUserTypeArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive1'


class FindManyUserTypeArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive2'


class FindManyUserTypeArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive3'


class FindManyUserTypeArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    include: 'UserTypeIncludeFromUserTypeRecursive4'


class FindManyUserTypeArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['UserTypeOrderByInput', List['UserTypeOrderByInput']]
    where: 'UserTypeWhereInput'
    cursor: 'UserTypeWhereUniqueInput'
    distinct: List['UserTypeScalarFieldKeys']
    
    

class AccountIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class AccountIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class AccountIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class AccountIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class AccountIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class AccountArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyAccountArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class SessionIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class SessionIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class SessionIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class SessionIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class SessionArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManySessionArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class VerificationTokenIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class VerificationTokenIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class VerificationTokenIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class VerificationTokenIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class VerificationTokenArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyVerificationTokenArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class TodoIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class TodoIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class TodoIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class TodoIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class TodoIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class TodoArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TodoIncludeFromTodoRecursive1'


class TodoArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TodoIncludeFromTodoRecursive2'


class TodoArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TodoIncludeFromTodoRecursive3'


class TodoArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TodoIncludeFromTodoRecursive4'


class TodoArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyTodoArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive1'


class FindManyTodoArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive2'


class FindManyTodoArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive3'


class FindManyTodoArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    include: 'TodoIncludeFromTodoRecursive4'


class FindManyTodoArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TodoOrderByInput', List['TodoOrderByInput']]
    where: 'TodoWhereInput'
    cursor: 'TodoWhereUniqueInput'
    distinct: List['TodoScalarFieldKeys']
    
    

class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class QuestionarioProntidaoAvaliacaoFisicaIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class QuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class QuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive1'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive2'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive3'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    include: 'QuestionarioProntidaoAvaliacaoFisicaIncludeFromQuestionarioProntidaoAvaliacaoFisicaRecursive4'


class FindManyQuestionarioProntidaoAvaliacaoFisicaArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['QuestionarioProntidaoAvaliacaoFisicaOrderByInput', List['QuestionarioProntidaoAvaliacaoFisicaOrderByInput']]
    where: 'QuestionarioProntidaoAvaliacaoFisicaWhereInput'
    cursor: 'QuestionarioProntidaoAvaliacaoFisicaWhereUniqueInput'
    distinct: List['QuestionarioProntidaoAvaliacaoFisicaScalarFieldKeys']
    
    

class FormularioAvaliacaoFisicaIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class FormularioAvaliacaoFisicaIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class FormularioAvaliacaoFisicaIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class FormularioAvaliacaoFisicaIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class FormularioAvaliacaoFisicaIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class FormularioAvaliacaoFisicaArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive1'


class FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive2'


class FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive3'


class FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    include: 'FormularioAvaliacaoFisicaIncludeFromFormularioAvaliacaoFisicaRecursive4'


class FindManyFormularioAvaliacaoFisicaArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['FormularioAvaliacaoFisicaOrderByInput', List['FormularioAvaliacaoFisicaOrderByInput']]
    where: 'FormularioAvaliacaoFisicaWhereInput'
    cursor: 'FormularioAvaliacaoFisicaWhereUniqueInput'
    distinct: List['FormularioAvaliacaoFisicaScalarFieldKeys']
    
    

class TreinoIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class TreinoIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class TreinoIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class TreinoIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""


class TreinoIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class TreinoArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TreinoIncludeFromTreinoRecursive1'


class TreinoArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TreinoIncludeFromTreinoRecursive2'


class TreinoArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TreinoIncludeFromTreinoRecursive3'


class TreinoArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'TreinoIncludeFromTreinoRecursive4'


class TreinoArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyTreinoArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive1'


class FindManyTreinoArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive2'


class FindManyTreinoArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive3'


class FindManyTreinoArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    include: 'TreinoIncludeFromTreinoRecursive4'


class FindManyTreinoArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['TreinoOrderByInput', List['TreinoOrderByInput']]
    where: 'TreinoWhereInput'
    cursor: 'TreinoWhereUniqueInput'
    distinct: List['TreinoScalarFieldKeys']
    
    

class RegistraTreinoIncludeFromRegistraTreino(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive1']


class RegistraTreinoIncludeFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive2']


class RegistraTreinoIncludeFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive3']


class RegistraTreinoIncludeFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""
    user: Union[bool, 'UserArgsFromRegistraTreinoRecursive4']


class RegistraTreinoIncludeFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Relational arguments for RegistraTreino"""

    

class RegistraTreinoArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class RegistraTreinoArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class RegistraTreinoArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class RegistraTreinoArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class RegistraTreinoArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    
    

class FindManyRegistraTreinoArgsFromRegistraTreino(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive1'


class FindManyRegistraTreinoArgsFromRegistraTreinoRecursive1(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive2'


class FindManyRegistraTreinoArgsFromRegistraTreinoRecursive2(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive3'


class FindManyRegistraTreinoArgsFromRegistraTreinoRecursive3(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    include: 'RegistraTreinoIncludeFromRegistraTreinoRecursive4'


class FindManyRegistraTreinoArgsFromRegistraTreinoRecursive4(TypedDict, total=False):
    """Arguments for RegistraTreino"""
    take: int
    skip: int
    order_by: Union['RegistraTreinoOrderByInput', List['RegistraTreinoOrderByInput']]
    where: 'RegistraTreinoWhereInput'
    cursor: 'RegistraTreinoWhereUniqueInput'
    distinct: List['RegistraTreinoScalarFieldKeys']
    


FindManyRegistraTreinoArgs = FindManyRegistraTreinoArgsFromRegistraTreino
FindFirstRegistraTreinoArgs = FindManyRegistraTreinoArgsFromRegistraTreino


    

class RegistraTreinoWhereInput(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    cdTipodeTreino: Union[_str, 'types.StringFilter']
    cdTreino: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    dataHoraRegistroInterno: Union[_str, 'types.StringFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringFilter']
    treinoId: Union[_str, 'types.StringFilter']
    escalacomosesente: Union[_int, 'types.IntFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntFilter']
    estadocontroleinterno: Union[_int, 'types.IntFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['RegistraTreinoWhereInputRecursive1', List['RegistraTreinoWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['RegistraTreinoWhereInputRecursive1']
    OR: List['RegistraTreinoWhereInputRecursive1']
    NOT: List['RegistraTreinoWhereInputRecursive1']


class RegistraTreinoWhereInputRecursive1(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    cdTipodeTreino: Union[_str, 'types.StringFilter']
    cdTreino: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    dataHoraRegistroInterno: Union[_str, 'types.StringFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringFilter']
    treinoId: Union[_str, 'types.StringFilter']
    escalacomosesente: Union[_int, 'types.IntFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntFilter']
    estadocontroleinterno: Union[_int, 'types.IntFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['RegistraTreinoWhereInputRecursive2', List['RegistraTreinoWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['RegistraTreinoWhereInputRecursive2']
    OR: List['RegistraTreinoWhereInputRecursive2']
    NOT: List['RegistraTreinoWhereInputRecursive2']


class RegistraTreinoWhereInputRecursive2(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    cdTipodeTreino: Union[_str, 'types.StringFilter']
    cdTreino: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    dataHoraRegistroInterno: Union[_str, 'types.StringFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringFilter']
    treinoId: Union[_str, 'types.StringFilter']
    escalacomosesente: Union[_int, 'types.IntFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntFilter']
    estadocontroleinterno: Union[_int, 'types.IntFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['RegistraTreinoWhereInputRecursive3', List['RegistraTreinoWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['RegistraTreinoWhereInputRecursive3']
    OR: List['RegistraTreinoWhereInputRecursive3']
    NOT: List['RegistraTreinoWhereInputRecursive3']


class RegistraTreinoWhereInputRecursive3(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    cdTipodeTreino: Union[_str, 'types.StringFilter']
    cdTreino: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    dataHoraRegistroInterno: Union[_str, 'types.StringFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringFilter']
    treinoId: Union[_str, 'types.StringFilter']
    escalacomosesente: Union[_int, 'types.IntFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntFilter']
    estadocontroleinterno: Union[_int, 'types.IntFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringFilter']

    # should be noted that AND and NOT should be Union['RegistraTreinoWhereInputRecursive4', List['RegistraTreinoWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['RegistraTreinoWhereInputRecursive4']
    OR: List['RegistraTreinoWhereInputRecursive4']
    NOT: List['RegistraTreinoWhereInputRecursive4']


class RegistraTreinoWhereInputRecursive4(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    cdTipodeTreino: Union[_str, 'types.StringFilter']
    cdTreino: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    dataHoraRegistroInterno: Union[_str, 'types.StringFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringFilter']
    treinoId: Union[_str, 'types.StringFilter']
    escalacomosesente: Union[_int, 'types.IntFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntFilter']
    estadocontroleinterno: Union[_int, 'types.IntFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringFilter']



# aggregate RegistraTreino types


    

class RegistraTreinoScalarWhereWithAggregatesInput(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    cdTipodeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    cdTreino: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroInterno: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringWithAggregatesFilter']
    treinoId: Union[_str, 'types.StringWithAggregatesFilter']
    escalacomosesente: Union[_int, 'types.IntWithAggregatesFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntWithAggregatesFilter']
    estadocontroleinterno: Union[_int, 'types.IntWithAggregatesFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive1']
    OR: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive1']
    NOT: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive1']


class RegistraTreinoScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    cdTipodeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    cdTreino: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroInterno: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringWithAggregatesFilter']
    treinoId: Union[_str, 'types.StringWithAggregatesFilter']
    escalacomosesente: Union[_int, 'types.IntWithAggregatesFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntWithAggregatesFilter']
    estadocontroleinterno: Union[_int, 'types.IntWithAggregatesFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive2']
    OR: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive2']
    NOT: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive2']


class RegistraTreinoScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    cdTipodeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    cdTreino: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroInterno: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringWithAggregatesFilter']
    treinoId: Union[_str, 'types.StringWithAggregatesFilter']
    escalacomosesente: Union[_int, 'types.IntWithAggregatesFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntWithAggregatesFilter']
    estadocontroleinterno: Union[_int, 'types.IntWithAggregatesFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive3']
    OR: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive3']
    NOT: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive3']


class RegistraTreinoScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    cdTipodeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    cdTreino: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroInterno: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringWithAggregatesFilter']
    treinoId: Union[_str, 'types.StringWithAggregatesFilter']
    escalacomosesente: Union[_int, 'types.IntWithAggregatesFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntWithAggregatesFilter']
    estadocontroleinterno: Union[_int, 'types.IntWithAggregatesFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive4']
    OR: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive4']
    NOT: List['RegistraTreinoScalarWhereWithAggregatesInputRecursive4']


class RegistraTreinoScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """RegistraTreino arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    cdTipodeTreino: Union[_str, 'types.StringWithAggregatesFilter']
    cdTreino: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroInterno: Union[_str, 'types.StringWithAggregatesFilter']
    dataHoraRegistroPeloUser: Union[_str, 'types.StringWithAggregatesFilter']
    treinoId: Union[_str, 'types.StringWithAggregatesFilter']
    escalacomosesente: Union[_int, 'types.IntWithAggregatesFilter']
    escaladisposicaoantesdasecao: Union[_int, 'types.IntWithAggregatesFilter']
    estadocontroleinterno: Union[_int, 'types.IntWithAggregatesFilter']
    logdoprocessoderegistro: Union[_str, 'types.StringWithAggregatesFilter']



class RegistraTreinoGroupByOutput(TypedDict, total=False):
    id: _str
    cdTipodeTreino: _str
    cdTreino: _str
    userId: _str
    dataHoraRegistroInterno: _str
    dataHoraRegistroPeloUser: _str
    treinoId: _str
    escalacomosesente: _int
    escaladisposicaoantesdasecao: _int
    estadocontroleinterno: _int
    logdoprocessoderegistro: _str
    _sum: 'RegistraTreinoSumAggregateOutput'
    _avg: 'RegistraTreinoAvgAggregateOutput'
    _min: 'RegistraTreinoMinAggregateOutput'
    _max: 'RegistraTreinoMaxAggregateOutput'
    _count: 'RegistraTreinoCountAggregateOutput'


class RegistraTreinoAvgAggregateOutput(TypedDict, total=False):
    """RegistraTreino output for aggregating averages"""
    escalacomosesente: float
    escaladisposicaoantesdasecao: float
    estadocontroleinterno: float


class RegistraTreinoSumAggregateOutput(TypedDict, total=False):
    """RegistraTreino output for aggregating sums"""
    escalacomosesente: _int
    escaladisposicaoantesdasecao: _int
    estadocontroleinterno: _int


class RegistraTreinoScalarAggregateOutput(TypedDict, total=False):
    """RegistraTreino output including scalar fields"""
    id: _str
    cdTipodeTreino: _str
    cdTreino: _str
    userId: _str
    dataHoraRegistroInterno: _str
    dataHoraRegistroPeloUser: _str
    treinoId: _str
    escalacomosesente: _int
    escaladisposicaoantesdasecao: _int
    estadocontroleinterno: _int
    logdoprocessoderegistro: _str


RegistraTreinoMinAggregateOutput = RegistraTreinoScalarAggregateOutput
RegistraTreinoMaxAggregateOutput = RegistraTreinoScalarAggregateOutput


class RegistraTreinoMaxAggregateInput(TypedDict, total=False):
    """RegistraTreino input for aggregating by max"""
    id: bool
    cdTipodeTreino: bool
    cdTreino: bool
    userId: bool
    dataHoraRegistroInterno: bool
    dataHoraRegistroPeloUser: bool
    treinoId: bool
    escalacomosesente: bool
    escaladisposicaoantesdasecao: bool
    estadocontroleinterno: bool
    logdoprocessoderegistro: bool


class RegistraTreinoMinAggregateInput(TypedDict, total=False):
    """RegistraTreino input for aggregating by min"""
    id: bool
    cdTipodeTreino: bool
    cdTreino: bool
    userId: bool
    dataHoraRegistroInterno: bool
    dataHoraRegistroPeloUser: bool
    treinoId: bool
    escalacomosesente: bool
    escaladisposicaoantesdasecao: bool
    estadocontroleinterno: bool
    logdoprocessoderegistro: bool


class RegistraTreinoNumberAggregateInput(TypedDict, total=False):
    """RegistraTreino input for aggregating numbers"""
    escalacomosesente: bool
    escaladisposicaoantesdasecao: bool
    estadocontroleinterno: bool


RegistraTreinoAvgAggregateInput = RegistraTreinoNumberAggregateInput
RegistraTreinoSumAggregateInput = RegistraTreinoNumberAggregateInput


RegistraTreinoCountAggregateInput = TypedDict(
    'RegistraTreinoCountAggregateInput',
    {
        'id': bool,
        'cdTipodeTreino': bool,
        'cdTreino': bool,
        'userId': bool,
        'dataHoraRegistroInterno': bool,
        'dataHoraRegistroPeloUser': bool,
        'treinoId': bool,
        'escalacomosesente': bool,
        'escaladisposicaoantesdasecao': bool,
        'estadocontroleinterno': bool,
        'logdoprocessoderegistro': bool,
        '_all': bool,
    },
    total=False,
)

RegistraTreinoCountAggregateOutput = TypedDict(
    'RegistraTreinoCountAggregateOutput',
    {
        'id': int,
        'cdTipodeTreino': int,
        'cdTreino': int,
        'userId': int,
        'dataHoraRegistroInterno': int,
        'dataHoraRegistroPeloUser': int,
        'treinoId': int,
        'escalacomosesente': int,
        'escaladisposicaoantesdasecao': int,
        'estadocontroleinterno': int,
        'logdoprocessoderegistro': int,
        '_all': int,
    },
    total=False,
)


RegistraTreinoKeys = Literal[
    'id',
    'cdTipodeTreino',
    'cdTreino',
    'userId',
    'user',
    'dataHoraRegistroInterno',
    'dataHoraRegistroPeloUser',
    'treinoId',
    'escalacomosesente',
    'escaladisposicaoantesdasecao',
    'estadocontroleinterno',
    'logdoprocessoderegistro',
]
RegistraTreinoScalarFieldKeys = Literal[
    'id',
    'cdTipodeTreino',
    'cdTreino',
    'userId',
    'dataHoraRegistroInterno',
    'dataHoraRegistroPeloUser',
    'treinoId',
    'escalacomosesente',
    'escaladisposicaoantesdasecao',
    'estadocontroleinterno',
    'logdoprocessoderegistro',
]
RegistraTreinoScalarFieldKeysT = TypeVar('RegistraTreinoScalarFieldKeysT', bound=RegistraTreinoScalarFieldKeys)

RegistraTreinoRelationalFieldKeys = Literal[
        'user',
    ]



# we have to import ourselves as types can be namespaced to types
from . import types, enums, models, fields